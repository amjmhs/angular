{"version":3,"file":"compiler.js","sources":["../../../packages/compiler/src/ml_parser/tags.js","../../../packages/compiler/src/ml_parser/html_tags.js","../../../packages/compiler/src/selector.js","../../../packages/compiler/src/core.js","../../../packages/compiler/src/util.js","../../../packages/compiler/src/version.js","../../../packages/compiler/src/template_parser/template_ast.js","../../../packages/compiler/src/config.js","../../../packages/compiler/src/aot/static_symbol.js","../../../packages/compiler/src/compile_metadata.js","../../../packages/compiler/src/ast_path.js","../../../packages/compiler/src/ml_parser/ast.js","../../../packages/compiler/src/assertions.js","../../../packages/compiler/src/ml_parser/interpolation_config.js","../../../packages/compiler/src/style_url_resolver.js","../../../packages/compiler/src/template_parser/template_preparser.js","../../../packages/compiler/src/directive_normalizer.js","../../../packages/compiler/src/directive_resolver.js","../../../packages/compiler/src/chars.js","../../../packages/compiler/src/expression_parser/lexer.js","../../../packages/compiler/src/expression_parser/ast.js","../../../packages/compiler/src/expression_parser/parser.js","../../../packages/compiler/src/parse_util.js","../../../packages/compiler/src/ml_parser/lexer.js","../../../packages/compiler/src/ml_parser/parser.js","../../../packages/compiler/src/i18n/digest.js","../../../packages/compiler/src/i18n/i18n_ast.js","../../../packages/compiler/src/i18n/serializers/placeholder.js","../../../packages/compiler/src/i18n/i18n_parser.js","../../../packages/compiler/src/i18n/parse_util.js","../../../packages/compiler/src/i18n/extractor_merger.js","../../../packages/compiler/src/ml_parser/xml_tags.js","../../../packages/compiler/src/ml_parser/xml_parser.js","../../../packages/compiler/src/i18n/serializers/serializer.js","../../../packages/compiler/src/i18n/serializers/xml_helper.js","../../../packages/compiler/src/i18n/serializers/xliff.js","../../../packages/compiler/src/i18n/serializers/xliff2.js","../../../packages/compiler/src/i18n/serializers/xmb.js","../../../packages/compiler/src/i18n/serializers/xtb.js","../../../packages/compiler/src/ml_parser/html_parser.js","../../../packages/compiler/src/i18n/translation_bundle.js","../../../packages/compiler/src/i18n/i18n_html_parser.js","../../../packages/compiler/src/identifiers.js","../../../packages/compiler/src/output/output_ast.js","../../../packages/compiler/src/output/value_util.js","../../../packages/compiler/src/injectable_compiler.js","../../../packages/compiler/src/aot/util.js","../../../packages/compiler/src/lifecycle_reflector.js","../../../packages/compiler/src/metadata_resolver.js","../../../packages/compiler/src/provider_analyzer.js","../../../packages/compiler/src/view_compiler/provider_compiler.js","../../../packages/compiler/src/ng_module_compiler.js","../../../packages/compiler/src/ng_module_resolver.js","../../../packages/compiler/src/output/source_map.js","../../../packages/compiler/src/output/abstract_emitter.js","../../../packages/compiler/src/output/ts_emitter.js","../../../packages/compiler/src/pipe_resolver.js","../../../packages/compiler/src/schema/dom_security_schema.js","../../../packages/compiler/src/schema/element_schema_registry.js","../../../packages/compiler/src/schema/dom_element_schema_registry.js","../../../packages/compiler/src/shadow_css.js","../../../packages/compiler/src/style_compiler.js","../../../packages/compiler/src/ml_parser/html_whitespaces.js","../../../packages/compiler/src/ml_parser/icu_ast_expander.js","../../../packages/compiler/src/template_parser/binding_parser.js","../../../packages/compiler/src/template_parser/template_parser.js","../../../packages/compiler/src/compiler_util/expression_converter.js","../../../packages/compiler/src/view_compiler/type_check_compiler.js","../../../packages/compiler/src/view_compiler/view_compiler.js","../../../packages/compiler/src/constant_pool.js","../../../packages/compiler/src/i18n/message_bundle.js","../../../packages/compiler/src/output/map_util.js","../../../packages/compiler/src/render3/r3_identifiers.js","../../../packages/compiler/src/render3/view/util.js","../../../packages/compiler/src/render3/r3_factory.js","../../../packages/compiler/src/render3/util.js","../../../packages/compiler/src/render3/r3_module_compiler.js","../../../packages/compiler/src/render3/r3_pipe_compiler.js","../../../packages/compiler/src/render3/r3_ast.js","../../../packages/compiler/src/render3/r3_template_transform.js","../../../packages/compiler/src/render3/view/styling.js","../../../packages/compiler/src/render3/view/template.js","../../../packages/compiler/src/render3/view/compiler.js","../../../packages/compiler/src/aot/generated_file.js","../../../packages/compiler/src/aot/lazy_routes.js","../../../packages/compiler/src/aot/static_symbol_resolver.js","../../../packages/compiler/src/aot/summary_serializer.js","../../../packages/compiler/src/aot/compiler.js","../../../packages/compiler/src/aot/formatted_error.js","../../../packages/compiler/src/aot/static_reflector.js","../../../packages/compiler/src/aot/summary_resolver.js","../../../packages/compiler/src/aot/compiler_factory.js","../../../packages/compiler/src/summary_resolver.js","../../../packages/compiler/src/output/output_interpreter.js","../../../packages/compiler/src/output/abstract_js_emitter.js","../../../packages/compiler/src/output/output_jit.js","../../../packages/compiler/src/jit/compiler.js","../../../packages/compiler/src/compile_reflector.js","../../../packages/compiler/src/url_resolver.js","../../../packages/compiler/src/resource_loader.js","../../../packages/compiler/src/i18n/extractor.js","../../../packages/compiler/src/i18n/index.js","../../../packages/compiler/src/injectable_compiler_2.js","../../../packages/compiler/src/render3/r3_jit.js","../../../packages/compiler/src/compiler.js","../../../packages/compiler/public_api.js","../../../packages/compiler/compiler.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nexport { TagContentType };\nTagContentType[TagContentType.RAW_TEXT] = 'RAW_TEXT';\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = 'ESCAPABLE_RAW_TEXT';\nTagContentType[TagContentType.PARSABLE_DATA] = 'PARSABLE_DATA';\n/**\n * @record\n */\nexport function TagDefinition() { }\n/** @type {?} */\nTagDefinition.prototype.closedByParent;\n/** @type {?} */\nTagDefinition.prototype.requiredParents;\n/** @type {?} */\nTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nTagDefinition.prototype.contentType;\n/** @type {?} */\nTagDefinition.prototype.isVoid;\n/** @type {?} */\nTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nTagDefinition.prototype.canSelfClose;\n/** @type {?} */\nTagDefinition.prototype.requireExtraParent;\n/** @type {?} */\nTagDefinition.prototype.isClosedByChild;\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    /** @type {?} */\n    const colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nexport function getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nexport function mergeNsAndName(prefix, localName) {\n    return prefix ? `:${prefix}:${localName}` : localName;\n}\n/** @type {?} */\nexport const NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/** @type {?} */\nexport const NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n//# sourceMappingURL=tags.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nexport class HtmlTagDefinition {\n    /**\n     * @param {?=} __0\n     */\n    constructor({ closedByChildren, requiredParents, implicitNamespacePrefix, contentType = TagContentType.PARSABLE_DATA, closedByParent = false, isVoid = false, ignoreFirstLf = false } = {}) {\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(tagName => this.requiredParents[tagName] = true);\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    requireExtraParent(currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        /** @type {?} */\n        const lcParent = currentParent.toLowerCase();\n        /** @type {?} */\n        const isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    isClosedByChild(name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    }\n}\nif (false) {\n    /** @type {?} */\n    HtmlTagDefinition.prototype.closedByChildren;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.closedByParent;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.requiredParents;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.parentToAdd;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.implicitNamespacePrefix;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.contentType;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.isVoid;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.ignoreFirstLf;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.canSelfClose;\n}\n/** @type {?} */\nlet _DEFAULT_TAG_DEFINITION;\n/** @type {?} */\nlet TAG_DEFINITIONS;\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getHtmlTagDefinition(tagName) {\n    if (!TAG_DEFINITIONS) {\n        _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n        TAG_DEFINITIONS = {\n            'base': new HtmlTagDefinition({ isVoid: true }),\n            'meta': new HtmlTagDefinition({ isVoid: true }),\n            'area': new HtmlTagDefinition({ isVoid: true }),\n            'embed': new HtmlTagDefinition({ isVoid: true }),\n            'link': new HtmlTagDefinition({ isVoid: true }),\n            'img': new HtmlTagDefinition({ isVoid: true }),\n            'input': new HtmlTagDefinition({ isVoid: true }),\n            'param': new HtmlTagDefinition({ isVoid: true }),\n            'hr': new HtmlTagDefinition({ isVoid: true }),\n            'br': new HtmlTagDefinition({ isVoid: true }),\n            'source': new HtmlTagDefinition({ isVoid: true }),\n            'track': new HtmlTagDefinition({ isVoid: true }),\n            'wbr': new HtmlTagDefinition({ isVoid: true }),\n            'p': new HtmlTagDefinition({\n                closedByChildren: [\n                    'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset',\n                    'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5',\n                    'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'ol',\n                    'p', 'pre', 'section', 'table', 'ul'\n                ],\n                closedByParent: true\n            }),\n            'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n            'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n            'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n            'tr': new HtmlTagDefinition({\n                closedByChildren: ['tr'],\n                requiredParents: ['tbody', 'tfoot', 'thead'],\n                closedByParent: true\n            }),\n            'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n            'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n            'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n            'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n            'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n            'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n            'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n            'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n            'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n            'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n            'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n        };\n    }\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n//# sourceMappingURL=html_tags.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getHtmlTagDefinition } from './ml_parser/html_tags';\n/** @type {?} */\nconst _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n    constructor() {\n        this.element = null;\n        this.classNames = [];\n        /**\n         * The selectors are encoded in pairs where:\n         * - even locations are attribute names\n         * - odd locations are attribute values.\n         *\n         * Example:\n         * Selector: `[key1=value1][key2]` would parse to:\n         * ```\n         * ['key1', 'value1', 'key2', '']\n         * ```\n         */\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    static parse(selector) {\n        /** @type {?} */\n        const results = [];\n        /** @type {?} */\n        const _addResult = (res, cssSel) => {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        /** @type {?} */\n        let cssSelector = new CssSelector();\n        /** @type {?} */\n        let match;\n        /** @type {?} */\n        let current = cssSelector;\n        /** @type {?} */\n        let inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    }\n    /**\n     * @return {?}\n     */\n    isElementSelector() {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    }\n    /**\n     * @return {?}\n     */\n    hasElementSelector() { return !!this.element; }\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    setElement(element = null) { this.element = element; }\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    getMatchingElementTemplate() {\n        /** @type {?} */\n        const tagName = this.element || 'div';\n        /** @type {?} */\n        const classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n        /** @type {?} */\n        let attrs = '';\n        for (let i = 0; i < this.attrs.length; i += 2) {\n            /** @type {?} */\n            const attrName = this.attrs[i];\n            /** @type {?} */\n            const attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n            attrs += ` ${attrName}${attrValue}`;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n            `<${tagName}${classAttr}${attrs}></${tagName}>`;\n    }\n    /**\n     * @return {?}\n     */\n    getAttrs() {\n        /** @type {?} */\n        const result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    }\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    addAttribute(name, value = '') {\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    addClassName(name) { this.classNames.push(name.toLowerCase()); }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        let res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(klass => res += `.${klass}`);\n        }\n        if (this.attrs) {\n            for (let i = 0; i < this.attrs.length; i += 2) {\n                /** @type {?} */\n                const name = this.attrs[i];\n                /** @type {?} */\n                const value = this.attrs[i + 1];\n                res += `[${name}${value ? '=' + value : ''}]`;\n            }\n        }\n        this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n        return res;\n    }\n}\nif (false) {\n    /** @type {?} */\n    CssSelector.prototype.element;\n    /** @type {?} */\n    CssSelector.prototype.classNames;\n    /**\n     * The selectors are encoded in pairs where:\n     * - even locations are attribute names\n     * - odd locations are attribute values.\n     *\n     * Example:\n     * Selector: `[key1=value1][key2]` would parse to:\n     * ```\n     * ['key1', 'value1', 'key2', '']\n     * ```\n     * @type {?}\n     */\n    CssSelector.prototype.attrs;\n    /** @type {?} */\n    CssSelector.prototype.notSelectors;\n}\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n    constructor() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    static createNotMatcher(notSelectors) {\n        /** @type {?} */\n        const notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    }\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    addSelectables(cssSelectors, callbackCtxt) {\n        /** @type {?} */\n        let listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (let i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    }\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    _addSelectable(cssSelector, callbackCtxt, listContext) {\n        /** @type {?} */\n        let matcher = this;\n        /** @type {?} */\n        const element = cssSelector.element;\n        /** @type {?} */\n        const classNames = cssSelector.classNames;\n        /** @type {?} */\n        const attrs = cssSelector.attrs;\n        /** @type {?} */\n        const selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            /** @type {?} */\n            const isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (let i = 0; i < classNames.length; i++) {\n                /** @type {?} */\n                const isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                /** @type {?} */\n                const className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (let i = 0; i < attrs.length; i += 2) {\n                /** @type {?} */\n                const isTerminal = i === attrs.length - 2;\n                /** @type {?} */\n                const name = attrs[i];\n                /** @type {?} */\n                const value = attrs[i + 1];\n                if (isTerminal) {\n                    /** @type {?} */\n                    const terminalMap = matcher._attrValueMap;\n                    /** @type {?} */\n                    let terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    /** @type {?} */\n                    const partialMap = matcher._attrValuePartialMap;\n                    /** @type {?} */\n                    let partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    _addTerminal(map, name, selectable) {\n        /** @type {?} */\n        let terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    }\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    _addPartial(map, name) {\n        /** @type {?} */\n        let matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    }\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    match(cssSelector, matchedCallback) {\n        /** @type {?} */\n        let result = false;\n        /** @type {?} */\n        const element = /** @type {?} */ ((cssSelector.element));\n        /** @type {?} */\n        const classNames = cssSelector.classNames;\n        /** @type {?} */\n        const attrs = cssSelector.attrs;\n        for (let i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (let i = 0; i < classNames.length; i++) {\n                /** @type {?} */\n                const className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (let i = 0; i < attrs.length; i += 2) {\n                /** @type {?} */\n                const name = attrs[i];\n                /** @type {?} */\n                const value = attrs[i + 1];\n                /** @type {?} */\n                const terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                /** @type {?} */\n                const partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    }\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    _matchTerminal(map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        /** @type {?} */\n        let selectables = map.get(name) || [];\n        /** @type {?} */\n        const starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        /** @type {?} */\n        let selectable;\n        /** @type {?} */\n        let result = false;\n        for (let i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    }\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    _matchPartial(map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        /** @type {?} */\n        const nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    }\n}\nif (false) {\n    /** @type {?} */\n    SelectorMatcher.prototype._elementMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._elementPartialMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._classMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._classPartialMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._attrValueMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._attrValuePartialMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._listContexts;\n}\nexport class SelectorListContext {\n    /**\n     * @param {?} selectors\n     */\n    constructor(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n}\nif (false) {\n    /** @type {?} */\n    SelectorListContext.prototype.alreadyMatched;\n    /** @type {?} */\n    SelectorListContext.prototype.selectors;\n}\nexport class SelectorContext {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    constructor(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    finalize(cssSelector, callback) {\n        /** @type {?} */\n        let result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            /** @type {?} */\n            const notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    }\n}\nif (false) {\n    /** @type {?} */\n    SelectorContext.prototype.notSelectors;\n    /** @type {?} */\n    SelectorContext.prototype.selector;\n    /** @type {?} */\n    SelectorContext.prototype.cbContext;\n    /** @type {?} */\n    SelectorContext.prototype.listContext;\n}\n//# sourceMappingURL=selector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CssSelector } from './selector';\n/**\n * @record\n */\nexport function Inject() { }\n/** @type {?} */\nInject.prototype.token;\n/** @type {?} */\nexport const createInject = makeMetadataFactory('Inject', (token) => ({ token }));\n/** @type {?} */\nexport const createInjectionToken = makeMetadataFactory('InjectionToken', (desc) => ({ _desc: desc, ngInjectableDef: undefined }));\n/**\n * @record\n */\nexport function Attribute() { }\n/** @type {?|undefined} */\nAttribute.prototype.attributeName;\n/** @type {?} */\nexport const createAttribute = makeMetadataFactory('Attribute', (attributeName) => ({ attributeName }));\n/**\n * @record\n */\nexport function Query() { }\n/** @type {?} */\nQuery.prototype.descendants;\n/** @type {?} */\nQuery.prototype.first;\n/** @type {?} */\nQuery.prototype.read;\n/** @type {?} */\nQuery.prototype.isViewQuery;\n/** @type {?} */\nQuery.prototype.selector;\n/** @type {?} */\nexport const createContentChildren = makeMetadataFactory('ContentChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: false, descendants: false }, data)));\n/** @type {?} */\nexport const createContentChild = makeMetadataFactory('ContentChild', (selector, data = {}) => (Object.assign({ selector, first: true, isViewQuery: false, descendants: true }, data)));\n/** @type {?} */\nexport const createViewChildren = makeMetadataFactory('ViewChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: true, descendants: true }, data)));\n/** @type {?} */\nexport const createViewChild = makeMetadataFactory('ViewChild', (selector, data) => (Object.assign({ selector, first: true, isViewQuery: true, descendants: true }, data)));\n/**\n * @record\n */\nexport function Directive() { }\n/** @type {?|undefined} */\nDirective.prototype.selector;\n/** @type {?|undefined} */\nDirective.prototype.inputs;\n/** @type {?|undefined} */\nDirective.prototype.outputs;\n/** @type {?|undefined} */\nDirective.prototype.host;\n/** @type {?|undefined} */\nDirective.prototype.providers;\n/** @type {?|undefined} */\nDirective.prototype.exportAs;\n/** @type {?|undefined} */\nDirective.prototype.queries;\n/** @type {?|undefined} */\nDirective.prototype.guards;\n/** @type {?} */\nexport const createDirective = makeMetadataFactory('Directive', (dir = {}) => dir);\n/**\n * @record\n */\nexport function Component() { }\n/** @type {?|undefined} */\nComponent.prototype.changeDetection;\n/** @type {?|undefined} */\nComponent.prototype.viewProviders;\n/** @type {?|undefined} */\nComponent.prototype.moduleId;\n/** @type {?|undefined} */\nComponent.prototype.templateUrl;\n/** @type {?|undefined} */\nComponent.prototype.template;\n/** @type {?|undefined} */\nComponent.prototype.styleUrls;\n/** @type {?|undefined} */\nComponent.prototype.styles;\n/** @type {?|undefined} */\nComponent.prototype.animations;\n/** @type {?|undefined} */\nComponent.prototype.encapsulation;\n/** @type {?|undefined} */\nComponent.prototype.interpolation;\n/** @type {?|undefined} */\nComponent.prototype.entryComponents;\n/** @type {?|undefined} */\nComponent.prototype.preserveWhitespaces;\n/** @enum {number} */\nconst ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n    ShadowDom: 3,\n};\nexport { ViewEncapsulation };\nViewEncapsulation[ViewEncapsulation.Emulated] = 'Emulated';\nViewEncapsulation[ViewEncapsulation.Native] = 'Native';\nViewEncapsulation[ViewEncapsulation.None] = 'None';\nViewEncapsulation[ViewEncapsulation.ShadowDom] = 'ShadowDom';\n/** @enum {number} */\nconst ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nexport { ChangeDetectionStrategy };\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = 'OnPush';\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = 'Default';\n/** @type {?} */\nexport const createComponent = makeMetadataFactory('Component', (c = {}) => (Object.assign({ changeDetection: ChangeDetectionStrategy.Default }, c)));\n/**\n * @record\n */\nexport function Pipe() { }\n/** @type {?} */\nPipe.prototype.name;\n/** @type {?|undefined} */\nPipe.prototype.pure;\n/** @type {?} */\nexport const createPipe = makeMetadataFactory('Pipe', (p) => (Object.assign({ pure: true }, p)));\n/**\n * @record\n */\nexport function Input() { }\n/** @type {?|undefined} */\nInput.prototype.bindingPropertyName;\n/** @type {?} */\nexport const createInput = makeMetadataFactory('Input', (bindingPropertyName) => ({ bindingPropertyName }));\n/**\n * @record\n */\nexport function Output() { }\n/** @type {?|undefined} */\nOutput.prototype.bindingPropertyName;\n/** @type {?} */\nexport const createOutput = makeMetadataFactory('Output', (bindingPropertyName) => ({ bindingPropertyName }));\n/**\n * @record\n */\nexport function HostBinding() { }\n/** @type {?|undefined} */\nHostBinding.prototype.hostPropertyName;\n/** @type {?} */\nexport const createHostBinding = makeMetadataFactory('HostBinding', (hostPropertyName) => ({ hostPropertyName }));\n/**\n * @record\n */\nexport function HostListener() { }\n/** @type {?|undefined} */\nHostListener.prototype.eventName;\n/** @type {?|undefined} */\nHostListener.prototype.args;\n/** @type {?} */\nexport const createHostListener = makeMetadataFactory('HostListener', (eventName, args) => ({ eventName, args }));\n/**\n * @record\n */\nexport function NgModule() { }\n/** @type {?|undefined} */\nNgModule.prototype.providers;\n/** @type {?|undefined} */\nNgModule.prototype.declarations;\n/** @type {?|undefined} */\nNgModule.prototype.imports;\n/** @type {?|undefined} */\nNgModule.prototype.exports;\n/** @type {?|undefined} */\nNgModule.prototype.entryComponents;\n/** @type {?|undefined} */\nNgModule.prototype.bootstrap;\n/** @type {?|undefined} */\nNgModule.prototype.schemas;\n/** @type {?|undefined} */\nNgModule.prototype.id;\n/** @type {?} */\nexport const createNgModule = makeMetadataFactory('NgModule', (ngModule) => ngModule);\n/**\n * @record\n */\nexport function ModuleWithProviders() { }\n/** @type {?} */\nModuleWithProviders.prototype.ngModule;\n/** @type {?|undefined} */\nModuleWithProviders.prototype.providers;\n/**\n * @record\n */\nexport function Injectable() { }\n/** @type {?|undefined} */\nInjectable.prototype.providedIn;\n/** @type {?|undefined} */\nInjectable.prototype.useClass;\n/** @type {?|undefined} */\nInjectable.prototype.useExisting;\n/** @type {?|undefined} */\nInjectable.prototype.useValue;\n/** @type {?|undefined} */\nInjectable.prototype.useFactory;\n/** @type {?|undefined} */\nInjectable.prototype.deps;\n/** @type {?} */\nexport const createInjectable = makeMetadataFactory('Injectable', (injectable = {}) => injectable);\n/**\n * @record\n */\nexport function SchemaMetadata() { }\n/** @type {?} */\nSchemaMetadata.prototype.name;\n/** @type {?} */\nexport const CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/** @type {?} */\nexport const NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/** @type {?} */\nexport const createOptional = makeMetadataFactory('Optional');\n/** @type {?} */\nexport const createSelf = makeMetadataFactory('Self');\n/** @type {?} */\nexport const createSkipSelf = makeMetadataFactory('SkipSelf');\n/** @type {?} */\nexport const createHost = makeMetadataFactory('Host');\n/** @type {?} */\nexport const Type = Function;\n/** @enum {number} */\nconst SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nexport { SecurityContext };\nSecurityContext[SecurityContext.NONE] = 'NONE';\nSecurityContext[SecurityContext.HTML] = 'HTML';\nSecurityContext[SecurityContext.STYLE] = 'STYLE';\nSecurityContext[SecurityContext.SCRIPT] = 'SCRIPT';\nSecurityContext[SecurityContext.URL] = 'URL';\nSecurityContext[SecurityContext.RESOURCE_URL] = 'RESOURCE_URL';\n/** @typedef {?} */\nvar Provider;\nexport { Provider };\n/** @enum {number} */\nconst NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    TypeModuleProvider: 1073741824,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\nexport { NodeFlags };\n/** @enum {number} */\nconst DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Self: 4,\n    Value: 8,\n};\nexport { DepFlags };\n/** @enum {number} */\nconst InjectFlags = {\n    Default: 0,\n    /**\n       * Specifies that an injector should retrieve a dependency from any injector until reaching the\n       * host element of the current component. (Only used with Element Injector)\n       */\n    Host: 1,\n    /** Don't descend into ancestors of the node requesting injection. */\n    Self: 2,\n    /** Skip the node that is requesting injection. */\n    SkipSelf: 4,\n    /** Inject `defaultValue` instead if token not found. */\n    Optional: 8,\n};\nexport { InjectFlags };\n/** @enum {number} */\nconst ArgumentType = {\n    Inline: 0, Dynamic: 1,\n};\nexport { ArgumentType };\n/** @enum {number} */\nconst BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\nexport { BindingFlags };\n/** @enum {number} */\nconst QueryBindingType = {\n    First: 0, All: 1,\n};\nexport { QueryBindingType };\n/** @enum {number} */\nconst QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\nexport { QueryValueType };\n/** @enum {number} */\nconst ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\nexport { ViewFlags };\n/** @enum {number} */\nconst MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nexport { MissingTranslationStrategy };\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = 'Error';\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = 'Warning';\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = 'Ignore';\n/**\n * @record\n * @template T\n */\nexport function MetadataFactory() { }\n/* TODO: handle strange member:\n(...args: any[]): T;\n*/\n/** @type {?} */\nMetadataFactory.prototype.isTypeOf;\n/** @type {?} */\nMetadataFactory.prototype.ngMetadataName;\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    /** @type {?} */\n    const factory = (...args) => {\n        /** @type {?} */\n        const values = props ? props(...args) : {};\n        return Object.assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = (obj) => obj && obj.ngMetadataName === name;\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nexport function Route() { }\n/** @type {?|undefined} */\nRoute.prototype.children;\n/** @type {?|undefined} */\nRoute.prototype.loadChildren;\n/** @enum {number} */\nconst SelectorFlags = {\n    /** Indicates this is the beginning of a new negative selector */\n    NOT: 1,\n    /** Mode for matching attributes */\n    ATTRIBUTE: 2,\n    /** Mode for matching tag names */\n    ELEMENT: 4,\n    /** Mode for matching class names */\n    CLASS: 8,\n};\nexport { SelectorFlags };\n/** @typedef {?} */\nvar R3CssSelector;\nexport { R3CssSelector };\n/** @typedef {?} */\nvar R3CssSelectorList;\nexport { R3CssSelectorList };\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToSimpleSelector(selector) {\n    /** @type {?} */\n    const classes = selector.classNames && selector.classNames.length ?\n        [8 /* CLASS */, ...selector.classNames] :\n        [];\n    /** @type {?} */\n    const elementName = selector.element && selector.element !== '*' ? selector.element : '';\n    return [elementName, ...selector.attrs, ...classes];\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToNegativeSelector(selector) {\n    /** @type {?} */\n    const classes = selector.classNames && selector.classNames.length ?\n        [8 /* CLASS */, ...selector.classNames] :\n        [];\n    if (selector.element) {\n        return [\n            1 /* NOT */ | 4 /* ELEMENT */, selector.element, ...selector.attrs, ...classes\n        ];\n    }\n    else if (selector.attrs.length) {\n        return [1 /* NOT */ | 2 /* ATTRIBUTE */, ...selector.attrs, ...classes];\n    }\n    else {\n        return selector.classNames && selector.classNames.length ?\n            [1 /* NOT */ | 8 /* CLASS */, ...selector.classNames] :\n            [];\n    }\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToR3Selector(selector) {\n    /** @type {?} */\n    const positive = parserSelectorToSimpleSelector(selector);\n    /** @type {?} */\n    const negative = selector.notSelectors && selector.notSelectors.length ?\n        selector.notSelectors.map(notSelector => parserSelectorToNegativeSelector(notSelector)) :\n        [];\n    return positive.concat(...negative);\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nexport function parseSelectorToR3Selector(selector) {\n    /** @type {?} */\n    const selectors = CssSelector.parse(selector);\n    return selectors.map(parserSelectorToR3Selector);\n}\n/** @enum {number} */\nconst RenderFlags = {\n    /* Whether to run the creation block (e.g. create elements and directives) */\n    Create: 1,\n    /* Whether to run the update block (e.g. refresh bindings) */\n    Update: 2,\n};\nexport { RenderFlags };\n/** @enum {number} */\nconst InitialStylingFlags = {\n    VALUES_MODE: 1,\n};\nexport { InitialStylingFlags };\n//# sourceMappingURL=core.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    /** @type {?} */\n    const characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nexport function visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nexport function isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nexport function noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\nexport function ValueVisitor() { }\n/** @type {?} */\nValueVisitor.prototype.visitArray;\n/** @type {?} */\nValueVisitor.prototype.visitStringMap;\n/** @type {?} */\nValueVisitor.prototype.visitPrimitive;\n/** @type {?} */\nValueVisitor.prototype.visitOther;\nexport class ValueTransformer {\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    visitArray(arr, context) {\n        return arr.map(value => visitValue(value, this, context));\n    }\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    visitStringMap(map, context) {\n        /** @type {?} */\n        const result = {};\n        Object.keys(map).forEach(key => { result[key] = visitValue(map[key], this, context); });\n        return result;\n    }\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrimitive(value, context) { return value; }\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    visitOther(value, context) { return value; }\n}\n/** @type {?} */\nexport const SyncAsync = {\n    assertSync: (value) => {\n        if (isPromise(value)) {\n            throw new Error(`Illegal state: value cannot be a promise`);\n        }\n        return value;\n    },\n    then: (value, cb) => { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: (syncAsyncValues) => {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nexport function error(msg) {\n    throw new Error(`Internal Error: ${msg}`);\n}\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nexport function syntaxError(msg, parseErrors) {\n    /** @type {?} */\n    const error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\n/** @type {?} */\nconst ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/** @type {?} */\nconst ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nexport function escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n/** @type {?} */\nconst STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nexport function utf8Encode(str) {\n    /** @type {?} */\n    let encoded = '';\n    for (let index = 0; index < str.length; index++) {\n        /** @type {?} */\n        let codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            /** @type {?} */\n            const low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\nexport function OutputContext() { }\n/** @type {?} */\nOutputContext.prototype.genFilePath;\n/** @type {?} */\nOutputContext.prototype.statements;\n/** @type {?} */\nOutputContext.prototype.constantPool;\n/** @type {?} */\nOutputContext.prototype.importExpr;\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return `${token.overriddenName}`;\n    }\n    if (token.name) {\n        return `${token.name}`;\n    }\n    /** @type {?} */\n    const res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    /** @type {?} */\n    const newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nexport class Version {\n    /**\n     * @param {?} full\n     */\n    constructor(full) {\n        this.full = full;\n        /** @type {?} */\n        const splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n}\nif (false) {\n    /** @type {?} */\n    Version.prototype.major;\n    /** @type {?} */\n    Version.prototype.minor;\n    /** @type {?} */\n    Version.prototype.patch;\n    /** @type {?} */\n    Version.prototype.full;\n}\n/**\n * @record\n */\nexport function Console() { }\n/** @type {?} */\nConsole.prototype.log;\n/** @type {?} */\nConsole.prototype.warn;\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from './util';\n/** @type {?} */\nexport const VERSION = new Version('6.1.10-bea78b0');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\nexport function TemplateAst() { }\n/**\n * The source span from which this node was parsed.\n * @type {?}\n */\nTemplateAst.prototype.sourceSpan;\n/**\n * Visit this node and possibly transform it.\n * @type {?}\n */\nTemplateAst.prototype.visit;\n/**\n * A segment of text within the template.\n */\nexport class TextAst {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitText(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    TextAst.prototype.value;\n    /** @type {?} */\n    TextAst.prototype.ngContentIndex;\n    /** @type {?} */\n    TextAst.prototype.sourceSpan;\n}\n/**\n * A bound expression within the text of a template.\n */\nexport class BoundTextAst {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitBoundText(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    BoundTextAst.prototype.value;\n    /** @type {?} */\n    BoundTextAst.prototype.ngContentIndex;\n    /** @type {?} */\n    BoundTextAst.prototype.sourceSpan;\n}\n/**\n * A plain attribute on an element.\n */\nexport class AttrAst {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitAttr(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    AttrAst.prototype.name;\n    /** @type {?} */\n    AttrAst.prototype.value;\n    /** @type {?} */\n    AttrAst.prototype.sourceSpan;\n}\n/** @enum {number} */\nconst PropertyBindingType = {\n    // A normal binding to a property (e.g. `[property]=\"expression\"`).\n    Property: 0,\n    // A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n    Attribute: 1,\n    // A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n    Class: 2,\n    // A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n    Style: 3,\n    // A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n    Animation: 4,\n};\nexport { PropertyBindingType };\n/** @type {?} */\nconst BoundPropertyMapping = {\n    [4 /* Animation */]: 4 /* Animation */,\n    [1 /* Attribute */]: 1 /* Attribute */,\n    [2 /* Class */]: 2 /* Class */,\n    [0 /* Property */]: 0 /* Property */,\n    [3 /* Style */]: 3 /* Style */,\n};\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nexport class BoundElementPropertyAst {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    constructor(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === 4 /* Animation */;\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    static fromBoundProperty(prop) {\n        /** @type {?} */\n        const type = BoundPropertyMapping[prop.type];\n        return new BoundElementPropertyAst(prop.name, type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.isAnimation;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.name;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.type;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.securityContext;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.value;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.unit;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.sourceSpan;\n}\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nexport class BoundEventAst {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    constructor(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    static calcFullName(name, target, phase) {\n        if (target) {\n            return `${target}:${name}`;\n        }\n        if (phase) {\n            return `@${name}.${phase}`;\n        }\n        return name;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    static fromParsedEvent(event) {\n        /** @type {?} */\n        const target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        /** @type {?} */\n        const phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEventAst(event.name, target, phase, event.handler, event.sourceSpan);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitEvent(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    BoundEventAst.prototype.fullName;\n    /** @type {?} */\n    BoundEventAst.prototype.isAnimation;\n    /** @type {?} */\n    BoundEventAst.prototype.name;\n    /** @type {?} */\n    BoundEventAst.prototype.target;\n    /** @type {?} */\n    BoundEventAst.prototype.phase;\n    /** @type {?} */\n    BoundEventAst.prototype.handler;\n    /** @type {?} */\n    BoundEventAst.prototype.sourceSpan;\n}\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nexport class ReferenceAst {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} originalValue\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitReference(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReferenceAst.prototype.name;\n    /** @type {?} */\n    ReferenceAst.prototype.value;\n    /** @type {?} */\n    ReferenceAst.prototype.originalValue;\n    /** @type {?} */\n    ReferenceAst.prototype.sourceSpan;\n}\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nexport class VariableAst {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    static fromParsedVariable(v) {\n        return new VariableAst(v.name, v.value, v.sourceSpan);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitVariable(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    VariableAst.prototype.name;\n    /** @type {?} */\n    VariableAst.prototype.value;\n    /** @type {?} */\n    VariableAst.prototype.sourceSpan;\n}\n/**\n * An element declaration in a template.\n */\nexport class ElementAst {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    constructor(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitElement(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ElementAst.prototype.name;\n    /** @type {?} */\n    ElementAst.prototype.attrs;\n    /** @type {?} */\n    ElementAst.prototype.inputs;\n    /** @type {?} */\n    ElementAst.prototype.outputs;\n    /** @type {?} */\n    ElementAst.prototype.references;\n    /** @type {?} */\n    ElementAst.prototype.directives;\n    /** @type {?} */\n    ElementAst.prototype.providers;\n    /** @type {?} */\n    ElementAst.prototype.hasViewContainer;\n    /** @type {?} */\n    ElementAst.prototype.queryMatches;\n    /** @type {?} */\n    ElementAst.prototype.children;\n    /** @type {?} */\n    ElementAst.prototype.ngContentIndex;\n    /** @type {?} */\n    ElementAst.prototype.sourceSpan;\n    /** @type {?} */\n    ElementAst.prototype.endSourceSpan;\n}\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nexport class EmbeddedTemplateAst {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.attrs;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.outputs;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.references;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.variables;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.directives;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.providers;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.hasViewContainer;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.queryMatches;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.children;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.ngContentIndex;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.sourceSpan;\n}\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nexport class BoundDirectivePropertyAst {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.directiveName;\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.templateName;\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.value;\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.sourceSpan;\n}\n/**\n * A directive declared on an element.\n */\nexport class DirectiveAst {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    constructor(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitDirective(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    DirectiveAst.prototype.directive;\n    /** @type {?} */\n    DirectiveAst.prototype.inputs;\n    /** @type {?} */\n    DirectiveAst.prototype.hostProperties;\n    /** @type {?} */\n    DirectiveAst.prototype.hostEvents;\n    /** @type {?} */\n    DirectiveAst.prototype.contentQueryStartId;\n    /** @type {?} */\n    DirectiveAst.prototype.sourceSpan;\n}\n/**\n * A provider declared on an element\n */\nexport class ProviderAst {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     * @param {?} isModule\n     */\n    constructor(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ProviderAst.prototype.token;\n    /** @type {?} */\n    ProviderAst.prototype.multiProvider;\n    /** @type {?} */\n    ProviderAst.prototype.eager;\n    /** @type {?} */\n    ProviderAst.prototype.providers;\n    /** @type {?} */\n    ProviderAst.prototype.providerType;\n    /** @type {?} */\n    ProviderAst.prototype.lifecycleHooks;\n    /** @type {?} */\n    ProviderAst.prototype.sourceSpan;\n    /** @type {?} */\n    ProviderAst.prototype.isModule;\n}\n/** @enum {number} */\nconst ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nexport { ProviderAstType };\nProviderAstType[ProviderAstType.PublicService] = 'PublicService';\nProviderAstType[ProviderAstType.PrivateService] = 'PrivateService';\nProviderAstType[ProviderAstType.Component] = 'Component';\nProviderAstType[ProviderAstType.Directive] = 'Directive';\nProviderAstType[ProviderAstType.Builtin] = 'Builtin';\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nexport class NgContentAst {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitNgContent(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    NgContentAst.prototype.index;\n    /** @type {?} */\n    NgContentAst.prototype.ngContentIndex;\n    /** @type {?} */\n    NgContentAst.prototype.sourceSpan;\n}\n/**\n * @record\n */\nexport function QueryMatch() { }\n/** @type {?} */\nQueryMatch.prototype.queryId;\n/** @type {?} */\nQueryMatch.prototype.value;\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\nexport function TemplateAstVisitor() { }\n/** @type {?|undefined} */\nTemplateAstVisitor.prototype.visit;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitNgContent;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitEmbeddedTemplate;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitElement;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitReference;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitVariable;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitEvent;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitElementProperty;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitAttr;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitBoundText;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitText;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitDirective;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitDirectiveProperty;\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nexport class NullTemplateVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNgContent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReference(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitVariable(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEvent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElementProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttr(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBoundText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirective(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirectiveProperty(ast, context) { }\n}\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nexport class RecursiveTemplateAstVisitor extends NullTemplateVisitor {\n    constructor() { super(); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) {\n        return this.visitChildren(context, visit => {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        return this.visitChildren(context, visit => {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirective(ast, context) {\n        return this.visitChildren(context, visit => {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    }\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    visitChildren(context, cb) {\n        /** @type {?} */\n        let results = [];\n        /** @type {?} */\n        let t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    }\n}\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nexport function templateVisitAll(visitor, asts, context = null) {\n    /** @type {?} */\n    const result = [];\n    /** @type {?} */\n    const visit = visitor.visit ?\n        (ast) => /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context) :\n        (ast) => ast.visit(visitor, context);\n    asts.forEach(ast => {\n        /** @type {?} */\n        const astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/** @typedef {?} */\nvar TemplateAstPath;\nexport { TemplateAstPath };\n//# sourceMappingURL=template_ast.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from './core';\nimport { noUndefined } from './util';\nexport class CompilerConfig {\n    /**\n     * @param {?=} __0\n     */\n    constructor({ defaultEncapsulation = ViewEncapsulation.Emulated, useJit = true, jitDevMode = false, missingTranslation = null, preserveWhitespaces, strictInjectionParameters } = {}) {\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompilerConfig.prototype.defaultEncapsulation;\n    /** @type {?} */\n    CompilerConfig.prototype.useJit;\n    /** @type {?} */\n    CompilerConfig.prototype.jitDevMode;\n    /** @type {?} */\n    CompilerConfig.prototype.missingTranslation;\n    /** @type {?} */\n    CompilerConfig.prototype.preserveWhitespaces;\n    /** @type {?} */\n    CompilerConfig.prototype.strictInjectionParameters;\n}\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nexport function preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting = false) {\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n//# sourceMappingURL=config.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nexport class StaticSymbol {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    constructor(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    assertNoMembers() {\n        if (this.members.length) {\n            throw new Error(`Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    StaticSymbol.prototype.filePath;\n    /** @type {?} */\n    StaticSymbol.prototype.name;\n    /** @type {?} */\n    StaticSymbol.prototype.members;\n}\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nexport class StaticSymbolCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    get(declarationFile, name, members) {\n        members = members || [];\n        /** @type {?} */\n        const memberSuffix = members.length ? `.${members.join('.')}` : '';\n        /** @type {?} */\n        const key = `\"${declarationFile}\".${name}${memberSuffix}`;\n        /** @type {?} */\n        let result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StaticSymbolCache.prototype.cache;\n}\n//# sourceMappingURL=static_symbol.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from './aot/static_symbol';\nimport { splitAtColon, stringify } from './util';\n/** @type {?} */\nconst HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\n/** @type {?} */\nlet _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nexport function identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    /** @type {?} */\n    const ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    /** @type {?} */\n    let identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = `anonymous_${_anonymousTypeIndex++}`;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nexport function identifierModuleUrl(compileIdentifier) {\n    /** @type {?} */\n    const ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return `./${stringify(ref)}`;\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nexport function viewClassName(compType, embeddedTemplateIndex) {\n    return `View_${identifierName({ reference: compType })}_${embeddedTemplateIndex}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function rendererTypeName(compType) {\n    return `RenderType_${identifierName({ reference: compType })}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function hostViewClassName(compType) {\n    return `HostView_${identifierName({ reference: compType })}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function componentFactoryName(compType) {\n    return `${identifierName({ reference: compType })}NgFactory`;\n}\n/**\n * @record\n */\nexport function ProxyClass() { }\n/** @type {?} */\nProxyClass.prototype.setDelegate;\n/**\n * @record\n */\nexport function CompileIdentifierMetadata() { }\n/** @type {?} */\nCompileIdentifierMetadata.prototype.reference;\n/** @enum {number} */\nconst CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nexport { CompileSummaryKind };\nCompileSummaryKind[CompileSummaryKind.Pipe] = 'Pipe';\nCompileSummaryKind[CompileSummaryKind.Directive] = 'Directive';\nCompileSummaryKind[CompileSummaryKind.NgModule] = 'NgModule';\nCompileSummaryKind[CompileSummaryKind.Injectable] = 'Injectable';\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\nexport function CompileTypeSummary() { }\n/** @type {?} */\nCompileTypeSummary.prototype.summaryKind;\n/** @type {?} */\nCompileTypeSummary.prototype.type;\n/**\n * @record\n */\nexport function CompileDiDependencyMetadata() { }\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isAttribute;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isSelf;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isHost;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isSkipSelf;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isOptional;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isValue;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.token;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.value;\n/**\n * @record\n */\nexport function CompileProviderMetadata() { }\n/** @type {?} */\nCompileProviderMetadata.prototype.token;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useClass;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useValue;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useExisting;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useFactory;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.deps;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.multi;\n/**\n * @record\n */\nexport function CompileFactoryMetadata() { }\n/** @type {?} */\nCompileFactoryMetadata.prototype.diDeps;\n/** @type {?} */\nCompileFactoryMetadata.prototype.reference;\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenName(token) {\n    return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\nexport function CompileTokenMetadata() { }\n/** @type {?|undefined} */\nCompileTokenMetadata.prototype.value;\n/** @type {?|undefined} */\nCompileTokenMetadata.prototype.identifier;\n/**\n * @record\n */\nexport function CompileInjectableMetadata() { }\n/** @type {?} */\nCompileInjectableMetadata.prototype.symbol;\n/** @type {?} */\nCompileInjectableMetadata.prototype.type;\n/** @type {?|undefined} */\nCompileInjectableMetadata.prototype.providedIn;\n/** @type {?|undefined} */\nCompileInjectableMetadata.prototype.useValue;\n/** @type {?|undefined} */\nCompileInjectableMetadata.prototype.useClass;\n/** @type {?|undefined} */\nCompileInjectableMetadata.prototype.useExisting;\n/** @type {?|undefined} */\nCompileInjectableMetadata.prototype.useFactory;\n/** @type {?|undefined} */\nCompileInjectableMetadata.prototype.deps;\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\nexport function CompileTypeMetadata() { }\n/** @type {?} */\nCompileTypeMetadata.prototype.diDeps;\n/** @type {?} */\nCompileTypeMetadata.prototype.lifecycleHooks;\n/** @type {?} */\nCompileTypeMetadata.prototype.reference;\n/**\n * @record\n */\nexport function CompileQueryMetadata() { }\n/** @type {?} */\nCompileQueryMetadata.prototype.selectors;\n/** @type {?} */\nCompileQueryMetadata.prototype.descendants;\n/** @type {?} */\nCompileQueryMetadata.prototype.first;\n/** @type {?} */\nCompileQueryMetadata.prototype.propertyName;\n/** @type {?} */\nCompileQueryMetadata.prototype.read;\n/**\n * Metadata about a stylesheet\n */\nexport class CompileStylesheetMetadata {\n    /**\n     * @param {?=} __0\n     */\n    constructor({ moduleUrl, styles, styleUrls } = {}) {\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompileStylesheetMetadata.prototype.moduleUrl;\n    /** @type {?} */\n    CompileStylesheetMetadata.prototype.styles;\n    /** @type {?} */\n    CompileStylesheetMetadata.prototype.styleUrls;\n}\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\nexport function CompileTemplateSummary() { }\n/** @type {?} */\nCompileTemplateSummary.prototype.ngContentSelectors;\n/** @type {?} */\nCompileTemplateSummary.prototype.encapsulation;\n/**\n * Metadata regarding compilation of a template.\n */\nexport class CompileTemplateMetadata {\n    /**\n     * @param {?} __0\n     */\n    constructor({ encapsulation, template, templateUrl, htmlAst, styles, styleUrls, externalStylesheets, animations, ngContentSelectors, interpolation, isInline, preserveWhitespaces }) {\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(`'interpolation' should have a start and an end symbol.`);\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.encapsulation;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.template;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.templateUrl;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.htmlAst;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.isInline;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.styles;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.styleUrls;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.externalStylesheets;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.animations;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.ngContentSelectors;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.interpolation;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.preserveWhitespaces;\n}\n/**\n * @record\n */\nexport function CompileEntryComponentMetadata() { }\n/** @type {?} */\nCompileEntryComponentMetadata.prototype.componentType;\n/** @type {?} */\nCompileEntryComponentMetadata.prototype.componentFactory;\n/**\n * @record\n */\nexport function CompileDirectiveSummary() { }\n/** @type {?} */\nCompileDirectiveSummary.prototype.type;\n/** @type {?} */\nCompileDirectiveSummary.prototype.isComponent;\n/** @type {?} */\nCompileDirectiveSummary.prototype.selector;\n/** @type {?} */\nCompileDirectiveSummary.prototype.exportAs;\n/** @type {?} */\nCompileDirectiveSummary.prototype.inputs;\n/** @type {?} */\nCompileDirectiveSummary.prototype.outputs;\n/** @type {?} */\nCompileDirectiveSummary.prototype.hostListeners;\n/** @type {?} */\nCompileDirectiveSummary.prototype.hostProperties;\n/** @type {?} */\nCompileDirectiveSummary.prototype.hostAttributes;\n/** @type {?} */\nCompileDirectiveSummary.prototype.providers;\n/** @type {?} */\nCompileDirectiveSummary.prototype.viewProviders;\n/** @type {?} */\nCompileDirectiveSummary.prototype.queries;\n/** @type {?} */\nCompileDirectiveSummary.prototype.guards;\n/** @type {?} */\nCompileDirectiveSummary.prototype.viewQueries;\n/** @type {?} */\nCompileDirectiveSummary.prototype.entryComponents;\n/** @type {?} */\nCompileDirectiveSummary.prototype.changeDetection;\n/** @type {?} */\nCompileDirectiveSummary.prototype.template;\n/** @type {?} */\nCompileDirectiveSummary.prototype.componentViewType;\n/** @type {?} */\nCompileDirectiveSummary.prototype.rendererType;\n/** @type {?} */\nCompileDirectiveSummary.prototype.componentFactory;\n/**\n * Metadata regarding compilation of a directive.\n */\nexport class CompileDirectiveMetadata {\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    static create({ isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs, host, providers, viewProviders, queries, guards, viewQueries, entryComponents, template, componentViewType, rendererType, componentFactory }) {\n        /** @type {?} */\n        const hostListeners = {};\n        /** @type {?} */\n        const hostProperties = {};\n        /** @type {?} */\n        const hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(key => {\n                /** @type {?} */\n                const value = host[key];\n                /** @type {?} */\n                const matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        /** @type {?} */\n        const inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach((bindConfig) => {\n                /** @type {?} */\n                const parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        /** @type {?} */\n        const outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach((bindConfig) => {\n                /** @type {?} */\n                const parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost,\n            type,\n            isComponent: !!isComponent, selector, exportAs, changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners,\n            hostProperties,\n            hostAttributes,\n            providers,\n            viewProviders,\n            queries,\n            guards,\n            viewQueries,\n            entryComponents,\n            template,\n            componentViewType,\n            rendererType,\n            componentFactory,\n        });\n    }\n    /**\n     * @param {?} __0\n     */\n    constructor({ isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs, hostListeners, hostProperties, hostAttributes, providers, viewProviders, queries, guards, viewQueries, entryComponents, template, componentViewType, rendererType, componentFactory }) {\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.isHost;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.type;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.isComponent;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.selector;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.exportAs;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.changeDetection;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.inputs;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.outputs;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.hostListeners;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.hostProperties;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.hostAttributes;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.providers;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.viewProviders;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.queries;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.guards;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.viewQueries;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.entryComponents;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.template;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.componentViewType;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.rendererType;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.componentFactory;\n}\n/**\n * @record\n */\nexport function CompilePipeSummary() { }\n/** @type {?} */\nCompilePipeSummary.prototype.type;\n/** @type {?} */\nCompilePipeSummary.prototype.name;\n/** @type {?} */\nCompilePipeSummary.prototype.pure;\nexport class CompilePipeMetadata {\n    /**\n     * @param {?} __0\n     */\n    constructor({ type, name, pure }) {\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompilePipeMetadata.prototype.type;\n    /** @type {?} */\n    CompilePipeMetadata.prototype.name;\n    /** @type {?} */\n    CompilePipeMetadata.prototype.pure;\n}\n/**\n * @record\n */\nexport function CompileNgModuleSummary() { }\n/** @type {?} */\nCompileNgModuleSummary.prototype.type;\n/** @type {?} */\nCompileNgModuleSummary.prototype.exportedDirectives;\n/** @type {?} */\nCompileNgModuleSummary.prototype.exportedPipes;\n/** @type {?} */\nCompileNgModuleSummary.prototype.entryComponents;\n/** @type {?} */\nCompileNgModuleSummary.prototype.providers;\n/** @type {?} */\nCompileNgModuleSummary.prototype.modules;\nexport class CompileShallowModuleMetadata {\n}\nif (false) {\n    /** @type {?} */\n    CompileShallowModuleMetadata.prototype.type;\n    /** @type {?} */\n    CompileShallowModuleMetadata.prototype.rawExports;\n    /** @type {?} */\n    CompileShallowModuleMetadata.prototype.rawImports;\n    /** @type {?} */\n    CompileShallowModuleMetadata.prototype.rawProviders;\n}\n/**\n * Metadata regarding compilation of a module.\n */\nexport class CompileNgModuleMetadata {\n    /**\n     * @param {?} __0\n     */\n    constructor({ type, providers, declaredDirectives, exportedDirectives, declaredPipes, exportedPipes, entryComponents, bootstrapComponents, importedModules, exportedModules, schemas, transitiveModule, id }) {\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        /** @type {?} */\n        const module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.type;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.declaredDirectives;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.exportedDirectives;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.declaredPipes;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.exportedPipes;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.entryComponents;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.bootstrapComponents;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.providers;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.importedModules;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.exportedModules;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.schemas;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.id;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.transitiveModule;\n}\nexport class TransitiveCompileNgModuleMetadata {\n    constructor() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    addProvider(provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addDirective(id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addExportedDirective(id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addPipe(id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addExportedPipe(id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addModule(id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    }\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    addEntryComponent(ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.directivesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.directives;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedDirectivesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedDirectives;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.pipesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.pipes;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedPipesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedPipes;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.modulesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.modules;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.entryComponentsSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.entryComponents;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.providers;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nexport class ProviderMeta {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    constructor(token, { useClass, useValue, useExisting, useFactory, deps, multi }) {\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ProviderMeta.prototype.token;\n    /** @type {?} */\n    ProviderMeta.prototype.useClass;\n    /** @type {?} */\n    ProviderMeta.prototype.useValue;\n    /** @type {?} */\n    ProviderMeta.prototype.useExisting;\n    /** @type {?} */\n    ProviderMeta.prototype.useFactory;\n    /** @type {?} */\n    ProviderMeta.prototype.dependencies;\n    /** @type {?} */\n    ProviderMeta.prototype.multi;\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nexport function flatten(list) {\n    return list.reduce((flat, item) => {\n        /** @type {?} */\n        const flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nexport function templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    /** @type {?} */\n    let url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = `${compMeta.type.reference.filePath}.${compMeta.type.reference.name}.html`;\n        }\n        else {\n            url = `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.html`;\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nexport function sharedStylesheetJitUrl(meta, id) {\n    /** @type {?} */\n    const pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    /** @type {?} */\n    const baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(`css/${id}${baseName}.ngstyle.js`);\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nexport function ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(`${identifierName(moduleMeta.type)}/module.ngfactory.js`);\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nexport function templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(`${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.ngfactory.js`);\n}\n//# sourceMappingURL=compile_metadata.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expression `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n * @template T\n */\nexport class AstPath {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    constructor(path, position = -1) {\n        this.path = path;\n        this.position = position;\n    }\n    /**\n     * @return {?}\n     */\n    get empty() { return !this.path || !this.path.length; }\n    /**\n     * @return {?}\n     */\n    get head() { return this.path[0]; }\n    /**\n     * @return {?}\n     */\n    get tail() { return this.path[this.path.length - 1]; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentOf(node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    childOf(node) { return this.path[this.path.indexOf(node) + 1]; }\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    first(ctor) {\n        for (let i = this.path.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    push(node) { this.path.push(node); }\n    /**\n     * @return {?}\n     */\n    pop() { return /** @type {?} */ ((this.path.pop())); }\n}\nif (false) {\n    /** @type {?} */\n    AstPath.prototype.path;\n    /** @type {?} */\n    AstPath.prototype.position;\n}\n//# sourceMappingURL=ast_path.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AstPath } from '../ast_path';\n/**\n * @record\n */\nexport function Node() { }\n/** @type {?} */\nNode.prototype.sourceSpan;\n/** @type {?} */\nNode.prototype.visit;\nexport class Text {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitText(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Text.prototype.value;\n    /** @type {?} */\n    Text.prototype.sourceSpan;\n}\nexport class Expansion {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    constructor(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitExpansion(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Expansion.prototype.switchValue;\n    /** @type {?} */\n    Expansion.prototype.type;\n    /** @type {?} */\n    Expansion.prototype.cases;\n    /** @type {?} */\n    Expansion.prototype.sourceSpan;\n    /** @type {?} */\n    Expansion.prototype.switchValueSourceSpan;\n}\nexport class ExpansionCase {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    constructor(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitExpansionCase(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    ExpansionCase.prototype.value;\n    /** @type {?} */\n    ExpansionCase.prototype.expression;\n    /** @type {?} */\n    ExpansionCase.prototype.sourceSpan;\n    /** @type {?} */\n    ExpansionCase.prototype.valueSourceSpan;\n    /** @type {?} */\n    ExpansionCase.prototype.expSourceSpan;\n}\nexport class Attribute {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    constructor(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitAttribute(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Attribute.prototype.name;\n    /** @type {?} */\n    Attribute.prototype.value;\n    /** @type {?} */\n    Attribute.prototype.sourceSpan;\n    /** @type {?} */\n    Attribute.prototype.valueSpan;\n}\nexport class Element {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    constructor(name, attrs, children, sourceSpan, startSourceSpan = null, endSourceSpan = null) {\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitElement(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.attrs;\n    /** @type {?} */\n    Element.prototype.children;\n    /** @type {?} */\n    Element.prototype.sourceSpan;\n    /** @type {?} */\n    Element.prototype.startSourceSpan;\n    /** @type {?} */\n    Element.prototype.endSourceSpan;\n}\nexport class Comment {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitComment(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Comment.prototype.value;\n    /** @type {?} */\n    Comment.prototype.sourceSpan;\n}\n/**\n * @record\n */\nexport function Visitor() { }\n/** @type {?|undefined} */\nVisitor.prototype.visit;\n/** @type {?} */\nVisitor.prototype.visitElement;\n/** @type {?} */\nVisitor.prototype.visitAttribute;\n/** @type {?} */\nVisitor.prototype.visitText;\n/** @type {?} */\nVisitor.prototype.visitComment;\n/** @type {?} */\nVisitor.prototype.visitExpansion;\n/** @type {?} */\nVisitor.prototype.visitExpansionCase;\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nexport function visitAll(visitor, nodes, context = null) {\n    /** @type {?} */\n    const result = [];\n    /** @type {?} */\n    const visit = visitor.visit ?\n        (ast) => /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context) :\n        (ast) => ast.visit(visitor, context);\n    nodes.forEach(ast => {\n        /** @type {?} */\n        const astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nexport class RecursiveVisitor {\n    constructor() { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        this.visitChildren(context, visit => {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(ast, context) {\n        return this.visitChildren(context, visit => { visit(ast.cases); });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(ast, context) { }\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    visitChildren(context, cb) {\n        /** @type {?} */\n        let results = [];\n        /** @type {?} */\n        let t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    }\n}\n/** @typedef {?} */\nvar HtmlAstPath;\nexport { HtmlAstPath };\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    /** @type {?} */\n    const start = ast.sourceSpan.start.offset;\n    /** @type {?} */\n    let end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start, end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nexport function findNode(nodes, position) {\n    /** @type {?} */\n    const path = [];\n    /** @type {?} */\n    const visitor = new class extends RecursiveVisitor {\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        visit(ast, context) {\n            /** @type {?} */\n            const span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        }\n    };\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n//# sourceMappingURL=ast.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nexport function assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(`Expected '${identifier}' to be an array of strings.`);\n    }\n    for (let i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(`Expected '${identifier}' to be an array of strings.`);\n        }\n    }\n}\n/** @type {?} */\nconst INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nexport function assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(`Expected '${identifier}' to be an array, [start, end].`);\n    }\n    else if (value != null) {\n        /** @type {?} */\n        const start = /** @type {?} */ (value[0]);\n        /** @type {?} */\n        const end = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(regexp => {\n            if (regexp.test(start) || regexp.test(end)) {\n                throw new Error(`['${start}', '${end}'] contains unusable interpolation symbol.`);\n            }\n        });\n    }\n}\n//# sourceMappingURL=assertions.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertInterpolationSymbols } from '../assertions';\nexport class InterpolationConfig {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    static fromArray(markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    }\n}\nif (false) {\n    /** @type {?} */\n    InterpolationConfig.prototype.start;\n    /** @type {?} */\n    InterpolationConfig.prototype.end;\n}\n/** @type {?} */\nexport const DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n//# sourceMappingURL=interpolation_config.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class StyleWithImports {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    constructor(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StyleWithImports.prototype.style;\n    /** @type {?} */\n    StyleWithImports.prototype.styleUrls;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nexport function isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    /** @type {?} */\n    const schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nexport function extractStyleUrls(resolver, baseUrl, cssText) {\n    /** @type {?} */\n    const foundUrls = [];\n    /** @type {?} */\n    const modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, (...m) => {\n        /** @type {?} */\n        const url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\n/** @type {?} */\nconst CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n/** @type {?} */\nconst CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\n/** @type {?} */\nconst URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n//# sourceMappingURL=style_url_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isNgContent } from '../ml_parser/tags';\n/** @type {?} */\nconst NG_CONTENT_SELECT_ATTR = 'select';\n/** @type {?} */\nconst LINK_ELEMENT = 'link';\n/** @type {?} */\nconst LINK_STYLE_REL_ATTR = 'rel';\n/** @type {?} */\nconst LINK_STYLE_HREF_ATTR = 'href';\n/** @type {?} */\nconst LINK_STYLE_REL_VALUE = 'stylesheet';\n/** @type {?} */\nconst STYLE_ELEMENT = 'style';\n/** @type {?} */\nconst SCRIPT_ELEMENT = 'script';\n/** @type {?} */\nconst NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n/** @type {?} */\nconst NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function preparseElement(ast) {\n    /** @type {?} */\n    let selectAttr = /** @type {?} */ ((null));\n    /** @type {?} */\n    let hrefAttr = /** @type {?} */ ((null));\n    /** @type {?} */\n    let relAttr = /** @type {?} */ ((null));\n    /** @type {?} */\n    let nonBindable = false;\n    /** @type {?} */\n    let projectAs = '';\n    ast.attrs.forEach(attr => {\n        /** @type {?} */\n        const lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    /** @type {?} */\n    const nodeName = ast.name.toLowerCase();\n    /** @type {?} */\n    let type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nconst PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nexport { PreparsedElementType };\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = 'NG_CONTENT';\nPreparsedElementType[PreparsedElementType.STYLE] = 'STYLE';\nPreparsedElementType[PreparsedElementType.STYLESHEET] = 'STYLESHEET';\nPreparsedElementType[PreparsedElementType.SCRIPT] = 'SCRIPT';\nPreparsedElementType[PreparsedElementType.OTHER] = 'OTHER';\nexport class PreparsedElement {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    constructor(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n}\nif (false) {\n    /** @type {?} */\n    PreparsedElement.prototype.type;\n    /** @type {?} */\n    PreparsedElement.prototype.selectAttr;\n    /** @type {?} */\n    PreparsedElement.prototype.hrefAttr;\n    /** @type {?} */\n    PreparsedElement.prototype.nonBindable;\n    /** @type {?} */\n    PreparsedElement.prototype.projectAs;\n}\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n//# sourceMappingURL=template_preparser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl } from './compile_metadata';\nimport { preserveWhitespacesDefault } from './config';\nimport { ViewEncapsulation } from './core';\nimport * as html from './ml_parser/ast';\nimport { InterpolationConfig } from './ml_parser/interpolation_config';\nimport { extractStyleUrls, isStyleUrlResolvable } from './style_url_resolver';\nimport { PreparsedElementType, preparseElement } from './template_parser/template_preparser';\nimport { SyncAsync, isDefined, stringify, syntaxError } from './util';\n/**\n * @record\n */\nexport function PrenormalizedTemplateMetadata() { }\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.ngModuleType;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.componentType;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.moduleUrl;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.template;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.templateUrl;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.styles;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.styleUrls;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.interpolation;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.encapsulation;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.animations;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.preserveWhitespaces;\nexport class DirectiveNormalizer {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    constructor(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() { this._resourceLoaderCache.clear(); }\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    clearCacheFor(normalizedDirective) {\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        /** @type {?} */\n        const template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach((stylesheet) => { this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    _fetch(url) {\n        /** @type {?} */\n        let result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    }\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    normalizeTemplate(prenormData) {\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(`'${stringify(prenormData.componentType)}' component cannot define both template and templateUrl`);\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(`The template specified for component ${stringify(prenormData.componentType)} is not a string`);\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(`The templateUrl specified for component ${stringify(prenormData.componentType)} is not a string`);\n            }\n        }\n        else {\n            throw syntaxError(`No template specified for component ${stringify(prenormData.componentType)}`);\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(`The preserveWhitespaces option for component ${stringify(prenormData.componentType)} must be a boolean`);\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), (preparsedTemplate) => this._normalizeTemplateMetadata(prenormData, preparsedTemplate));\n    }\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    _preParseTemplate(prenomData) {\n        /** @type {?} */\n        let template;\n        /** @type {?} */\n        let templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, (template) => this._preparseLoadedTemplate(prenomData, template, templateUrl));\n    }\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    _preparseLoadedTemplate(prenormData, template, templateAbsUrl) {\n        /** @type {?} */\n        const isInline = !!prenormData.template;\n        /** @type {?} */\n        const interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        /** @type {?} */\n        const rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            /** @type {?} */\n            const errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(`Template parse errors:\\n${errorString}`);\n        }\n        /** @type {?} */\n        const templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        /** @type {?} */\n        const visitor = new TemplatePreparseVisitor();\n        html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n        /** @type {?} */\n        const templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        /** @type {?} */\n        const styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        /** @type {?} */\n        const inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        /** @type {?} */\n        const styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template,\n            templateUrl: templateAbsUrl, isInline,\n            htmlAst: rootNodesAndErrors, styles, inlineStyleUrls, styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    }\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    _normalizeTemplateMetadata(prenormData, preparsedTemplate) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), (externalStylesheets) => this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets));\n    }\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    _normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, stylesheets) {\n        /** @type {?} */\n        const styles = [...preparsedTemplate.styles];\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        /** @type {?} */\n        const styleUrls = preparsedTemplate.styleUrls;\n        /** @type {?} */\n        const externalStylesheets = styleUrls.map(styleUrl => {\n            /** @type {?} */\n            const stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            /** @type {?} */\n            const styles = [...stylesheet.styles];\n            this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        /** @type {?} */\n        let encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles, styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    }\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    _inlineStyles(styleUrls, stylesheets, targetStyles) {\n        styleUrls.forEach(styleUrl => {\n            /** @type {?} */\n            const stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(style => targetStyles.push(style));\n            this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    }\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    _loadMissingExternalStylesheets(styleUrls, loadedStylesheets = new Map()) {\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n            .map(styleUrl => SyncAsync.then(this._fetch(styleUrl), (loadedStyle) => {\n            /** @type {?} */\n            const stylesheet = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }))), (_) => loadedStylesheets);\n    }\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    _normalizeStylesheet(stylesheet) {\n        /** @type {?} */\n        const moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        /** @type {?} */\n        const allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(url => this._urlResolver.resolve(moduleUrl, url));\n        /** @type {?} */\n        const allStyles = stylesheet.styles.map(style => {\n            /** @type {?} */\n            const styleWithImports = extractStyleUrls(this._urlResolver, moduleUrl, style);\n            allStyleUrls.push(...styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    }\n}\nif (false) {\n    /** @type {?} */\n    DirectiveNormalizer.prototype._resourceLoaderCache;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._resourceLoader;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._urlResolver;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._htmlParser;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._config;\n}\n/**\n * @record\n */\nfunction PreparsedTemplate() { }\n/** @type {?} */\nPreparsedTemplate.prototype.template;\n/** @type {?} */\nPreparsedTemplate.prototype.templateUrl;\n/** @type {?} */\nPreparsedTemplate.prototype.isInline;\n/** @type {?} */\nPreparsedTemplate.prototype.htmlAst;\n/** @type {?} */\nPreparsedTemplate.prototype.styles;\n/** @type {?} */\nPreparsedTemplate.prototype.inlineStyleUrls;\n/** @type {?} */\nPreparsedTemplate.prototype.styleUrls;\n/** @type {?} */\nPreparsedTemplate.prototype.ngContentSelectors;\nclass TemplatePreparseVisitor {\n    constructor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        /** @type {?} */\n        const preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                /** @type {?} */\n                let textContent = '';\n                ast.children.forEach(child => {\n                    if (child instanceof html.Text) {\n                        textContent += child.value;\n                    }\n                });\n                this.styles.push(textContent);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        html.visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(ast, context) { html.visitAll(this, ast.cases); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(ast, context) {\n        html.visitAll(this, ast.expression);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.ngContentSelectors;\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.styles;\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.styleUrls;\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.ngNonBindableStackCount;\n}\n//# sourceMappingURL=directive_normalizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createComponent, createContentChild, createContentChildren, createDirective, createHostBinding, createHostListener, createInput, createOutput, createViewChild, createViewChildren } from './core';\nimport { resolveForwardRef, splitAtColon, stringify } from './util';\n/** @type {?} */\nconst QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nexport class DirectiveResolver {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isDirective(type) {\n        /** @type {?} */\n        const typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    resolve(type, throwIfNotFound = true) {\n        /** @type {?} */\n        const typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            /** @type {?} */\n            const metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                /** @type {?} */\n                const propertyMetadata = this._reflector.propMetadata(type);\n                /** @type {?} */\n                const guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(`No Directive annotation found on ${stringify(type)}`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    _mergeWithPropertyMetadata(dm, propertyMetadata, guards, directiveType) {\n        /** @type {?} */\n        const inputs = [];\n        /** @type {?} */\n        const outputs = [];\n        /** @type {?} */\n        const host = {};\n        /** @type {?} */\n        const queries = {};\n        Object.keys(propertyMetadata).forEach((propName) => {\n            /** @type {?} */\n            const input = findLast(propertyMetadata[propName], (a) => createInput.isTypeOf(a));\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(`${propName}: ${input.bindingPropertyName}`);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            /** @type {?} */\n            const output = findLast(propertyMetadata[propName], (a) => createOutput.isTypeOf(a));\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(`${propName}: ${output.bindingPropertyName}`);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            /** @type {?} */\n            const hostBindings = propertyMetadata[propName].filter(a => createHostBinding.isTypeOf(a));\n            hostBindings.forEach(hostBinding => {\n                if (hostBinding.hostPropertyName) {\n                    /** @type {?} */\n                    const startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(`@HostBinding can not bind to events. Use @HostListener instead.`);\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(`@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.`);\n                    }\n                    host[`[${hostBinding.hostPropertyName}]`] = propName;\n                }\n                else {\n                    host[`[${propName}]`] = propName;\n                }\n            });\n            /** @type {?} */\n            const hostListeners = propertyMetadata[propName].filter(a => createHostListener.isTypeOf(a));\n            hostListeners.forEach(hostListener => {\n                /** @type {?} */\n                const args = hostListener.args || [];\n                host[`(${hostListener.eventName})`] = `${propName}(${args.join(',')})`;\n            });\n            /** @type {?} */\n            const query = findLast(propertyMetadata[propName], (a) => QUERY_METADATA_IDENTIFIERS.some(i => i.isTypeOf(a)));\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    _extractPublicName(def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); }\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    _dedupeBindings(bindings) {\n        /** @type {?} */\n        const names = new Set();\n        /** @type {?} */\n        const publicNames = new Set();\n        /** @type {?} */\n        const reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (let i = bindings.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const binding = bindings[i];\n            /** @type {?} */\n            const name = this._extractPublicName(binding);\n            publicNames.add(name);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    }\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    _merge(directive, inputs, outputs, host, queries, guards, directiveType) {\n        /** @type {?} */\n        const mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        /** @type {?} */\n        const mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        /** @type {?} */\n        const mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        /** @type {?} */\n        const mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            /** @type {?} */\n            const comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards\n            });\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    DirectiveResolver.prototype._reflector;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nexport function findLast(arr, condition) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=directive_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport const $EOF = 0;\n/** @type {?} */\nexport const $TAB = 9;\n/** @type {?} */\nexport const $LF = 10;\n/** @type {?} */\nexport const $VTAB = 11;\n/** @type {?} */\nexport const $FF = 12;\n/** @type {?} */\nexport const $CR = 13;\n/** @type {?} */\nexport const $SPACE = 32;\n/** @type {?} */\nexport const $BANG = 33;\n/** @type {?} */\nexport const $DQ = 34;\n/** @type {?} */\nexport const $HASH = 35;\n/** @type {?} */\nexport const $$ = 36;\n/** @type {?} */\nexport const $PERCENT = 37;\n/** @type {?} */\nexport const $AMPERSAND = 38;\n/** @type {?} */\nexport const $SQ = 39;\n/** @type {?} */\nexport const $LPAREN = 40;\n/** @type {?} */\nexport const $RPAREN = 41;\n/** @type {?} */\nexport const $STAR = 42;\n/** @type {?} */\nexport const $PLUS = 43;\n/** @type {?} */\nexport const $COMMA = 44;\n/** @type {?} */\nexport const $MINUS = 45;\n/** @type {?} */\nexport const $PERIOD = 46;\n/** @type {?} */\nexport const $SLASH = 47;\n/** @type {?} */\nexport const $COLON = 58;\n/** @type {?} */\nexport const $SEMICOLON = 59;\n/** @type {?} */\nexport const $LT = 60;\n/** @type {?} */\nexport const $EQ = 61;\n/** @type {?} */\nexport const $GT = 62;\n/** @type {?} */\nexport const $QUESTION = 63;\n/** @type {?} */\nexport const $0 = 48;\n/** @type {?} */\nexport const $9 = 57;\n/** @type {?} */\nexport const $A = 65;\n/** @type {?} */\nexport const $E = 69;\n/** @type {?} */\nexport const $F = 70;\n/** @type {?} */\nexport const $X = 88;\n/** @type {?} */\nexport const $Z = 90;\n/** @type {?} */\nexport const $LBRACKET = 91;\n/** @type {?} */\nexport const $BACKSLASH = 92;\n/** @type {?} */\nexport const $RBRACKET = 93;\n/** @type {?} */\nexport const $CARET = 94;\n/** @type {?} */\nexport const $_ = 95;\n/** @type {?} */\nexport const $a = 97;\n/** @type {?} */\nexport const $e = 101;\n/** @type {?} */\nexport const $f = 102;\n/** @type {?} */\nexport const $n = 110;\n/** @type {?} */\nexport const $r = 114;\n/** @type {?} */\nexport const $t = 116;\n/** @type {?} */\nexport const $u = 117;\n/** @type {?} */\nexport const $v = 118;\n/** @type {?} */\nexport const $x = 120;\n/** @type {?} */\nexport const $z = 122;\n/** @type {?} */\nexport const $LBRACE = 123;\n/** @type {?} */\nexport const $BAR = 124;\n/** @type {?} */\nexport const $RBRACE = 125;\n/** @type {?} */\nexport const $NBSP = 160;\n/** @type {?} */\nexport const $PIPE = 124;\n/** @type {?} */\nexport const $TILDA = 126;\n/** @type {?} */\nexport const $AT = 64;\n/** @type {?} */\nexport const $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n//# sourceMappingURL=chars.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\n/** @enum {number} */\nconst TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nexport { TokenType };\nTokenType[TokenType.Character] = 'Character';\nTokenType[TokenType.Identifier] = 'Identifier';\nTokenType[TokenType.Keyword] = 'Keyword';\nTokenType[TokenType.String] = 'String';\nTokenType[TokenType.Operator] = 'Operator';\nTokenType[TokenType.Number] = 'Number';\nTokenType[TokenType.Error] = 'Error';\n/** @type {?} */\nconst KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nexport class Lexer {\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    tokenize(text) {\n        /** @type {?} */\n        const scanner = new _Scanner(text);\n        /** @type {?} */\n        const tokens = [];\n        /** @type {?} */\n        let token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    }\n}\nexport class Token {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    constructor(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    isCharacter(code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    }\n    /**\n     * @return {?}\n     */\n    isNumber() { return this.type == TokenType.Number; }\n    /**\n     * @return {?}\n     */\n    isString() { return this.type == TokenType.String; }\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    isOperator(operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    }\n    /**\n     * @return {?}\n     */\n    isIdentifier() { return this.type == TokenType.Identifier; }\n    /**\n     * @return {?}\n     */\n    isKeyword() { return this.type == TokenType.Keyword; }\n    /**\n     * @return {?}\n     */\n    isKeywordLet() { return this.type == TokenType.Keyword && this.strValue == 'let'; }\n    /**\n     * @return {?}\n     */\n    isKeywordAs() { return this.type == TokenType.Keyword && this.strValue == 'as'; }\n    /**\n     * @return {?}\n     */\n    isKeywordNull() { return this.type == TokenType.Keyword && this.strValue == 'null'; }\n    /**\n     * @return {?}\n     */\n    isKeywordUndefined() {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    }\n    /**\n     * @return {?}\n     */\n    isKeywordTrue() { return this.type == TokenType.Keyword && this.strValue == 'true'; }\n    /**\n     * @return {?}\n     */\n    isKeywordFalse() { return this.type == TokenType.Keyword && this.strValue == 'false'; }\n    /**\n     * @return {?}\n     */\n    isKeywordThis() { return this.type == TokenType.Keyword && this.strValue == 'this'; }\n    /**\n     * @return {?}\n     */\n    isError() { return this.type == TokenType.Error; }\n    /**\n     * @return {?}\n     */\n    toNumber() { return this.type == TokenType.Number ? this.numValue : -1; }\n    /**\n     * @return {?}\n     */\n    toString() {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    Token.prototype.index;\n    /** @type {?} */\n    Token.prototype.type;\n    /** @type {?} */\n    Token.prototype.numValue;\n    /** @type {?} */\n    Token.prototype.strValue;\n}\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\n/** @type {?} */\nexport const EOF = new Token(-1, TokenType.Character, 0, '');\nclass _Scanner {\n    /**\n     * @param {?} input\n     */\n    constructor(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    advance() {\n        this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n    }\n    /**\n     * @return {?}\n     */\n    scanToken() {\n        /** @type {?} */\n        const input = this.input;\n        /** @type {?} */\n        const length = this.length;\n        /** @type {?} */\n        let peek = this.peek;\n        /** @type {?} */\n        let index = this.index;\n        // Skip whitespace.\n        while (peek <= chars.$SPACE) {\n            if (++index >= length) {\n                peek = chars.$EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (chars.isDigit(peek))\n            return this.scanNumber(index);\n        /** @type {?} */\n        const start = index;\n        switch (peek) {\n            case chars.$PERIOD:\n                this.advance();\n                return chars.isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, chars.$PERIOD);\n            case chars.$LPAREN:\n            case chars.$RPAREN:\n            case chars.$LBRACE:\n            case chars.$RBRACE:\n            case chars.$LBRACKET:\n            case chars.$RBRACKET:\n            case chars.$COMMA:\n            case chars.$COLON:\n            case chars.$SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case chars.$SQ:\n            case chars.$DQ:\n                return this.scanString();\n            case chars.$HASH:\n            case chars.$PLUS:\n            case chars.$MINUS:\n            case chars.$STAR:\n            case chars.$SLASH:\n            case chars.$PERCENT:\n            case chars.$CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case chars.$QUESTION:\n                return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n            case chars.$LT:\n            case chars.$GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n            case chars.$BANG:\n            case chars.$EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n            case chars.$AMPERSAND:\n                return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n            case chars.$BAR:\n                return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n            case chars.$NBSP:\n                while (chars.isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(`Unexpected character [${String.fromCharCode(peek)}]`, 0);\n    }\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    scanCharacter(start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    }\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    scanOperator(start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    }\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    scanComplexOperator(start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        /** @type {?} */\n        let str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    }\n    /**\n     * @return {?}\n     */\n    scanIdentifier() {\n        /** @type {?} */\n        const start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        /** @type {?} */\n        const str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    scanNumber(start) {\n        /** @type {?} */\n        let simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (chars.isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == chars.$PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!chars.isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        /** @type {?} */\n        const str = this.input.substring(start, this.index);\n        /** @type {?} */\n        const value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    }\n    /**\n     * @return {?}\n     */\n    scanString() {\n        /** @type {?} */\n        const start = this.index;\n        /** @type {?} */\n        const quote = this.peek;\n        this.advance();\n        /** @type {?} */\n        let buffer = '';\n        /** @type {?} */\n        let marker = this.index;\n        /** @type {?} */\n        const input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == chars.$BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                /** @type {?} */\n                let unescapedCode;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == chars.$u) {\n                    /** @type {?} */\n                    const hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(`Invalid unicode escape [\\\\u${hex}]`, 0);\n                    }\n                    for (let i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == chars.$EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        /** @type {?} */\n        const last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    }\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    error(message, offset) {\n        /** @type {?} */\n        const position = this.index + offset;\n        return newErrorToken(position, `Lexer Error: ${message} at column ${position} in expression [${this.input}]`);\n    }\n}\nif (false) {\n    /** @type {?} */\n    _Scanner.prototype.length;\n    /** @type {?} */\n    _Scanner.prototype.peek;\n    /** @type {?} */\n    _Scanner.prototype.index;\n    /** @type {?} */\n    _Scanner.prototype.input;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n        (code == chars.$_) || (code == chars.$$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    /** @type {?} */\n    const scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== chars.$EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n        (code == chars.$$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == chars.$e || code == chars.$E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == chars.$MINUS || code == chars.$PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isQuote(code) {\n    return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case chars.$n:\n            return chars.$LF;\n        case chars.$f:\n            return chars.$FF;\n        case chars.$r:\n            return chars.$CR;\n        case chars.$t:\n            return chars.$TAB;\n        case chars.$v:\n            return chars.$VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    /** @type {?} */\n    const result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n//# sourceMappingURL=lexer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class ParserError {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    constructor(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = `Parser Error: ${message} ${errLocation} [${input}] in ${ctxLocation}`;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParserError.prototype.message;\n    /** @type {?} */\n    ParserError.prototype.input;\n    /** @type {?} */\n    ParserError.prototype.errLocation;\n    /** @type {?} */\n    ParserError.prototype.ctxLocation;\n}\nexport class ParseSpan {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParseSpan.prototype.start;\n    /** @type {?} */\n    ParseSpan.prototype.end;\n}\nexport class AST {\n    /**\n     * @param {?} span\n     */\n    constructor(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return null; }\n    /**\n     * @return {?}\n     */\n    toString() { return 'AST'; }\n}\nif (false) {\n    /** @type {?} */\n    AST.prototype.span;\n}\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nexport class Quote extends AST {\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    constructor(span, prefix, uninterpretedExpression, location) {\n        super(span);\n        this.prefix = prefix;\n        this.uninterpretedExpression = uninterpretedExpression;\n        this.location = location;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return visitor.visitQuote(this, context); }\n    /**\n     * @return {?}\n     */\n    toString() { return 'Quote'; }\n}\nif (false) {\n    /** @type {?} */\n    Quote.prototype.prefix;\n    /** @type {?} */\n    Quote.prototype.uninterpretedExpression;\n    /** @type {?} */\n    Quote.prototype.location;\n}\nexport class EmptyExpr extends AST {\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        // do nothing\n    }\n}\nexport class ImplicitReceiver extends AST {\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitImplicitReceiver(this, context);\n    }\n}\n/**\n * Multiple expressions separated by a semicolon.\n */\nexport class Chain extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    constructor(span, expressions) {\n        super(span);\n        this.expressions = expressions;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return visitor.visitChain(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Chain.prototype.expressions;\n}\nexport class Conditional extends AST {\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    constructor(span, condition, trueExp, falseExp) {\n        super(span);\n        this.condition = condition;\n        this.trueExp = trueExp;\n        this.falseExp = falseExp;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitConditional(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    Conditional.prototype.condition;\n    /** @type {?} */\n    Conditional.prototype.trueExp;\n    /** @type {?} */\n    Conditional.prototype.falseExp;\n}\nexport class PropertyRead extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    constructor(span, receiver, name) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitPropertyRead(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    PropertyRead.prototype.receiver;\n    /** @type {?} */\n    PropertyRead.prototype.name;\n}\nexport class PropertyWrite extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    constructor(span, receiver, name, value) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitPropertyWrite(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    PropertyWrite.prototype.receiver;\n    /** @type {?} */\n    PropertyWrite.prototype.name;\n    /** @type {?} */\n    PropertyWrite.prototype.value;\n}\nexport class SafePropertyRead extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    constructor(span, receiver, name) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitSafePropertyRead(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    SafePropertyRead.prototype.receiver;\n    /** @type {?} */\n    SafePropertyRead.prototype.name;\n}\nexport class KeyedRead extends AST {\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    constructor(span, obj, key) {\n        super(span);\n        this.obj = obj;\n        this.key = key;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitKeyedRead(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    KeyedRead.prototype.obj;\n    /** @type {?} */\n    KeyedRead.prototype.key;\n}\nexport class KeyedWrite extends AST {\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    constructor(span, obj, key, value) {\n        super(span);\n        this.obj = obj;\n        this.key = key;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitKeyedWrite(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    KeyedWrite.prototype.obj;\n    /** @type {?} */\n    KeyedWrite.prototype.key;\n    /** @type {?} */\n    KeyedWrite.prototype.value;\n}\nexport class BindingPipe extends AST {\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    constructor(span, exp, name, args) {\n        super(span);\n        this.exp = exp;\n        this.name = name;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return visitor.visitPipe(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    BindingPipe.prototype.exp;\n    /** @type {?} */\n    BindingPipe.prototype.name;\n    /** @type {?} */\n    BindingPipe.prototype.args;\n}\nexport class LiteralPrimitive extends AST {\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    constructor(span, value) {\n        super(span);\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitLiteralPrimitive(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralPrimitive.prototype.value;\n}\nexport class LiteralArray extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    constructor(span, expressions) {\n        super(span);\n        this.expressions = expressions;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitLiteralArray(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralArray.prototype.expressions;\n}\n/** @typedef {?} */\nvar LiteralMapKey;\nexport { LiteralMapKey };\nexport class LiteralMap extends AST {\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    constructor(span, keys, values) {\n        super(span);\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitLiteralMap(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralMap.prototype.keys;\n    /** @type {?} */\n    LiteralMap.prototype.values;\n}\nexport class Interpolation extends AST {\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    constructor(span, strings, expressions) {\n        super(span);\n        this.strings = strings;\n        this.expressions = expressions;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitInterpolation(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    Interpolation.prototype.strings;\n    /** @type {?} */\n    Interpolation.prototype.expressions;\n}\nexport class Binary extends AST {\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    constructor(span, operation, left, right) {\n        super(span);\n        this.operation = operation;\n        this.left = left;\n        this.right = right;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitBinary(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    Binary.prototype.operation;\n    /** @type {?} */\n    Binary.prototype.left;\n    /** @type {?} */\n    Binary.prototype.right;\n}\nexport class PrefixNot extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    constructor(span, expression) {\n        super(span);\n        this.expression = expression;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitPrefixNot(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    PrefixNot.prototype.expression;\n}\nexport class NonNullAssert extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    constructor(span, expression) {\n        super(span);\n        this.expression = expression;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitNonNullAssert(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    NonNullAssert.prototype.expression;\n}\nexport class MethodCall extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    constructor(span, receiver, name, args) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitMethodCall(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    MethodCall.prototype.receiver;\n    /** @type {?} */\n    MethodCall.prototype.name;\n    /** @type {?} */\n    MethodCall.prototype.args;\n}\nexport class SafeMethodCall extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    constructor(span, receiver, name, args) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitSafeMethodCall(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    SafeMethodCall.prototype.receiver;\n    /** @type {?} */\n    SafeMethodCall.prototype.name;\n    /** @type {?} */\n    SafeMethodCall.prototype.args;\n}\nexport class FunctionCall extends AST {\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    constructor(span, target, args) {\n        super(span);\n        this.target = target;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitFunctionCall(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FunctionCall.prototype.target;\n    /** @type {?} */\n    FunctionCall.prototype.args;\n}\nexport class ASTWithSource extends AST {\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    constructor(ast, source, location, errors) {\n        super(new ParseSpan(0, source == null ? 0 : source.length));\n        this.ast = ast;\n        this.source = source;\n        this.location = location;\n        this.errors = errors;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return this.ast.visit(visitor, context); }\n    /**\n     * @return {?}\n     */\n    toString() { return `${this.source} in ${this.location}`; }\n}\nif (false) {\n    /** @type {?} */\n    ASTWithSource.prototype.ast;\n    /** @type {?} */\n    ASTWithSource.prototype.source;\n    /** @type {?} */\n    ASTWithSource.prototype.location;\n    /** @type {?} */\n    ASTWithSource.prototype.errors;\n}\nexport class TemplateBinding {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    constructor(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TemplateBinding.prototype.span;\n    /** @type {?} */\n    TemplateBinding.prototype.key;\n    /** @type {?} */\n    TemplateBinding.prototype.keyIsVar;\n    /** @type {?} */\n    TemplateBinding.prototype.name;\n    /** @type {?} */\n    TemplateBinding.prototype.expression;\n}\n/**\n * @record\n */\nexport function AstVisitor() { }\n/** @type {?} */\nAstVisitor.prototype.visitBinary;\n/** @type {?} */\nAstVisitor.prototype.visitChain;\n/** @type {?} */\nAstVisitor.prototype.visitConditional;\n/** @type {?} */\nAstVisitor.prototype.visitFunctionCall;\n/** @type {?} */\nAstVisitor.prototype.visitImplicitReceiver;\n/** @type {?} */\nAstVisitor.prototype.visitInterpolation;\n/** @type {?} */\nAstVisitor.prototype.visitKeyedRead;\n/** @type {?} */\nAstVisitor.prototype.visitKeyedWrite;\n/** @type {?} */\nAstVisitor.prototype.visitLiteralArray;\n/** @type {?} */\nAstVisitor.prototype.visitLiteralMap;\n/** @type {?} */\nAstVisitor.prototype.visitLiteralPrimitive;\n/** @type {?} */\nAstVisitor.prototype.visitMethodCall;\n/** @type {?} */\nAstVisitor.prototype.visitPipe;\n/** @type {?} */\nAstVisitor.prototype.visitPrefixNot;\n/** @type {?} */\nAstVisitor.prototype.visitNonNullAssert;\n/** @type {?} */\nAstVisitor.prototype.visitPropertyRead;\n/** @type {?} */\nAstVisitor.prototype.visitPropertyWrite;\n/** @type {?} */\nAstVisitor.prototype.visitQuote;\n/** @type {?} */\nAstVisitor.prototype.visitSafeMethodCall;\n/** @type {?} */\nAstVisitor.prototype.visitSafePropertyRead;\n/** @type {?|undefined} */\nAstVisitor.prototype.visit;\nexport class NullAstVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) { }\n}\nexport class RecursiveAstVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) { return this.visitAll(ast.expressions, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) {\n        return this.visitAll(ast.expressions, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        return this.visitAll(ast.expressions, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) { return this.visitAll(ast.values, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) {\n        ast.expression.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) {\n        ast.expression.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    }\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    visitAll(asts, context) {\n        asts.forEach(ast => ast.visit(this, context));\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { return null; }\n}\nexport class AstTransformer {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    }\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    visitAll(asts) {\n        /** @type {?} */\n        const res = new Array(asts.length);\n        for (let i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    }\n}\nexport class AstMemoryEfficientTransformer {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) {\n        /** @type {?} */\n        const expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions)\n            return new Interpolation(ast.span, ast.strings, expressions);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) {\n        /** @type {?} */\n        const receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new PropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) {\n        /** @type {?} */\n        const receiver = ast.receiver.visit(this);\n        /** @type {?} */\n        const value = ast.value.visit(this);\n        if (receiver !== ast.receiver || value !== ast.value) {\n            return new PropertyWrite(ast.span, receiver, ast.name, value);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) {\n        /** @type {?} */\n        const receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new SafePropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) {\n        /** @type {?} */\n        const receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) {\n        /** @type {?} */\n        const receiver = ast.receiver.visit(this);\n        /** @type {?} */\n        const args = this.visitAll(ast.args);\n        if (receiver !== ast.receiver || args !== ast.args) {\n            return new SafeMethodCall(ast.span, receiver, ast.name, args);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) {\n        /** @type {?} */\n        const target = ast.target && ast.target.visit(this);\n        /** @type {?} */\n        const args = this.visitAll(ast.args);\n        if (target !== ast.target || args !== ast.args) {\n            return new FunctionCall(ast.span, target, args);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        /** @type {?} */\n        const expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new LiteralArray(ast.span, expressions);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) {\n        /** @type {?} */\n        const values = this.visitAll(ast.values);\n        if (values !== ast.values) {\n            return new LiteralMap(ast.span, ast.keys, values);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) {\n        /** @type {?} */\n        const left = ast.left.visit(this);\n        /** @type {?} */\n        const right = ast.right.visit(this);\n        if (left !== ast.left || right !== ast.right) {\n            return new Binary(ast.span, ast.operation, left, right);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) {\n        /** @type {?} */\n        const expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new PrefixNot(ast.span, expression);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) {\n        /** @type {?} */\n        const expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new NonNullAssert(ast.span, expression);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) {\n        /** @type {?} */\n        const condition = ast.condition.visit(this);\n        /** @type {?} */\n        const trueExp = ast.trueExp.visit(this);\n        /** @type {?} */\n        const falseExp = ast.falseExp.visit(this);\n        if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n            return new Conditional(ast.span, condition, trueExp, falseExp);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        /** @type {?} */\n        const exp = ast.exp.visit(this);\n        /** @type {?} */\n        const args = this.visitAll(ast.args);\n        if (exp !== ast.exp || args !== ast.args) {\n            return new BindingPipe(ast.span, exp, ast.name, args);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) {\n        /** @type {?} */\n        const obj = ast.obj.visit(this);\n        /** @type {?} */\n        const key = ast.key.visit(this);\n        if (obj !== ast.obj || key !== ast.key) {\n            return new KeyedRead(ast.span, obj, key);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) {\n        /** @type {?} */\n        const obj = ast.obj.visit(this);\n        /** @type {?} */\n        const key = ast.key.visit(this);\n        /** @type {?} */\n        const value = ast.value.visit(this);\n        if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n            return new KeyedWrite(ast.span, obj, key, value);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    visitAll(asts) {\n        /** @type {?} */\n        const res = new Array(asts.length);\n        /** @type {?} */\n        let modified = false;\n        for (let i = 0; i < asts.length; ++i) {\n            /** @type {?} */\n            const original = asts[i];\n            /** @type {?} */\n            const value = original.visit(this);\n            res[i] = value;\n            modified = modified || value !== original;\n        }\n        return modified ? res : asts;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) {\n        /** @type {?} */\n        const expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new Chain(ast.span, expressions);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { return ast; }\n}\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nexport function visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary(ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain(ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional(ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall(ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation(ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead(ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite(ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray(ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall(ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe(ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot(ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert(ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead(ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite(ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall(ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead(ast) { visit(ast.receiver); },\n    });\n}\nexport class ParsedProperty {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    constructor(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === ParsedPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === ParsedPropertyType.ANIMATION;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParsedProperty.prototype.isLiteral;\n    /** @type {?} */\n    ParsedProperty.prototype.isAnimation;\n    /** @type {?} */\n    ParsedProperty.prototype.name;\n    /** @type {?} */\n    ParsedProperty.prototype.expression;\n    /** @type {?} */\n    ParsedProperty.prototype.type;\n    /** @type {?} */\n    ParsedProperty.prototype.sourceSpan;\n}\n/** @enum {number} */\nconst ParsedPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nexport { ParsedPropertyType };\nParsedPropertyType[ParsedPropertyType.DEFAULT] = 'DEFAULT';\nParsedPropertyType[ParsedPropertyType.LITERAL_ATTR] = 'LITERAL_ATTR';\nParsedPropertyType[ParsedPropertyType.ANIMATION] = 'ANIMATION';\n/** @enum {number} */\nconst ParsedEventType = {\n    // DOM or Directive event\n    Regular: 0,\n    // Animation specific event\n    Animation: 1,\n};\nexport { ParsedEventType };\nexport class ParsedEvent {\n    /**\n     * @param {?} name\n     * @param {?} targetOrPhase\n     * @param {?} type\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    constructor(name, targetOrPhase, type, handler, sourceSpan) {\n        this.name = name;\n        this.targetOrPhase = targetOrPhase;\n        this.type = type;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParsedEvent.prototype.name;\n    /** @type {?} */\n    ParsedEvent.prototype.targetOrPhase;\n    /** @type {?} */\n    ParsedEvent.prototype.type;\n    /** @type {?} */\n    ParsedEvent.prototype.handler;\n    /** @type {?} */\n    ParsedEvent.prototype.sourceSpan;\n}\nexport class ParsedVariable {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParsedVariable.prototype.name;\n    /** @type {?} */\n    ParsedVariable.prototype.value;\n    /** @type {?} */\n    ParsedVariable.prototype.sourceSpan;\n}\n/** @enum {number} */\nconst BindingType = {\n    // A regular binding to a property (e.g. `[property]=\"expression\"`).\n    Property: 0,\n    // A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n    Attribute: 1,\n    // A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n    Class: 2,\n    // A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n    Style: 3,\n    // A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n    Animation: 4,\n};\nexport { BindingType };\nexport class BoundElementProperty {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    constructor(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n}\nif (false) {\n    /** @type {?} */\n    BoundElementProperty.prototype.name;\n    /** @type {?} */\n    BoundElementProperty.prototype.type;\n    /** @type {?} */\n    BoundElementProperty.prototype.securityContext;\n    /** @type {?} */\n    BoundElementProperty.prototype.value;\n    /** @type {?} */\n    BoundElementProperty.prototype.unit;\n    /** @type {?} */\n    BoundElementProperty.prototype.sourceSpan;\n}\n//# sourceMappingURL=ast.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { escapeRegExp } from '../util';\nimport { ASTWithSource, Binary, BindingPipe, Chain, Conditional, EmptyExpr, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, NonNullAssert, ParseSpan, ParserError, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, TemplateBinding } from './ast';\nimport { EOF, TokenType, isIdentifier, isQuote } from './lexer';\nexport class SplitInterpolation {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    constructor(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n}\nif (false) {\n    /** @type {?} */\n    SplitInterpolation.prototype.strings;\n    /** @type {?} */\n    SplitInterpolation.prototype.expressions;\n    /** @type {?} */\n    SplitInterpolation.prototype.offsets;\n}\nexport class TemplateBindingParseResult {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    constructor(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TemplateBindingParseResult.prototype.templateBindings;\n    /** @type {?} */\n    TemplateBindingParseResult.prototype.warnings;\n    /** @type {?} */\n    TemplateBindingParseResult.prototype.errors;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    /** @type {?} */\n    const pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nexport class Parser {\n    /**\n     * @param {?} _lexer\n     */\n    constructor(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseAction(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        /** @type {?} */\n        const sourceToLex = this._stripComments(input);\n        /** @type {?} */\n        const tokens = this._lexer.tokenize(this._stripComments(input));\n        /** @type {?} */\n        const ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseBinding(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        /** @type {?} */\n        const ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseSimpleBinding(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        /** @type {?} */\n        const ast = this._parseBindingAst(input, location, interpolationConfig);\n        /** @type {?} */\n        const errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(`Host binding expression cannot contain ${errors.join(' ')}`, input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    }\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    _reportError(message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _parseBindingAst(input, location, interpolationConfig) {\n        /** @type {?} */\n        const quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        /** @type {?} */\n        const sourceToLex = this._stripComments(input);\n        /** @type {?} */\n        const tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    _parseQuote(input, location) {\n        if (input == null)\n            return null;\n        /** @type {?} */\n        const prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        /** @type {?} */\n        const prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        /** @type {?} */\n        const uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    }\n    /**\n     * @param {?} tplKey\n     * @param {?} tplValue\n     * @param {?} location\n     * @return {?}\n     */\n    parseTemplateBindings(tplKey, tplValue, location) {\n        /** @type {?} */\n        const tokens = this._lexer.tokenize(tplValue);\n        return new _ParseAST(tplValue, location, tokens, tplValue.length, false, this.errors, 0)\n            .parseTemplateBindings(tplKey);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseInterpolation(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        /** @type {?} */\n        const split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        /** @type {?} */\n        const expressions = [];\n        for (let i = 0; i < split.expressions.length; ++i) {\n            /** @type {?} */\n            const expressionText = split.expressions[i];\n            /** @type {?} */\n            const sourceToLex = this._stripComments(expressionText);\n            /** @type {?} */\n            const tokens = this._lexer.tokenize(sourceToLex);\n            /** @type {?} */\n            const ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    splitInterpolation(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        /** @type {?} */\n        const regexp = _createInterpolateRegExp(interpolationConfig);\n        /** @type {?} */\n        const parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        /** @type {?} */\n        const strings = [];\n        /** @type {?} */\n        const expressions = [];\n        /** @type {?} */\n        const offsets = [];\n        /** @type {?} */\n        let offset = 0;\n        for (let i = 0; i < parts.length; i++) {\n            /** @type {?} */\n            const part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, `at column ${this._findInterpolationErrorColumn(parts, i, interpolationConfig)} in`, location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    wrapLiteralPrimitive(input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    _stripComments(input) {\n        /** @type {?} */\n        const i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    _commentStart(input) {\n        /** @type {?} */\n        let outerQuote = null;\n        for (let i = 0; i < input.length - 1; i++) {\n            /** @type {?} */\n            const char = input.charCodeAt(i);\n            /** @type {?} */\n            const nextChar = input.charCodeAt(i + 1);\n            if (char === chars.$SLASH && nextChar == chars.$SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _checkNoInterpolation(input, location, interpolationConfig) {\n        /** @type {?} */\n        const regexp = _createInterpolateRegExp(interpolationConfig);\n        /** @type {?} */\n        const parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(`Got interpolation (${interpolationConfig.start}${interpolationConfig.end}) where expression was expected`, input, `at column ${this._findInterpolationErrorColumn(parts, 1, interpolationConfig)} in`, location);\n        }\n    }\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _findInterpolationErrorColumn(parts, partInErrIdx, interpolationConfig) {\n        /** @type {?} */\n        let errLocation = '';\n        for (let j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                `${interpolationConfig.start}${parts[j]}${interpolationConfig.end}`;\n        }\n        return errLocation.length;\n    }\n}\nif (false) {\n    /** @type {?} */\n    Parser.prototype.errors;\n    /** @type {?} */\n    Parser.prototype._lexer;\n}\nexport class _ParseAST {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    constructor(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    peek(offset) {\n        /** @type {?} */\n        const i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    }\n    /**\n     * @return {?}\n     */\n    get next() { return this.peek(0); }\n    /**\n     * @return {?}\n     */\n    get inputIndex() {\n        return (this.index < this.tokens.length) ? this.next.index + this.offset :\n            this.inputLength + this.offset;\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    span(start) { return new ParseSpan(start, this.inputIndex); }\n    /**\n     * @return {?}\n     */\n    advance() { this.index++; }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    optionalCharacter(code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    peekKeywordLet() { return this.next.isKeywordLet(); }\n    /**\n     * @return {?}\n     */\n    peekKeywordAs() { return this.next.isKeywordAs(); }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    expectCharacter(code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(`Missing expected ${String.fromCharCode(code)}`);\n    }\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    optionalOperator(op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    expectOperator(operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(`Missing expected operator ${operator}`);\n    }\n    /**\n     * @return {?}\n     */\n    expectIdentifierOrKeyword() {\n        /** @type {?} */\n        const n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(`Unexpected token ${n}, expected identifier or keyword`);\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    }\n    /**\n     * @return {?}\n     */\n    expectIdentifierOrKeywordOrString() {\n        /** @type {?} */\n        const n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(`Unexpected token ${n}, expected identifier, keyword, or string`);\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    }\n    /**\n     * @return {?}\n     */\n    parseChain() {\n        /** @type {?} */\n        const exprs = [];\n        /** @type {?} */\n        const start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            /** @type {?} */\n            const expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter(chars.$SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter(chars.$SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(`Unexpected token '${this.next}'`);\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    }\n    /**\n     * @return {?}\n     */\n    parsePipe() {\n        /** @type {?} */\n        let result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                /** @type {?} */\n                const name = this.expectIdentifierOrKeyword();\n                /** @type {?} */\n                const args = [];\n                while (this.optionalCharacter(chars.$COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseExpression() { return this.parseConditional(); }\n    /**\n     * @return {?}\n     */\n    parseConditional() {\n        /** @type {?} */\n        const start = this.inputIndex;\n        /** @type {?} */\n        const result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            /** @type {?} */\n            const yes = this.parsePipe();\n            /** @type {?} */\n            let no;\n            if (!this.optionalCharacter(chars.$COLON)) {\n                /** @type {?} */\n                const end = this.inputIndex;\n                /** @type {?} */\n                const expression = this.input.substring(start, end);\n                this.error(`Conditional expression ${expression} requires all 3 expressions`);\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    parseLogicalOr() {\n        /** @type {?} */\n        let result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            /** @type {?} */\n            const right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseLogicalAnd() {\n        /** @type {?} */\n        let result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            /** @type {?} */\n            const right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseEquality() {\n        /** @type {?} */\n        let result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            /** @type {?} */\n            const operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    /** @type {?} */\n                    const right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseRelational() {\n        /** @type {?} */\n        let result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            /** @type {?} */\n            const operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    /** @type {?} */\n                    const right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseAdditive() {\n        /** @type {?} */\n        let result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            /** @type {?} */\n            const operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    /** @type {?} */\n                    let right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseMultiplicative() {\n        /** @type {?} */\n        let result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            /** @type {?} */\n            const operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    /** @type {?} */\n                    let right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parsePrefix() {\n        if (this.next.type == TokenType.Operator) {\n            /** @type {?} */\n            const start = this.inputIndex;\n            /** @type {?} */\n            const operator = this.next.strValue;\n            /** @type {?} */\n            let result;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    }\n    /**\n     * @return {?}\n     */\n    parseCallChain() {\n        /** @type {?} */\n        let result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter(chars.$PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter(chars.$LBRACKET)) {\n                this.rbracketsExpected++;\n                /** @type {?} */\n                const key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter(chars.$RBRACKET);\n                if (this.optionalOperator('=')) {\n                    /** @type {?} */\n                    const value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter(chars.$LPAREN)) {\n                this.rparensExpected++;\n                /** @type {?} */\n                const args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter(chars.$RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    parsePrimary() {\n        /** @type {?} */\n        const start = this.inputIndex;\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            /** @type {?} */\n            const result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter(chars.$RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter(chars.$LBRACKET)) {\n            this.rbracketsExpected++;\n            /** @type {?} */\n            const elements = this.parseExpressionList(chars.$RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter(chars.$RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter(chars.$LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            /** @type {?} */\n            const value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            /** @type {?} */\n            const literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(`Unexpected end of expression: ${this.input}`);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(`Unexpected token ${this.next}`);\n            return new EmptyExpr(this.span(start));\n        }\n    }\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    parseExpressionList(terminator) {\n        /** @type {?} */\n        const result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseLiteralMap() {\n        /** @type {?} */\n        const keys = [];\n        /** @type {?} */\n        const values = [];\n        /** @type {?} */\n        const start = this.inputIndex;\n        this.expectCharacter(chars.$LBRACE);\n        if (!this.optionalCharacter(chars.$RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                /** @type {?} */\n                const quoted = this.next.isString();\n                /** @type {?} */\n                const key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key, quoted });\n                this.expectCharacter(chars.$COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter(chars.$RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    }\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    parseAccessMemberOrMethodCall(receiver, isSafe = false) {\n        /** @type {?} */\n        const start = receiver.span.start;\n        /** @type {?} */\n        const id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            /** @type {?} */\n            const args = this.parseCallArguments();\n            this.expectCharacter(chars.$RPAREN);\n            this.rparensExpected--;\n            /** @type {?} */\n            const span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    /** @type {?} */\n                    const value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    parseCallArguments() {\n        if (this.next.isCharacter(chars.$RPAREN))\n            return [];\n        /** @type {?} */\n        const positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter(chars.$COMMA));\n        return /** @type {?} */ (positionals);\n    }\n    /**\n     * An identifier, a keyword, a string with an optional `-` in between.\n     * @return {?}\n     */\n    expectTemplateBindingKey() {\n        /** @type {?} */\n        let result = '';\n        /** @type {?} */\n        let operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    }\n    /**\n     * @param {?} tplKey\n     * @return {?}\n     */\n    parseTemplateBindings(tplKey) {\n        /** @type {?} */\n        let firstBinding = true;\n        /** @type {?} */\n        const bindings = [];\n        /** @type {?} */\n        const warnings = [];\n        do {\n            /** @type {?} */\n            const start = this.inputIndex;\n            /** @type {?} */\n            let rawKey;\n            /** @type {?} */\n            let key;\n            /** @type {?} */\n            let isVar = false;\n            if (firstBinding) {\n                rawKey = key = tplKey;\n                firstBinding = false;\n            }\n            else {\n                isVar = this.peekKeywordLet();\n                if (isVar)\n                    this.advance();\n                rawKey = this.expectTemplateBindingKey();\n                key = isVar ? rawKey : tplKey + rawKey[0].toUpperCase() + rawKey.substring(1);\n                this.optionalCharacter(chars.$COLON);\n            }\n            /** @type {?} */\n            let name = /** @type {?} */ ((null));\n            /** @type {?} */\n            let expression = null;\n            if (isVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                isVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                /** @type {?} */\n                const start = this.inputIndex;\n                /** @type {?} */\n                const ast = this.parsePipe();\n                /** @type {?} */\n                const source = this.input.substring(start - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, isVar, name, expression));\n            if (this.peekKeywordAs() && !isVar) {\n                /** @type {?} */\n                const letStart = this.inputIndex;\n                this.advance();\n                /** @type {?} */\n                const letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter(chars.$SEMICOLON)) {\n                this.optionalCharacter(chars.$COMMA);\n            }\n        } while (this.index < this.tokens.length);\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    }\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    error(message, index = null) {\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    locationText(index = null) {\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? `at column ${this.tokens[index].index + 1} in` :\n            `at the end of the expression`;\n    }\n    /**\n     * @return {?}\n     */\n    skip() {\n        /** @type {?} */\n        let n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter(chars.$SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter(chars.$RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter(chars.$RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter(chars.$RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    _ParseAST.prototype.rparensExpected;\n    /** @type {?} */\n    _ParseAST.prototype.rbracketsExpected;\n    /** @type {?} */\n    _ParseAST.prototype.rbracesExpected;\n    /** @type {?} */\n    _ParseAST.prototype.index;\n    /** @type {?} */\n    _ParseAST.prototype.input;\n    /** @type {?} */\n    _ParseAST.prototype.location;\n    /** @type {?} */\n    _ParseAST.prototype.tokens;\n    /** @type {?} */\n    _ParseAST.prototype.inputLength;\n    /** @type {?} */\n    _ParseAST.prototype.parseAction;\n    /** @type {?} */\n    _ParseAST.prototype.errors;\n    /** @type {?} */\n    _ParseAST.prototype.offset;\n}\nclass SimpleExpressionChecker {\n    constructor() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    static check(ast) {\n        /** @type {?} */\n        const s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) { this.visitAll(ast.expressions); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) { this.visitAll(ast.values); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) { this.errors.push('pipes'); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) { }\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    visitAll(asts) { return asts.map(node => node.visit(this)); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { }\n}\nif (false) {\n    /** @type {?} */\n    SimpleExpressionChecker.prototype.errors;\n}\n//# sourceMappingURL=parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport * as chars from './chars';\nimport { identifierModuleUrl, identifierName } from './compile_metadata';\nexport class ParseLocation {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    constructor(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.offset != null ? `${this.file.url}@${this.line}:${this.col}` : this.file.url;\n    }\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    moveBy(delta) {\n        /** @type {?} */\n        const source = this.file.content;\n        /** @type {?} */\n        const len = source.length;\n        /** @type {?} */\n        let offset = this.offset;\n        /** @type {?} */\n        let line = this.line;\n        /** @type {?} */\n        let col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            /** @type {?} */\n            const ch = source.charCodeAt(offset);\n            if (ch == chars.$LF) {\n                line--;\n                /** @type {?} */\n                const priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode(chars.$LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            /** @type {?} */\n            const ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == chars.$LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    }\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    getContext(maxChars, maxLines) {\n        /** @type {?} */\n        const content = this.file.content;\n        /** @type {?} */\n        let startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            /** @type {?} */\n            let endOffset = startOffset;\n            /** @type {?} */\n            let ctxChars = 0;\n            /** @type {?} */\n            let ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParseLocation.prototype.file;\n    /** @type {?} */\n    ParseLocation.prototype.offset;\n    /** @type {?} */\n    ParseLocation.prototype.line;\n    /** @type {?} */\n    ParseLocation.prototype.col;\n}\nexport class ParseSourceFile {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    constructor(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParseSourceFile.prototype.content;\n    /** @type {?} */\n    ParseSourceFile.prototype.url;\n}\nexport class ParseSourceSpan {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    constructor(start, end, details = null) {\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParseSourceSpan.prototype.start;\n    /** @type {?} */\n    ParseSourceSpan.prototype.end;\n    /** @type {?} */\n    ParseSourceSpan.prototype.details;\n}\n/** @enum {number} */\nconst ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nexport { ParseErrorLevel };\nParseErrorLevel[ParseErrorLevel.WARNING] = 'WARNING';\nParseErrorLevel[ParseErrorLevel.ERROR] = 'ERROR';\nexport class ParseError {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    constructor(span, msg, level = ParseErrorLevel.ERROR) {\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    contextualMessage() {\n        /** @type {?} */\n        const ctx = this.span.start.getContext(100, 3);\n        return ctx ? `${this.msg} (\"${ctx.before}[${ParseErrorLevel[this.level]} ->]${ctx.after}\")` :\n            this.msg;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const details = this.span.details ? `, ${this.span.details}` : '';\n        return `${this.contextualMessage()}: ${this.span.start}${details}`;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParseError.prototype.span;\n    /** @type {?} */\n    ParseError.prototype.msg;\n    /** @type {?} */\n    ParseError.prototype.level;\n}\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nexport function typeSourceSpan(kind, type) {\n    /** @type {?} */\n    const moduleUrl = identifierModuleUrl(type);\n    /** @type {?} */\n    const sourceFileName = moduleUrl != null ? `in ${kind} ${identifierName(type)} in ${moduleUrl}` :\n        `in ${kind} ${identifierName(type)}`;\n    /** @type {?} */\n    const sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n//# sourceMappingURL=parse_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan } from '../parse_util';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { NAMED_ENTITIES, TagContentType } from './tags';\n/** @enum {number} */\nconst TokenType = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nexport { TokenType };\nTokenType[TokenType.TAG_OPEN_START] = 'TAG_OPEN_START';\nTokenType[TokenType.TAG_OPEN_END] = 'TAG_OPEN_END';\nTokenType[TokenType.TAG_OPEN_END_VOID] = 'TAG_OPEN_END_VOID';\nTokenType[TokenType.TAG_CLOSE] = 'TAG_CLOSE';\nTokenType[TokenType.TEXT] = 'TEXT';\nTokenType[TokenType.ESCAPABLE_RAW_TEXT] = 'ESCAPABLE_RAW_TEXT';\nTokenType[TokenType.RAW_TEXT] = 'RAW_TEXT';\nTokenType[TokenType.COMMENT_START] = 'COMMENT_START';\nTokenType[TokenType.COMMENT_END] = 'COMMENT_END';\nTokenType[TokenType.CDATA_START] = 'CDATA_START';\nTokenType[TokenType.CDATA_END] = 'CDATA_END';\nTokenType[TokenType.ATTR_NAME] = 'ATTR_NAME';\nTokenType[TokenType.ATTR_VALUE] = 'ATTR_VALUE';\nTokenType[TokenType.DOC_TYPE] = 'DOC_TYPE';\nTokenType[TokenType.EXPANSION_FORM_START] = 'EXPANSION_FORM_START';\nTokenType[TokenType.EXPANSION_CASE_VALUE] = 'EXPANSION_CASE_VALUE';\nTokenType[TokenType.EXPANSION_CASE_EXP_START] = 'EXPANSION_CASE_EXP_START';\nTokenType[TokenType.EXPANSION_CASE_EXP_END] = 'EXPANSION_CASE_EXP_END';\nTokenType[TokenType.EXPANSION_FORM_END] = 'EXPANSION_FORM_END';\nTokenType[TokenType.EOF] = 'EOF';\nexport class Token {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    constructor(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n}\nif (false) {\n    /** @type {?} */\n    Token.prototype.type;\n    /** @type {?} */\n    Token.prototype.parts;\n    /** @type {?} */\n    Token.prototype.sourceSpan;\n}\nexport class TokenError extends ParseError {\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    constructor(errorMsg, tokenType, span) {\n        super(span, errorMsg);\n        this.tokenType = tokenType;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TokenError.prototype.tokenType;\n}\nexport class TokenizeResult {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    constructor(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TokenizeResult.prototype.tokens;\n    /** @type {?} */\n    TokenizeResult.prototype.errors;\n}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nexport function tokenize(source, url, getTagDefinition, tokenizeExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\n/** @type {?} */\nconst _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    /** @type {?} */\n    const char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n    return `Unexpected character \"${char}\"`;\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return `Unknown entity \"${entitySrc}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`;\n}\nclass _ControlFlowError {\n    /**\n     * @param {?} error\n     */\n    constructor(error) {\n        this.error = error;\n    }\n}\nif (false) {\n    /** @type {?} */\n    _ControlFlowError.prototype.error;\n}\nclass _Tokenizer {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    constructor(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _processCarriageReturns(content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    }\n    /**\n     * @return {?}\n     */\n    tokenize() {\n        while (this._peek !== chars.$EOF) {\n            /** @type {?} */\n            const start = this._getLocation();\n            try {\n                if (this._attemptCharCode(chars.$LT)) {\n                    if (this._attemptCharCode(chars.$BANG)) {\n                        if (this._attemptCharCode(chars.$LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode(chars.$MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode(chars.$SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    }\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _tokenizeExpansionForm() {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === chars.$RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    _getLocation() {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    }\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _getSpan(start = this._getLocation(), end = this._getLocation()) {\n        return new ParseSourceSpan(start, end);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _beginToken(type, start = this._getLocation()) {\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    }\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _endToken(parts, end = this._getLocation()) {\n        /** @type {?} */\n        const token = new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    }\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _createError(msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += ` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`;\n        }\n        /** @type {?} */\n        const error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    }\n    /**\n     * @return {?}\n     */\n    _advance() {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n        }\n        if (this._peek === chars.$LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n    }\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _attemptCharCode(charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _attemptCharCodeCaseInsensitive(charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _requireCharCode(charCode) {\n        /** @type {?} */\n        const location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _attemptStr(chars) {\n        /** @type {?} */\n        const len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        /** @type {?} */\n        const initialPosition = this._savePosition();\n        for (let i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _attemptStrCaseInsensitive(chars) {\n        for (let i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _requireStr(chars) {\n        /** @type {?} */\n        const location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _attemptCharCodeUntilFn(predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _requireCharCodeUntilFn(predicate, len) {\n        /** @type {?} */\n        const start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    }\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _attemptUntilChar(char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    }\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _readChar(decodeEntities) {\n        if (decodeEntities && this._peek === chars.$AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            /** @type {?} */\n            const index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _decodeEntity() {\n        /** @type {?} */\n        const start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode(chars.$HASH)) {\n            /** @type {?} */\n            const isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n            /** @type {?} */\n            const numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            /** @type {?} */\n            const strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                /** @type {?} */\n                const charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                /** @type {?} */\n                const entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            /** @type {?} */\n            const startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            /** @type {?} */\n            const name = this._input.substring(start.offset + 1, this._index - 1);\n            /** @type {?} */\n            const char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    }\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _consumeRawText(decodeEntities, firstCharOfEnd, attemptEndRest) {\n        /** @type {?} */\n        let tagCloseStart;\n        /** @type {?} */\n        const textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n        /** @type {?} */\n        const parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeComment(start) {\n        this._beginToken(TokenType.COMMENT_START, start);\n        this._requireCharCode(chars.$MINUS);\n        this._endToken([]);\n        /** @type {?} */\n        const textToken = this._consumeRawText(false, chars.$MINUS, () => this._attemptStr('->'));\n        this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeCdata(start) {\n        this._beginToken(TokenType.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        /** @type {?} */\n        const textToken = this._consumeRawText(false, chars.$RBRACKET, () => this._attemptStr(']>'));\n        this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeDocType(start) {\n        this._beginToken(TokenType.DOC_TYPE, start);\n        this._attemptUntilChar(chars.$GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    }\n    /**\n     * @return {?}\n     */\n    _consumePrefixAndName() {\n        /** @type {?} */\n        const nameOrPrefixStart = this._index;\n        /** @type {?} */\n        let prefix = /** @type {?} */ ((null));\n        while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        /** @type {?} */\n        let nameStart;\n        if (this._peek === chars.$COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        /** @type {?} */\n        const name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeTagOpen(start) {\n        /** @type {?} */\n        const savedPos = this._savePosition();\n        /** @type {?} */\n        let tagName;\n        /** @type {?} */\n        let lowercaseTagName;\n        try {\n            if (!chars.isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            /** @type {?} */\n            const nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode(chars.$EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        /** @type {?} */\n        const contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    }\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _consumeRawTextWithTagClose(lowercaseTagName, decodeEntities) {\n        /** @type {?} */\n        const textToken = this._consumeRawText(decodeEntities, chars.$LT, () => {\n            if (!this._attemptCharCode(chars.$SLASH))\n                return false;\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            return this._attemptCharCode(chars.$GT);\n        });\n        this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeTagOpenStart(start) {\n        this._beginToken(TokenType.TAG_OPEN_START, start);\n        /** @type {?} */\n        const parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeAttributeName() {\n        this._beginToken(TokenType.ATTR_NAME);\n        /** @type {?} */\n        const prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeAttributeValue() {\n        this._beginToken(TokenType.ATTR_VALUE);\n        /** @type {?} */\n        let value;\n        if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n            /** @type {?} */\n            const quoteChar = this._peek;\n            this._advance();\n            /** @type {?} */\n            const parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            /** @type {?} */\n            const valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeTagOpenEnd() {\n        /** @type {?} */\n        const tokenType = this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode(chars.$GT);\n        this._endToken([]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeTagClose(start) {\n        this._beginToken(TokenType.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        /** @type {?} */\n        const prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode(chars.$GT);\n        this._endToken(prefixAndName);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionFormStart() {\n        this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        /** @type {?} */\n        const condition = this._readUntil(chars.$COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        /** @type {?} */\n        const type = this._readUntil(chars.$COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionCaseStart() {\n        this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n        /** @type {?} */\n        const value = this._readUntil(chars.$LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionCaseEnd() {\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionFormEnd() {\n        this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    }\n    /**\n     * @return {?}\n     */\n    _consumeText() {\n        /** @type {?} */\n        const start = this._getLocation();\n        this._beginToken(TokenType.TEXT, start);\n        /** @type {?} */\n        const parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    }\n    /**\n     * @return {?}\n     */\n    _isTextEnd() {\n        if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    _savePosition() {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    }\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _readUntil(char) {\n        /** @type {?} */\n        const start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _restorePosition(position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        /** @type {?} */\n        const nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _isInExpansionCase() {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_CASE_EXP_START;\n    }\n    /**\n     * @return {?}\n     */\n    _isInExpansionForm() {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_FORM_START;\n    }\n}\nif (false) {\n    /** @type {?} */\n    _Tokenizer.prototype._input;\n    /** @type {?} */\n    _Tokenizer.prototype._length;\n    /** @type {?} */\n    _Tokenizer.prototype._peek;\n    /** @type {?} */\n    _Tokenizer.prototype._nextPeek;\n    /** @type {?} */\n    _Tokenizer.prototype._index;\n    /** @type {?} */\n    _Tokenizer.prototype._line;\n    /** @type {?} */\n    _Tokenizer.prototype._column;\n    /** @type {?} */\n    _Tokenizer.prototype._currentTokenStart;\n    /** @type {?} */\n    _Tokenizer.prototype._currentTokenType;\n    /** @type {?} */\n    _Tokenizer.prototype._expansionCaseStack;\n    /** @type {?} */\n    _Tokenizer.prototype._inInterpolation;\n    /** @type {?} */\n    _Tokenizer.prototype.tokens;\n    /** @type {?} */\n    _Tokenizer.prototype.errors;\n    /** @type {?} */\n    _Tokenizer.prototype._file;\n    /** @type {?} */\n    _Tokenizer.prototype._getTagDefinition;\n    /** @type {?} */\n    _Tokenizer.prototype._tokenizeIcu;\n    /** @type {?} */\n    _Tokenizer.prototype._interpolationConfig;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !chars.isWhitespace(code) || code === chars.$EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n        code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n        (code < chars.$0 || code > chars.$9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    /** @type {?} */\n    const isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === chars.$EQ || chars.isAsciiLetter(peek) || chars.isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    /** @type {?} */\n    const dstTokens = [];\n    /** @type {?} */\n    let lastDstToken = undefined;\n    for (let i = 0; i < srcTokens.length; i++) {\n        /** @type {?} */\n        const token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n//# sourceMappingURL=lexer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ParseError, ParseSourceSpan } from '../parse_util';\nimport * as html from './ast';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport * as lex from './lexer';\nimport { getNsPrefix, isNgContainer, mergeNsAndName } from './tags';\nexport class TreeError extends ParseError {\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    constructor(elementName, span, msg) {\n        super(span, msg);\n        this.elementName = elementName;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    static create(elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    }\n}\nif (false) {\n    /** @type {?} */\n    TreeError.prototype.elementName;\n}\nexport class ParseTreeResult {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    constructor(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ParseTreeResult.prototype.rootNodes;\n    /** @type {?} */\n    ParseTreeResult.prototype.errors;\n}\nexport class Parser {\n    /**\n     * @param {?} getTagDefinition\n     */\n    constructor(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        /** @type {?} */\n        const tokensAndErrors = lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        /** @type {?} */\n        const treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    }\n}\nif (false) {\n    /** @type {?} */\n    Parser.prototype.getTagDefinition;\n}\nclass _TreeBuilder {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    constructor(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    build() {\n        while (this._peek.type !== lex.TokenType.EOF) {\n            if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n                this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    }\n    /**\n     * @return {?}\n     */\n    _advance() {\n        /** @type {?} */\n        const prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _advanceIf(type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    }\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _consumeCdata(startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(lex.TokenType.CDATA_END);\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _consumeComment(token) {\n        /** @type {?} */\n        const text = this._advanceIf(lex.TokenType.RAW_TEXT);\n        this._advanceIf(lex.TokenType.COMMENT_END);\n        /** @type {?} */\n        const value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new html.Comment(value, token.sourceSpan));\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _consumeExpansion(token) {\n        /** @type {?} */\n        const switchValue = this._advance();\n        /** @type {?} */\n        const type = this._advance();\n        /** @type {?} */\n        const cases = [];\n        // read =\n        while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n            /** @type {?} */\n            const expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n            return;\n        }\n        /** @type {?} */\n        const sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new html.Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _parseExpansionCase() {\n        /** @type {?} */\n        const value = this._advance();\n        // read {\n        if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n            return null;\n        }\n        /** @type {?} */\n        const start = this._advance();\n        /** @type {?} */\n        const exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        /** @type {?} */\n        const end = this._advance();\n        exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n        /** @type {?} */\n        const parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        /** @type {?} */\n        const sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        /** @type {?} */\n        const expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new html.ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _collectExpansionExpTokens(start) {\n        /** @type {?} */\n        const exp = [];\n        /** @type {?} */\n        const expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n                this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _consumeText(token) {\n        /** @type {?} */\n        let text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            /** @type {?} */\n            const parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new html.Text(text, token.sourceSpan));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _closeVoidElement() {\n        /** @type {?} */\n        const el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    }\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _consumeStartTag(startTagToken) {\n        /** @type {?} */\n        const prefix = startTagToken.parts[0];\n        /** @type {?} */\n        const name = startTagToken.parts[1];\n        /** @type {?} */\n        const attrs = [];\n        while (this._peek.type === lex.TokenType.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        /** @type {?} */\n        const fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        /** @type {?} */\n        let selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            /** @type {?} */\n            const tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n            }\n        }\n        else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        /** @type {?} */\n        const end = this._peek.sourceSpan.start;\n        /** @type {?} */\n        const span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        /** @type {?} */\n        const el = new html.Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _pushElement(el) {\n        /** @type {?} */\n        const parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        /** @type {?} */\n        const tagDef = this.getTagDefinition(el.name);\n        const { parent, container } = this._getParentElementSkippingContainers();\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            /** @type {?} */\n            const newParent = new html.Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    }\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _consumeEndTag(endTagToken) {\n        /** @type {?} */\n        const fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n        }\n        else if (!this._popElement(fullName)) {\n            /** @type {?} */\n            const errMsg = `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    }\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _popElement(fullName) {\n        for (let stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            /** @type {?} */\n            const el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _consumeAttr(attrName) {\n        /** @type {?} */\n        const fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        /** @type {?} */\n        let end = attrName.sourceSpan.end;\n        /** @type {?} */\n        let value = '';\n        /** @type {?} */\n        let valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n            /** @type {?} */\n            const valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new html.Attribute(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    }\n    /**\n     * @return {?}\n     */\n    _getParentElement() {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    }\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _getParentElementSkippingContainers() {\n        /** @type {?} */\n        let container = null;\n        for (let i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container };\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _addToParent(node) {\n        /** @type {?} */\n        const parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    }\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _insertBeforeContainer(parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                /** @type {?} */\n                const index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    }\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _getElementFullName(prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    }\n}\nif (false) {\n    /** @type {?} */\n    _TreeBuilder.prototype._index;\n    /** @type {?} */\n    _TreeBuilder.prototype._peek;\n    /** @type {?} */\n    _TreeBuilder.prototype._rootNodes;\n    /** @type {?} */\n    _TreeBuilder.prototype._errors;\n    /** @type {?} */\n    _TreeBuilder.prototype._elementStack;\n    /** @type {?} */\n    _TreeBuilder.prototype.tokens;\n    /** @type {?} */\n    _TreeBuilder.prototype.getTagDefinition;\n}\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n//# sourceMappingURL=parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { utf8Encode } from '../util';\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    /** @type {?} */\n    const visitor = new _SerializerIgnoreIcuExpVisitor();\n    /** @type {?} */\n    const parts = message.nodes.map(a => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nclass _SerializerVisitor {\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return text.value; }\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        const strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid ?\n            `<ph tag name=\"${ph.startName}\"/>` :\n            `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n}\n/** @type {?} */\nconst serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serializeNodes(nodes) {\n    return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        let strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nexport function sha1(str) {\n    /** @type {?} */\n    const utf8 = utf8Encode(str);\n    /** @type {?} */\n    const words32 = stringToWords32(utf8, Endian.Big);\n    /** @type {?} */\n    const len = utf8.length * 8;\n    /** @type {?} */\n    const w = new Array(80);\n    let [a, b, c, d, e] = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (let i = 0; i < words32.length; i += 16) {\n        const [h0, h1, h2, h3, h4] = [a, b, c, d, e];\n        for (let j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const [f, k] = fk(j, b, c, d);\n            /** @type {?} */\n            const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            [e, d, c, b, a] = [d, c, rol32(b, 30), a, temp];\n        }\n        [a, b, c, d, e] = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nexport function fingerprint(str) {\n    /** @type {?} */\n    const utf8 = utf8Encode(str);\n    let [hi, lo] = [hash32(utf8, 0), hash32(utf8, 102072)];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nexport function computeMsgId(msg, meaning) {\n    let [hi, lo] = fingerprint(msg);\n    if (meaning) {\n        const [him, lom] = fingerprint(meaning);\n        [hi, lo] = add64(rol64([hi, lo], 1), [him, lom]);\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    let [a, b] = [0x9e3779b9, 0x9e3779b9];\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    const len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        [a, b, c] = mix([a, b, c]);\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix([a, b, c]) {\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nconst Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = 'Little';\nEndian[Endian.Big] = 'Big';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    /** @type {?} */\n    const low = (a & 0xffff) + (b & 0xffff);\n    /** @type {?} */\n    const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64([ah, al], [bh, bl]) {\n    const [carry, l] = add32to64(al, bl);\n    /** @type {?} */\n    const h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    /** @type {?} */\n    const low = (a & 0xffff) - (b & 0xffff);\n    /** @type {?} */\n    const high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64([hi, lo], count) {\n    /** @type {?} */\n    const h = (hi << count) | (lo >>> (32 - count));\n    /** @type {?} */\n    const l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    /** @type {?} */\n    const words32 = Array((str.length + 3) >>> 2);\n    for (let i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    /** @type {?} */\n    let word = 0;\n    if (endian === Endian.Big) {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce((str, word) => str + word32ToByteString(word), '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    /** @type {?} */\n    let str = '';\n    for (let i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    /** @type {?} */\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        /** @type {?} */\n        const b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    /** @type {?} */\n    let decimal = '';\n    /** @type {?} */\n    let toThePower = '1';\n    for (let i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    /** @type {?} */\n    let sum = '';\n    /** @type {?} */\n    const len = Math.max(x.length, y.length);\n    for (let i = 0, carry = 0; i < len || carry; i++) {\n        /** @type {?} */\n        const tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    /** @type {?} */\n    let product = '';\n    /** @type {?} */\n    let bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n//# sourceMappingURL=digest.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class Message {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    constructor(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    Message.prototype.sources;\n    /** @type {?} */\n    Message.prototype.nodes;\n    /** @type {?} */\n    Message.prototype.placeholders;\n    /** @type {?} */\n    Message.prototype.placeholderToMessage;\n    /** @type {?} */\n    Message.prototype.meaning;\n    /** @type {?} */\n    Message.prototype.description;\n    /** @type {?} */\n    Message.prototype.id;\n}\n/**\n * @record\n */\nexport function MessageSpan() { }\n/** @type {?} */\nMessageSpan.prototype.filePath;\n/** @type {?} */\nMessageSpan.prototype.startLine;\n/** @type {?} */\nMessageSpan.prototype.startCol;\n/** @type {?} */\nMessageSpan.prototype.endLine;\n/** @type {?} */\nMessageSpan.prototype.endCol;\n/**\n * @record\n */\nexport function Node() { }\n/** @type {?} */\nNode.prototype.sourceSpan;\n/** @type {?} */\nNode.prototype.visit;\nexport class Text {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitText(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Text.prototype.value;\n    /** @type {?} */\n    Text.prototype.sourceSpan;\n}\nexport class Container {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    constructor(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitContainer(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Container.prototype.children;\n    /** @type {?} */\n    Container.prototype.sourceSpan;\n}\nexport class Icu {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    constructor(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitIcu(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Icu.prototype.expressionPlaceholder;\n    /** @type {?} */\n    Icu.prototype.expression;\n    /** @type {?} */\n    Icu.prototype.type;\n    /** @type {?} */\n    Icu.prototype.cases;\n    /** @type {?} */\n    Icu.prototype.sourceSpan;\n}\nexport class TagPlaceholder {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    constructor(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitTagPlaceholder(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    TagPlaceholder.prototype.tag;\n    /** @type {?} */\n    TagPlaceholder.prototype.attrs;\n    /** @type {?} */\n    TagPlaceholder.prototype.startName;\n    /** @type {?} */\n    TagPlaceholder.prototype.closeName;\n    /** @type {?} */\n    TagPlaceholder.prototype.children;\n    /** @type {?} */\n    TagPlaceholder.prototype.isVoid;\n    /** @type {?} */\n    TagPlaceholder.prototype.sourceSpan;\n}\nexport class Placeholder {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    constructor(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitPlaceholder(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    Placeholder.prototype.value;\n    /** @type {?} */\n    Placeholder.prototype.name;\n    /** @type {?} */\n    Placeholder.prototype.sourceSpan;\n}\nexport class IcuPlaceholder {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    constructor(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitIcuPlaceholder(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    IcuPlaceholder.prototype.value;\n    /** @type {?} */\n    IcuPlaceholder.prototype.name;\n    /** @type {?} */\n    IcuPlaceholder.prototype.sourceSpan;\n}\n/**\n * @record\n */\nexport function Visitor() { }\n/** @type {?} */\nVisitor.prototype.visitText;\n/** @type {?} */\nVisitor.prototype.visitContainer;\n/** @type {?} */\nVisitor.prototype.visitIcu;\n/** @type {?} */\nVisitor.prototype.visitTagPlaceholder;\n/** @type {?} */\nVisitor.prototype.visitPlaceholder;\n/** @type {?} */\nVisitor.prototype.visitIcuPlaceholder;\nexport class CloneVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return new Text(text.value, text.sourceSpan); }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        /** @type {?} */\n        const children = container.children.map(n => n.visit(this, context));\n        return new Container(children, container.sourceSpan);\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        const cases = {};\n        Object.keys(icu.cases).forEach(key => cases[key] = icu.cases[key].visit(this, context));\n        /** @type {?} */\n        const msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        /** @type {?} */\n        const children = ph.children.map(n => n.visit(this, context));\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    }\n}\nexport class RecurseVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        container.children.forEach(child => child.visit(this));\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        Object.keys(icu.cases).forEach(k => { icu.cases[k].visit(this); });\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        ph.children.forEach(child => child.visit(this));\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) { }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) { }\n}\n//# sourceMappingURL=i18n_ast.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nexport class PlaceholderRegistry {\n    constructor() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    getStartTagPlaceholderName(tag, attrs, isVoid) {\n        /** @type {?} */\n        const signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        /** @type {?} */\n        const upperTag = tag.toUpperCase();\n        /** @type {?} */\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n        /** @type {?} */\n        const name = this._generateUniqueName(isVoid ? baseName : `START_${baseName}`);\n        this._signatureToName[signature] = name;\n        return name;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    getCloseTagPlaceholderName(tag) {\n        /** @type {?} */\n        const signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        /** @type {?} */\n        const upperTag = tag.toUpperCase();\n        /** @type {?} */\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n        /** @type {?} */\n        const name = this._generateUniqueName(`CLOSE_${baseName}`);\n        this._signatureToName[signature] = name;\n        return name;\n    }\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    getPlaceholderName(name, content) {\n        /** @type {?} */\n        const upperName = name.toUpperCase();\n        /** @type {?} */\n        const signature = `PH: ${upperName}=${content}`;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        /** @type {?} */\n        const uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getUniquePlaceholder(name) {\n        return this._generateUniqueName(name.toUpperCase());\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    _hashTag(tag, attrs, isVoid) {\n        /** @type {?} */\n        const start = `<${tag}`;\n        /** @type {?} */\n        const strAttrs = Object.keys(attrs).sort().map((name) => ` ${name}=${attrs[name]}`).join('');\n        /** @type {?} */\n        const end = isVoid ? '/>' : `></${tag}>`;\n        return start + strAttrs + end;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _hashClosingTag(tag) { return this._hashTag(`/${tag}`, {}, false); }\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    _generateUniqueName(base) {\n        /** @type {?} */\n        const seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        /** @type {?} */\n        const id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return `${base}_${id}`;\n    }\n}\nif (false) {\n    /** @type {?} */\n    PlaceholderRegistry.prototype._placeHolderNameCounts;\n    /** @type {?} */\n    PlaceholderRegistry.prototype._signatureToName;\n}\n//# sourceMappingURL=placeholder.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Lexer as ExpressionLexer } from '../expression_parser/lexer';\nimport { Parser as ExpressionParser } from '../expression_parser/parser';\nimport * as html from '../ml_parser/ast';\nimport { getHtmlTagDefinition } from '../ml_parser/html_tags';\nimport * as i18n from './i18n_ast';\nimport { PlaceholderRegistry } from './serializers/placeholder';\n/** @type {?} */\nconst _expParser = new ExpressionParser(new ExpressionLexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nexport function createI18nMessageFactory(interpolationConfig) {\n    /** @type {?} */\n    const visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return (nodes, meaning, description, id) => visitor.toI18nMessage(nodes, meaning, description, id);\n}\nclass _I18nVisitor {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    constructor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    toI18nMessage(nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof html.Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        /** @type {?} */\n        const i18nodes = html.visitAll(this, nodes, {});\n        return new i18n.Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        /** @type {?} */\n        const children = html.visitAll(this, el.children);\n        /** @type {?} */\n        const attrs = {};\n        el.attrs.forEach(attr => {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        /** @type {?} */\n        const isVoid = getHtmlTagDefinition(el.name).isVoid;\n        /** @type {?} */\n        const startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        /** @type {?} */\n        let closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = `</${el.name}>`;\n        }\n        return new i18n.TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return null; }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        this._icuDepth++;\n        /** @type {?} */\n        const i18nIcuCases = {};\n        /** @type {?} */\n        const i18nIcu = new i18n.Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach((caze) => {\n            i18nIcuCases[caze.value] = new i18n.Container(caze.expression.map((node) => node.visit(this, {})), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            /** @type {?} */\n            const expPh = this._placeholderRegistry.getUniquePlaceholder(`VAR_${icu.type}`);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        /** @type {?} */\n        const phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        /** @type {?} */\n        const visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new i18n.IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        throw new Error('Unreachable code');\n    }\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _visitTextWithInterpolation(text, sourceSpan) {\n        /** @type {?} */\n        const splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new i18n.Text(text, sourceSpan);\n        }\n        /** @type {?} */\n        const nodes = [];\n        /** @type {?} */\n        const container = new i18n.Container(nodes, sourceSpan);\n        const { start: sDelimiter, end: eDelimiter } = this._interpolationConfig;\n        for (let i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            /** @type {?} */\n            const expression = splitInterpolation.expressions[i];\n            /** @type {?} */\n            const baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            /** @type {?} */\n            const phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new i18n.Text(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new i18n.Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        /** @type {?} */\n        const lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new i18n.Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    }\n}\nif (false) {\n    /** @type {?} */\n    _I18nVisitor.prototype._isIcu;\n    /** @type {?} */\n    _I18nVisitor.prototype._icuDepth;\n    /** @type {?} */\n    _I18nVisitor.prototype._placeholderRegistry;\n    /** @type {?} */\n    _I18nVisitor.prototype._placeholderToContent;\n    /** @type {?} */\n    _I18nVisitor.prototype._placeholderToMessage;\n    /** @type {?} */\n    _I18nVisitor.prototype._expressionParser;\n    /** @type {?} */\n    _I18nVisitor.prototype._interpolationConfig;\n}\n/** @type {?} */\nconst _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n//# sourceMappingURL=i18n_parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ParseError } from '../parse_util';\n/**\n * An i18n error.\n */\nexport class I18nError extends ParseError {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    constructor(span, msg) { super(span, msg); }\n}\n//# sourceMappingURL=parse_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport * as i18n from './i18n_ast';\nimport { createI18nMessageFactory } from './i18n_parser';\nimport { I18nError } from './parse_util';\n/** @type {?} */\nconst _I18N_ATTR = 'i18n';\n/** @type {?} */\nconst _I18N_ATTR_PREFIX = 'i18n-';\n/** @type {?} */\nconst _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n/** @type {?} */\nconst MEANING_SEPARATOR = '|';\n/** @type {?} */\nconst ID_SEPARATOR = '@@';\n/** @type {?} */\nlet i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    /** @type {?} */\n    const visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    /** @type {?} */\n    const visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nexport class ExtractionResult {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    constructor(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExtractionResult.prototype.messages;\n    /** @type {?} */\n    ExtractionResult.prototype.errors;\n}\n/** @enum {number} */\nconst _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = 'Extract';\n_VisitorMode[_VisitorMode.Merge] = 'Merge';\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nclass _Visitor {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    constructor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    extract(nodes, interpolationConfig) {\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(node => node.visit(this, null));\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    }\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    merge(nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        /** @type {?} */\n        const wrapper = new html.Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        /** @type {?} */\n        const translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        /** @type {?} */\n        const expression = html.visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new html.ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        /** @type {?} */\n        const wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        /** @type {?} */\n        const cases = html.visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new html.Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) {\n        /** @type {?} */\n        const isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        /** @type {?} */\n        const isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        /** @type {?} */\n                        const details = comment.sourceSpan.details ? `, ${comment.sourceSpan.details}` : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(`I18n comments are deprecated, use an <ng-container> element instead (${comment.sourceSpan.start}${details})`);\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        /** @type {?} */\n                        const message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        /** @type {?} */\n                        const nodes = this._translateMessage(comment, message);\n                        return html.visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        /** @type {?} */\n        const wasInI18nNode = this._inI18nNode;\n        /** @type {?} */\n        const wasInImplicitNode = this._inImplicitNode;\n        /** @type {?} */\n        let childNodes = [];\n        /** @type {?} */\n        let translatedChildNodes = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        const i18nAttr = _getI18nAttr(el);\n        /** @type {?} */\n        const i18nMeta = i18nAttr ? i18nAttr.value : '';\n        /** @type {?} */\n        const isImplicit = this._implicitTags.some(tag => el.name === tag) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        /** @type {?} */\n        const isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                /** @type {?} */\n                const message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                /** @type {?} */\n                const isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                html.visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                html.visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            /** @type {?} */\n            const visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(child => {\n                /** @type {?} */\n                const visited = child.visit(this, context);\n                if (visited && !this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            /** @type {?} */\n            const translatedAttrs = this._translateAttributes(el);\n            return new html.Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        throw new Error('unreachable code');\n    }\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _init(mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _visitAttributesOf(el) {\n        /** @type {?} */\n        const explicitAttrNameToValue = {};\n        /** @type {?} */\n        const implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(attr => attr.name.startsWith(_I18N_ATTR_PREFIX))\n            .forEach(attr => explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value);\n        el.attrs.forEach(attr => {\n            if (attr.name in explicitAttrNameToValue) {\n                this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(name => attr.name === name)) {\n                this._addMessage([attr]);\n            }\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _addMessage(ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof html.Attribute && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        const { meaning, description, id } = _parseMessageMeta(msgMeta);\n        /** @type {?} */\n        const message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    }\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _translateMessage(el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            /** @type {?} */\n            const nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, `Translation unavailable for message id=\"${this._translations.digest(message)}\"`);\n        }\n        return [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _translateAttributes(el) {\n        /** @type {?} */\n        const attributes = el.attrs;\n        /** @type {?} */\n        const i18nParsedMessageMeta = {};\n        attributes.forEach(attr => {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        /** @type {?} */\n        const translatedAttributes = [];\n        attributes.forEach((attr) => {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                const { meaning, description, id } = i18nParsedMessageMeta[attr.name];\n                /** @type {?} */\n                const message = this._createI18nMessage([attr], meaning, description, id);\n                /** @type {?} */\n                const nodes = this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof html.Text) {\n                        /** @type {?} */\n                        const value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        this._reportError(el, `Unexpected translation for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n                    }\n                }\n                else {\n                    this._reportError(el, `Translation unavailable for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    }\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _mayBeAddBlockChildren(node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    }\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _openTranslatableSection(node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    }\n    /**\n     * A translatable section could be:\n     * - the content of translatable element,\n     * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n     * @return {?}\n     */\n    get _isInTranslatableSection() {\n        return this._msgCountAtSectionStart !== void 0;\n    }\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _closeTranslatableSection(node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        /** @type {?} */\n        const startIndex = this._msgCountAtSectionStart;\n        /** @type {?} */\n        const significantChildren = directChildren.reduce((count, node) => count + (node instanceof html.Comment ? 0 : 1), 0);\n        if (significantChildren == 1) {\n            for (let i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                /** @type {?} */\n                const ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    }\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _reportError(node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    }\n}\nif (false) {\n    /** @type {?} */\n    _Visitor.prototype._depth;\n    /** @type {?} */\n    _Visitor.prototype._inI18nNode;\n    /** @type {?} */\n    _Visitor.prototype._inImplicitNode;\n    /** @type {?} */\n    _Visitor.prototype._inI18nBlock;\n    /** @type {?} */\n    _Visitor.prototype._blockMeaningAndDesc;\n    /** @type {?} */\n    _Visitor.prototype._blockChildren;\n    /** @type {?} */\n    _Visitor.prototype._blockStartDepth;\n    /** @type {?} */\n    _Visitor.prototype._inIcu;\n    /** @type {?} */\n    _Visitor.prototype._msgCountAtSectionStart;\n    /** @type {?} */\n    _Visitor.prototype._errors;\n    /** @type {?} */\n    _Visitor.prototype._mode;\n    /** @type {?} */\n    _Visitor.prototype._messages;\n    /** @type {?} */\n    _Visitor.prototype._translations;\n    /** @type {?} */\n    _Visitor.prototype._createI18nMessage;\n    /** @type {?} */\n    _Visitor.prototype._implicitTags;\n    /** @type {?} */\n    _Visitor.prototype._implicitAttrs;\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(attr => attr.name === _I18N_ATTR) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    /** @type {?} */\n    const idIndex = i18n.indexOf(ID_SEPARATOR);\n    /** @type {?} */\n    const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    const [meaningAndDesc, id] = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n    const [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n    return { meaning, description, id };\n}\n//# sourceMappingURL=extractor_merger.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nexport class XmlTagDefinition {\n    constructor() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    requireExtraParent(currentParent) { return false; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    isClosedByChild(name) { return false; }\n}\nif (false) {\n    /** @type {?} */\n    XmlTagDefinition.prototype.closedByParent;\n    /** @type {?} */\n    XmlTagDefinition.prototype.requiredParents;\n    /** @type {?} */\n    XmlTagDefinition.prototype.parentToAdd;\n    /** @type {?} */\n    XmlTagDefinition.prototype.implicitNamespacePrefix;\n    /** @type {?} */\n    XmlTagDefinition.prototype.contentType;\n    /** @type {?} */\n    XmlTagDefinition.prototype.isVoid;\n    /** @type {?} */\n    XmlTagDefinition.prototype.ignoreFirstLf;\n    /** @type {?} */\n    XmlTagDefinition.prototype.canSelfClose;\n}\n/** @type {?} */\nconst _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n//# sourceMappingURL=xml_tags.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Parser } from './parser';\nimport { getXmlTagDefinition } from './xml_tags';\nexport { ParseTreeResult, TreeError } from './parser';\nexport class XmlParser extends Parser {\n    constructor() { super(getXmlTagDefinition); }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false) {\n        return super.parse(source, url, parseExpansionForms);\n    }\n}\n//# sourceMappingURL=xml_parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as i18n from '../i18n_ast';\n/**\n * @abstract\n */\nexport class Serializer {\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    createNameMapper(message) { return null; }\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n}\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\nexport function PlaceholderMapper() { }\n/** @type {?} */\nPlaceholderMapper.prototype.toPublicName;\n/** @type {?} */\nPlaceholderMapper.prototype.toInternalName;\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nexport class SimplePlaceholderMapper extends i18n.RecurseVisitor {\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    constructor(message, mapName) {\n        super();\n        this.mapName = mapName;\n        this.internalToPublic = {};\n        this.publicToNextId = {};\n        this.publicToInternal = {};\n        message.nodes.forEach(node => node.visit(this));\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    toPublicName(internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    }\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    toInternalName(publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return null; }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        super.visitTagPlaceholder(ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) { this.visitPlaceholderName(ph.name); }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        this.visitPlaceholderName(ph.name);\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    visitPlaceholderName(internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        /** @type {?} */\n        let publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            /** @type {?} */\n            const nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = `${publicName}_${nextId}`;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    }\n}\nif (false) {\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.internalToPublic;\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.publicToNextId;\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.publicToInternal;\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.mapName;\n}\n//# sourceMappingURL=serializer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nexport function IVisitor() { }\n/** @type {?} */\nIVisitor.prototype.visitTag;\n/** @type {?} */\nIVisitor.prototype.visitText;\n/** @type {?} */\nIVisitor.prototype.visitDeclaration;\n/** @type {?} */\nIVisitor.prototype.visitDoctype;\nclass _Visitor {\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    visitTag(tag) {\n        /** @type {?} */\n        const strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return `<${tag.name}${strAttrs}/>`;\n        }\n        /** @type {?} */\n        const strChildren = tag.children.map(node => node.visit(this));\n        return `<${tag.name}${strAttrs}>${strChildren.join('')}</${tag.name}>`;\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { return text.value; }\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    visitDeclaration(decl) {\n        return `<?xml${this._serializeAttributes(decl.attrs)} ?>`;\n    }\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _serializeAttributes(attrs) {\n        /** @type {?} */\n        const strAttrs = Object.keys(attrs).map((name) => `${name}=\"${attrs[name]}\"`).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    }\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    visitDoctype(doctype) {\n        return `<!DOCTYPE ${doctype.rootTag} [\\n${doctype.dtd}\\n]>`;\n    }\n}\n/** @type {?} */\nconst _visitor = new _Visitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serialize(nodes) {\n    return nodes.map((node) => node.visit(_visitor)).join('');\n}\n/**\n * @record\n */\nexport function Node() { }\n/** @type {?} */\nNode.prototype.visit;\nexport class Declaration {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    constructor(unescapedAttrs) {\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach((k) => {\n            this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitDeclaration(this); }\n}\nif (false) {\n    /** @type {?} */\n    Declaration.prototype.attrs;\n}\nexport class Doctype {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    constructor(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitDoctype(this); }\n}\nif (false) {\n    /** @type {?} */\n    Doctype.prototype.rootTag;\n    /** @type {?} */\n    Doctype.prototype.dtd;\n}\nexport class Tag {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    constructor(name, unescapedAttrs = {}, children = []) {\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach((k) => {\n            this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitTag(this); }\n}\nif (false) {\n    /** @type {?} */\n    Tag.prototype.attrs;\n    /** @type {?} */\n    Tag.prototype.name;\n    /** @type {?} */\n    Tag.prototype.children;\n}\nexport class Text {\n    /**\n     * @param {?} unescapedValue\n     */\n    constructor(unescapedValue) { this.value = escapeXml(unescapedValue); }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitText(this); }\n}\nif (false) {\n    /** @type {?} */\n    Text.prototype.value;\n}\nexport class CR extends Text {\n    /**\n     * @param {?=} ws\n     */\n    constructor(ws = 0) { super(`\\n${new Array(ws + 1).join(' ')}`); }\n}\n/** @type {?} */\nconst _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nexport function escapeXml(text) {\n    return _ESCAPED_CHARS.reduce((text, entry) => text.replace(entry[0], entry[1]), text);\n}\n//# sourceMappingURL=xml_helper.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { digest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\n/** @type {?} */\nconst _VERSION = '1.2';\n/** @type {?} */\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n/** @type {?} */\nconst _DEFAULT_SOURCE_LANG = 'en';\n/** @type {?} */\nconst _PLACEHOLDER_TAG = 'x';\n/** @type {?} */\nconst _MARKER_TAG = 'mrk';\n/** @type {?} */\nconst _FILE_TAG = 'file';\n/** @type {?} */\nconst _SOURCE_TAG = 'source';\n/** @type {?} */\nconst _SEGMENT_SOURCE_TAG = 'seg-source';\n/** @type {?} */\nconst _TARGET_TAG = 'target';\n/** @type {?} */\nconst _UNIT_TAG = 'trans-unit';\n/** @type {?} */\nconst _CONTEXT_GROUP_TAG = 'context-group';\n/** @type {?} */\nconst _CONTEXT_TAG = 'context';\nexport class Xliff extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) {\n        /** @type {?} */\n        const visitor = new _WriteVisitor();\n        /** @type {?} */\n        const transUnits = [];\n        messages.forEach(message => {\n            /** @type {?} */\n            let contextTags = [];\n            message.sources.forEach((source) => {\n                /** @type {?} */\n                let contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new xml.Text(source.filePath)]), new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new xml.Text(`${source.startLine}`)]), new xml.CR(8));\n                contextTags.push(new xml.CR(8), contextGroupTag);\n            });\n            /** @type {?} */\n            const transUnit = new xml.Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            transUnit.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), ...contextTags);\n            if (message.description) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'description' }, [new xml.Text(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'meaning' }, [new xml.Text(message.meaning)]));\n            }\n            transUnit.children.push(new xml.CR(6));\n            transUnits.push(new xml.CR(6), transUnit);\n        });\n        /** @type {?} */\n        const body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n        /** @type {?} */\n        const file = new xml.Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new xml.CR(4), body, new xml.CR(2)]);\n        /** @type {?} */\n        const xliff = new xml.Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        /** @type {?} */\n        const xliffParser = new XliffParser();\n        const { locale, msgIdToHtml, errors } = xliffParser.parse(content, url);\n        /** @type {?} */\n        const i18nNodesByMsgId = {};\n        /** @type {?} */\n        const converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(msgId => {\n            const { i18nNodes, errors: e } = converter.convert(msgIdToHtml[msgId], url);\n            errors.push(...e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId };\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return digest(message); }\n}\nclass _WriteVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return [new xml.Text(text.value)]; }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        /** @type {?} */\n        const nodes = [];\n        container.children.forEach((node) => nodes.push(...node.visit(this)));\n        return nodes;\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n        Object.keys(icu.cases).forEach((c) => {\n            nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n        });\n        nodes.push(new xml.Text(`}`));\n        return nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        /** @type {?} */\n        const ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype, 'equiv-text': `<${ph.tag}/>` })];\n        }\n        /** @type {?} */\n        const startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype, 'equiv-text': `<${ph.tag}>` });\n        /** @type {?} */\n        const closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype, 'equiv-text': `</${ph.tag}>` });\n        return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': `{{${ph.value}}}` })];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        /** @type {?} */\n        const equivText = `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value) => value + ' {...}').join(' ')}}`;\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    serialize(nodes) {\n        return [].concat(...nodes.map(node => node.visit(this)));\n    }\n}\nclass XliffParser {\n    constructor() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    parse(xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        /** @type {?} */\n        const xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                /** @type {?} */\n                const idAttr = element.attrs.find((attr) => attr.name === 'id');\n                if (!idAttr) {\n                    this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n                }\n                else {\n                    /** @type {?} */\n                    const id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, `Duplicated translations for msg ${id}`);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, `Message ${id} misses a translation`);\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                /** @type {?} */\n                const innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                /** @type {?} */\n                const innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                /** @type {?} */\n                const content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                /** @type {?} */\n                const innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                /** @type {?} */\n                const localeAttr = element.attrs.find((attr) => attr.name === 'target-language');\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                ml.visitAll(this, element.children, null);\n        }\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nif (false) {\n    /** @type {?} */\n    XliffParser.prototype._unitMlString;\n    /** @type {?} */\n    XliffParser.prototype._errors;\n    /** @type {?} */\n    XliffParser.prototype._msgIdToHtml;\n    /** @type {?} */\n    XliffParser.prototype._locale;\n}\nclass XmlToI18n {\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    convert(message, url) {\n        /** @type {?} */\n        const xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        /** @type {?} */\n        const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return new i18n.Text(text.value, /** @type {?} */ ((text.sourceSpan))); }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            /** @type {?} */\n            const nameAttr = el.attrs.find((attr) => attr.name === 'id');\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat(...ml.visitAll(this, el.children));\n        }\n        this._addError(el, `Unexpected tag`);\n        return null;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        /** @type {?} */\n        const caseMap = {};\n        ml.visitAll(this, icu.cases).forEach((c) => {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nif (false) {\n    /** @type {?} */\n    XmlToI18n.prototype._errors;\n}\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return `x-${tag}`;\n    }\n}\n//# sourceMappingURL=xliff.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { decimalDigest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\n/** @type {?} */\nconst _VERSION = '2.0';\n/** @type {?} */\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n/** @type {?} */\nconst _DEFAULT_SOURCE_LANG = 'en';\n/** @type {?} */\nconst _PLACEHOLDER_TAG = 'ph';\n/** @type {?} */\nconst _PLACEHOLDER_SPANNING_TAG = 'pc';\n/** @type {?} */\nconst _MARKER_TAG = 'mrk';\n/** @type {?} */\nconst _XLIFF_TAG = 'xliff';\n/** @type {?} */\nconst _SOURCE_TAG = 'source';\n/** @type {?} */\nconst _TARGET_TAG = 'target';\n/** @type {?} */\nconst _UNIT_TAG = 'unit';\nexport class Xliff2 extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) {\n        /** @type {?} */\n        const visitor = new _WriteVisitor();\n        /** @type {?} */\n        const units = [];\n        messages.forEach(message => {\n            /** @type {?} */\n            const unit = new xml.Tag(_UNIT_TAG, { id: message.id });\n            /** @type {?} */\n            const notes = new xml.Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'description' }, [new xml.Text(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'meaning' }, [new xml.Text(message.meaning)]));\n                }\n            }\n            message.sources.forEach((source) => {\n                notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'location' }, [\n                    new xml.Text(`${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n                ]));\n            });\n            notes.children.push(new xml.CR(6));\n            unit.children.push(new xml.CR(6), notes);\n            /** @type {?} */\n            const segment = new xml.Tag('segment');\n            segment.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new xml.CR(6));\n            unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n            units.push(new xml.CR(4), unit);\n        });\n        /** @type {?} */\n        const file = new xml.Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, [...units, new xml.CR(2)]);\n        /** @type {?} */\n        const xliff = new xml.Tag(_XLIFF_TAG, { version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        /** @type {?} */\n        const xliff2Parser = new Xliff2Parser();\n        const { locale, msgIdToHtml, errors } = xliff2Parser.parse(content, url);\n        /** @type {?} */\n        const i18nNodesByMsgId = {};\n        /** @type {?} */\n        const converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(msgId => {\n            const { i18nNodes, errors: e } = converter.convert(msgIdToHtml[msgId], url);\n            errors.push(...e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId };\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return decimalDigest(message); }\n}\nclass _WriteVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return [new xml.Text(text.value)]; }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        /** @type {?} */\n        const nodes = [];\n        container.children.forEach((node) => nodes.push(...node.visit(this)));\n        return nodes;\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n        Object.keys(icu.cases).forEach((c) => {\n            nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n        });\n        nodes.push(new xml.Text(`}`));\n        return nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        /** @type {?} */\n        const type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            /** @type {?} */\n            const tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: `<${ph.tag}/>`,\n            });\n            return [tagPh];\n        }\n        /** @type {?} */\n        const tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: `<${ph.tag}>`,\n            dispEnd: `</${ph.tag}>`,\n        });\n        /** @type {?} */\n        const nodes = [].concat(...ph.children.map(node => node.visit(this)));\n        if (nodes.length) {\n            nodes.forEach((node) => tagPc.children.push(node));\n        }\n        else {\n            tagPc.children.push(new xml.Text(''));\n        }\n        return [tagPc];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        /** @type {?} */\n        const idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, {\n                id: idStr,\n                equiv: ph.name,\n                disp: `{{${ph.value}}}`,\n            })];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        /** @type {?} */\n        const cases = Object.keys(ph.value.cases).map((value) => value + ' {...}').join(' ');\n        /** @type {?} */\n        const idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}` })];\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    serialize(nodes) {\n        this._nextPlaceholderId = 0;\n        return [].concat(...nodes.map(node => node.visit(this)));\n    }\n}\nif (false) {\n    /** @type {?} */\n    _WriteVisitor.prototype._nextPlaceholderId;\n}\nclass Xliff2Parser {\n    constructor() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    parse(xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        /** @type {?} */\n        const xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                /** @type {?} */\n                const idAttr = element.attrs.find((attr) => attr.name === 'id');\n                if (!idAttr) {\n                    this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n                }\n                else {\n                    /** @type {?} */\n                    const id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, `Duplicated translations for msg ${id}`);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, `Message ${id} misses a translation`);\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                /** @type {?} */\n                const innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                /** @type {?} */\n                const innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                /** @type {?} */\n                const content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                /** @type {?} */\n                const innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                /** @type {?} */\n                const localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                /** @type {?} */\n                const versionAttr = element.attrs.find((attr) => attr.name === 'version');\n                if (versionAttr) {\n                    /** @type {?} */\n                    const version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                ml.visitAll(this, element.children, null);\n        }\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    }\n}\nif (false) {\n    /** @type {?} */\n    Xliff2Parser.prototype._unitMlString;\n    /** @type {?} */\n    Xliff2Parser.prototype._errors;\n    /** @type {?} */\n    Xliff2Parser.prototype._msgIdToHtml;\n    /** @type {?} */\n    Xliff2Parser.prototype._locale;\n}\nclass XmlToI18n {\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    convert(message, url) {\n        /** @type {?} */\n        const xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        /** @type {?} */\n        const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes,\n            errors: this._errors,\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return new i18n.Text(text.value, text.sourceSpan); }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        switch (el.name) {\n            case _PLACEHOLDER_TAG:\n                /** @type {?} */\n                const nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n                if (nameAttr) {\n                    return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                /** @type {?} */\n                const startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n                /** @type {?} */\n                const endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n                if (!startAttr) {\n                    this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n                }\n                else if (!endAttr) {\n                    this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n                }\n                else {\n                    /** @type {?} */\n                    const startId = startAttr.value;\n                    /** @type {?} */\n                    const endId = endAttr.value;\n                    /** @type {?} */\n                    const nodes = [];\n                    return nodes.concat(new i18n.Placeholder('', startId, el.sourceSpan), ...el.children.map(node => node.visit(this, null)), new i18n.Placeholder('', endId, el.sourceSpan));\n                }\n                break;\n            case _MARKER_TAG:\n                return [].concat(...ml.visitAll(this, el.children));\n            default:\n                this._addError(el, `Unexpected tag`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        /** @type {?} */\n        const caseMap = {};\n        ml.visitAll(this, icu.cases).forEach((c) => {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n        };\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    }\n}\nif (false) {\n    /** @type {?} */\n    XmlToI18n.prototype._errors;\n}\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n//# sourceMappingURL=xliff2.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { decimalDigest } from '../digest';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport * as xml from './xml_helper';\n/** @type {?} */\nconst _MESSAGES_TAG = 'messagebundle';\n/** @type {?} */\nconst _MESSAGE_TAG = 'msg';\n/** @type {?} */\nconst _PLACEHOLDER_TAG = 'ph';\n/** @type {?} */\nconst _EXEMPLE_TAG = 'ex';\n/** @type {?} */\nconst _SOURCE_TAG = 'source';\n/** @type {?} */\nconst _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\nexport class Xmb extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) {\n        /** @type {?} */\n        const exampleVisitor = new ExampleVisitor();\n        /** @type {?} */\n        const visitor = new _Visitor();\n        /** @type {?} */\n        let rootNode = new xml.Tag(_MESSAGES_TAG);\n        messages.forEach(message => {\n            /** @type {?} */\n            const attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            /** @type {?} */\n            let sourceTags = [];\n            message.sources.forEach((source) => {\n                sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n                    new xml.Text(`${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n                ]));\n            });\n            rootNode.children.push(new xml.CR(2), new xml.Tag(_MESSAGE_TAG, attrs, [...sourceTags, ...visitor.serialize(message.nodes)]));\n        });\n        rootNode.children.push(new xml.CR());\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new xml.CR(),\n            new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new xml.CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new xml.CR(),\n        ]);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        throw new Error('Unsupported');\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return digest(message); }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    createNameMapper(message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    }\n}\nclass _Visitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return [new xml.Text(text.value)]; }\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        /** @type {?} */\n        const nodes = [];\n        container.children.forEach((node) => nodes.push(...node.visit(this)));\n        return nodes;\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n        Object.keys(icu.cases).forEach((c) => {\n            nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n        });\n        nodes.push(new xml.Text(`}`));\n        return nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        /** @type {?} */\n        const startEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`<${ph.tag}>`)]);\n        /** @type {?} */\n        const startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        /** @type {?} */\n        const closeEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`</${ph.tag}>`)]);\n        /** @type {?} */\n        const closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.closeName }, [closeEx]);\n        return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        /** @type {?} */\n        const exTag = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`{{${ph.value}}}`)]);\n        return [new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag])];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        /** @type {?} */\n        const exTag = new xml.Tag(_EXEMPLE_TAG, {}, [\n            new xml.Text(`{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value) => value + ' {...}').join(' ')}}`)\n        ]);\n        return [new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag])];\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    serialize(nodes) {\n        return [].concat(...nodes.map(node => node.visit(this)));\n    }\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message) {\n    return decimalDigest(message);\n}\nclass ExampleVisitor {\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    addDefaultExamples(node) {\n        node.visit(this);\n        return node;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    visitTag(tag) {\n        if (tag.name === _PLACEHOLDER_TAG) {\n            if (!tag.children || tag.children.length == 0) {\n                /** @type {?} */\n                const exText = new xml.Text(tag.attrs['name'] || '...');\n                tag.children = [new xml.Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(node => node.visit(this));\n        }\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { }\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    visitDeclaration(decl) { }\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    visitDoctype(doctype) { }\n}\n/**\n * @param {?} internalName\n * @return {?}\n */\nexport function toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n//# sourceMappingURL=xmb.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport { digest, toPublicName } from './xmb';\n/** @type {?} */\nconst _TRANSLATIONS_TAG = 'translationbundle';\n/** @type {?} */\nconst _TRANSLATION_TAG = 'translation';\n/** @type {?} */\nconst _PLACEHOLDER_TAG = 'ph';\nexport class Xtb extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) { throw new Error('Unsupported'); }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        /** @type {?} */\n        const xtbParser = new XtbParser();\n        const { locale, msgIdToHtml, errors } = xtbParser.parse(content, url);\n        /** @type {?} */\n        const i18nNodesByMsgId = {};\n        /** @type {?} */\n        const converter = new XmlToI18n();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(msgId => {\n            /** @type {?} */\n            const valueFn = function () {\n                const { i18nNodes, errors } = converter.convert(msgIdToHtml[msgId], url);\n                if (errors.length) {\n                    throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId };\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return digest(message); }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    createNameMapper(message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    }\n}\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            /** @type {?} */\n            const value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value });\n            return value;\n        },\n        set: _ => { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nclass XtbParser {\n    constructor() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    parse(xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        /** @type {?} */\n        const xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n                }\n                /** @type {?} */\n                const langAttr = element.attrs.find((attr) => attr.name === 'lang');\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                /** @type {?} */\n                const idAttr = element.attrs.find((attr) => attr.name === 'id');\n                if (!idAttr) {\n                    this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n                }\n                else {\n                    /** @type {?} */\n                    const id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, `Duplicated translations for msg ${id}`);\n                    }\n                    else {\n                        /** @type {?} */\n                        const innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        /** @type {?} */\n                        const innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        /** @type {?} */\n                        const content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        /** @type {?} */\n                        const innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nif (false) {\n    /** @type {?} */\n    XtbParser.prototype._bundleDepth;\n    /** @type {?} */\n    XtbParser.prototype._errors;\n    /** @type {?} */\n    XtbParser.prototype._msgIdToHtml;\n    /** @type {?} */\n    XtbParser.prototype._locale;\n}\nclass XmlToI18n {\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    convert(message, url) {\n        /** @type {?} */\n        const xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        /** @type {?} */\n        const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            ml.visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes,\n            errors: this._errors,\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return new i18n.Text(text.value, /** @type {?} */ ((text.sourceSpan))); }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        /** @type {?} */\n        const caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(c => {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            /** @type {?} */\n            const nameAttr = el.attrs.find((attr) => attr.name === 'name');\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n        }\n        else {\n            this._addError(el, `Unexpected tag`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nif (false) {\n    /** @type {?} */\n    XmlToI18n.prototype._errors;\n}\n//# sourceMappingURL=xtb.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getHtmlTagDefinition } from './html_tags';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { Parser } from './parser';\nexport { ParseTreeResult, TreeError } from './parser';\nexport class HtmlParser extends Parser {\n    constructor() { super(getHtmlTagDefinition); }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        return super.parse(source, url, parseExpansionForms, interpolationConfig);\n    }\n}\n//# sourceMappingURL=html_parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '../core';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { I18nError } from './parse_util';\nimport { escapeXml } from './serializers/xml_helper';\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    constructor(_i18nNodesByMsgId = {}, locale, digest, mapperFactory, missingTranslationStrategy = MissingTranslationStrategy.Warning, console) {\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    static load(content, url, serializer, missingTranslationStrategy, console) {\n        const { locale, i18nNodesByMsgId } = serializer.load(content, url);\n        /** @type {?} */\n        const digestFn = (m) => serializer.digest(m);\n        /** @type {?} */\n        const mapperFactory = (m) => /** @type {?} */ ((serializer.createNameMapper(m)));\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    get(srcMsg) {\n        /** @type {?} */\n        const html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    has(srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\nif (false) {\n    /** @type {?} */\n    TranslationBundle.prototype._i18nToHtml;\n    /** @type {?} */\n    TranslationBundle.prototype._i18nNodesByMsgId;\n    /** @type {?} */\n    TranslationBundle.prototype.digest;\n    /** @type {?} */\n    TranslationBundle.prototype.mapperFactory;\n}\nclass I18nToHtmlVisitor {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    constructor(_i18nNodesByMsgId = {}, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    convert(srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        /** @type {?} */\n        const text = this._convertToText(srcMsg);\n        /** @type {?} */\n        const url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        /** @type {?} */\n        const html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: [...this._errors, ...html.errors],\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        // `convert()` uses an `HtmlParser` to return `html.Node`s\n        // we should then make sure that any special characters are escaped\n        return escapeXml(text.value);\n    }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        return container.children.map(n => n.visit(this)).join('');\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        /** @type {?} */\n        const cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n        /** @type {?} */\n        const exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        /** @type {?} */\n        const phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n        return '';\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        /** @type {?} */\n        const tag = `${ph.tag}`;\n        /** @type {?} */\n        const attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n        if (ph.isVoid) {\n            return `<${tag} ${attrs}/>`;\n        }\n        /** @type {?} */\n        const children = ph.children.map((c) => c.visit(this)).join('');\n        return `<${tag} ${attrs}>${children}</${tag}>`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    }\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    _convertToText(srcMsg) {\n        /** @type {?} */\n        const id = this._digest(srcMsg);\n        /** @type {?} */\n        const mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        /** @type {?} */\n        let nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = (name) => mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name;\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                /** @type {?} */\n                const ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n                this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"${ctx}`);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                /** @type {?} */\n                const ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n                this._console.warn(`Missing translation for message \"${id}\"${ctx}`);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = (name) => name;\n        }\n        /** @type {?} */\n        const text = nodes.map(node => node.visit(this)).join('');\n        /** @type {?} */\n        const context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    }\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    _addError(el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    }\n}\nif (false) {\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._srcMsg;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._contextStack;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._errors;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._mapper;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._i18nNodesByMsgId;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._locale;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._digest;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._mapperFactory;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._missingTranslationStrategy;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._console;\n}\n//# sourceMappingURL=translation_bundle.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '../core';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport { digest } from './digest';\nimport { mergeTranslations } from './extractor_merger';\nimport { Xliff } from './serializers/xliff';\nimport { Xliff2 } from './serializers/xliff2';\nimport { Xmb } from './serializers/xmb';\nimport { Xtb } from './serializers/xtb';\nimport { TranslationBundle } from './translation_bundle';\nexport class I18NHtmlParser {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    constructor(_htmlParser, translations, translationsFormat, missingTranslation = MissingTranslationStrategy.Warning, console) {\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            /** @type {?} */\n            const serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        /** @type {?} */\n        const parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    }\n}\nif (false) {\n    /** @type {?} */\n    I18NHtmlParser.prototype.getTagDefinition;\n    /** @type {?} */\n    I18NHtmlParser.prototype._translationBundle;\n    /** @type {?} */\n    I18NHtmlParser.prototype._htmlParser;\n}\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n//# sourceMappingURL=i18n_html_parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst CORE = '@angular/core';\nexport class Identifiers {\n}\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleName: CORE,\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\nIdentifiers.createModuleFactory = {\n    name: 'ɵcmf',\n    moduleName: CORE,\n};\nIdentifiers.moduleDef = {\n    name: 'ɵmod',\n    moduleName: CORE,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'ɵmpd',\n    moduleName: CORE,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ɵregisterModuleFactory',\n    moduleName: CORE,\n};\nIdentifiers.inject = { name: 'inject', moduleName: CORE };\nIdentifiers.INJECTOR = { name: 'INJECTOR', moduleName: CORE };\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE };\nIdentifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\nIdentifiers.InjectableDef = { name: 'ɵInjectableDef', moduleName: CORE };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ɵinlineInterpolate',\n    moduleName: CORE,\n};\nIdentifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\nIdentifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\nIdentifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE };\nIdentifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\nIdentifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\nIdentifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\nIdentifiers.textDef = { name: 'ɵted', moduleName: CORE };\nIdentifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\nIdentifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\nIdentifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\nIdentifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\nIdentifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\nIdentifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\nIdentifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\nIdentifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\nIdentifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\nIdentifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\nIdentifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n// type only\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n};\n// type only\nIdentifiers.ViewDefinition = {\n    name: 'ɵViewDefinition',\n    moduleName: CORE,\n};\nIdentifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\nif (false) {\n    /** @type {?} */\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS;\n    /** @type {?} */\n    Identifiers.ElementRef;\n    /** @type {?} */\n    Identifiers.NgModuleRef;\n    /** @type {?} */\n    Identifiers.ViewContainerRef;\n    /** @type {?} */\n    Identifiers.ChangeDetectorRef;\n    /** @type {?} */\n    Identifiers.QueryList;\n    /** @type {?} */\n    Identifiers.TemplateRef;\n    /** @type {?} */\n    Identifiers.CodegenComponentFactoryResolver;\n    /** @type {?} */\n    Identifiers.ComponentFactoryResolver;\n    /** @type {?} */\n    Identifiers.ComponentFactory;\n    /** @type {?} */\n    Identifiers.ComponentRef;\n    /** @type {?} */\n    Identifiers.NgModuleFactory;\n    /** @type {?} */\n    Identifiers.createModuleFactory;\n    /** @type {?} */\n    Identifiers.moduleDef;\n    /** @type {?} */\n    Identifiers.moduleProviderDef;\n    /** @type {?} */\n    Identifiers.RegisterModuleFactoryFn;\n    /** @type {?} */\n    Identifiers.inject;\n    /** @type {?} */\n    Identifiers.INJECTOR;\n    /** @type {?} */\n    Identifiers.Injector;\n    /** @type {?} */\n    Identifiers.defineInjectable;\n    /** @type {?} */\n    Identifiers.InjectableDef;\n    /** @type {?} */\n    Identifiers.ViewEncapsulation;\n    /** @type {?} */\n    Identifiers.ChangeDetectionStrategy;\n    /** @type {?} */\n    Identifiers.SecurityContext;\n    /** @type {?} */\n    Identifiers.LOCALE_ID;\n    /** @type {?} */\n    Identifiers.TRANSLATIONS_FORMAT;\n    /** @type {?} */\n    Identifiers.inlineInterpolate;\n    /** @type {?} */\n    Identifiers.interpolate;\n    /** @type {?} */\n    Identifiers.EMPTY_ARRAY;\n    /** @type {?} */\n    Identifiers.EMPTY_MAP;\n    /** @type {?} */\n    Identifiers.Renderer;\n    /** @type {?} */\n    Identifiers.viewDef;\n    /** @type {?} */\n    Identifiers.elementDef;\n    /** @type {?} */\n    Identifiers.anchorDef;\n    /** @type {?} */\n    Identifiers.textDef;\n    /** @type {?} */\n    Identifiers.directiveDef;\n    /** @type {?} */\n    Identifiers.providerDef;\n    /** @type {?} */\n    Identifiers.queryDef;\n    /** @type {?} */\n    Identifiers.pureArrayDef;\n    /** @type {?} */\n    Identifiers.pureObjectDef;\n    /** @type {?} */\n    Identifiers.purePipeDef;\n    /** @type {?} */\n    Identifiers.pipeDef;\n    /** @type {?} */\n    Identifiers.nodeValue;\n    /** @type {?} */\n    Identifiers.ngContentDef;\n    /** @type {?} */\n    Identifiers.unwrapValue;\n    /** @type {?} */\n    Identifiers.createRendererType2;\n    /** @type {?} */\n    Identifiers.RendererType2;\n    /** @type {?} */\n    Identifiers.ViewDefinition;\n    /** @type {?} */\n    Identifiers.createComponentFactory;\n}\n/**\n * @param {?} reference\n * @return {?}\n */\nexport function createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nexport function createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n//# sourceMappingURL=identifiers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst TypeModifier = {\n    Const: 0,\n};\nexport { TypeModifier };\nTypeModifier[TypeModifier.Const] = 'Const';\n/**\n * @abstract\n */\nexport class Type {\n    /**\n     * @param {?=} modifiers\n     */\n    constructor(modifiers = null) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    hasModifier(modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; }\n}\nif (false) {\n    /** @type {?} */\n    Type.prototype.modifiers;\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type.prototype.visitType = function (visitor, context) { };\n}\n/** @enum {number} */\nconst BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n    None: 7,\n};\nexport { BuiltinTypeName };\nBuiltinTypeName[BuiltinTypeName.Dynamic] = 'Dynamic';\nBuiltinTypeName[BuiltinTypeName.Bool] = 'Bool';\nBuiltinTypeName[BuiltinTypeName.String] = 'String';\nBuiltinTypeName[BuiltinTypeName.Int] = 'Int';\nBuiltinTypeName[BuiltinTypeName.Number] = 'Number';\nBuiltinTypeName[BuiltinTypeName.Function] = 'Function';\nBuiltinTypeName[BuiltinTypeName.Inferred] = 'Inferred';\nBuiltinTypeName[BuiltinTypeName.None] = 'None';\nexport class BuiltinType extends Type {\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    constructor(name, modifiers = null) {\n        super(modifiers);\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    BuiltinType.prototype.name;\n}\nexport class ExpressionType extends Type {\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     * @param {?=} typeParams\n     */\n    constructor(value, modifiers = null, typeParams = null) {\n        super(modifiers);\n        this.value = value;\n        this.typeParams = typeParams;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExpressionType.prototype.value;\n    /** @type {?} */\n    ExpressionType.prototype.typeParams;\n}\nexport class ArrayType extends Type {\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    constructor(of, modifiers = null) {\n        super(modifiers);\n        this.of = of;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) {\n        return visitor.visitArrayType(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ArrayType.prototype.of;\n}\nexport class MapType extends Type {\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    constructor(valueType, modifiers = null) {\n        super(modifiers);\n        this.valueType = valueType || null;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) { return visitor.visitMapType(this, context); }\n}\nif (false) {\n    /** @type {?} */\n    MapType.prototype.valueType;\n}\n/** @type {?} */\nexport const DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n/** @type {?} */\nexport const INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\n/** @type {?} */\nexport const BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n/** @type {?} */\nexport const INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n/** @type {?} */\nexport const NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n/** @type {?} */\nexport const STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n/** @type {?} */\nexport const FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/** @type {?} */\nexport const NONE_TYPE = new BuiltinType(BuiltinTypeName.None);\n/**\n * @record\n */\nexport function TypeVisitor() { }\n/** @type {?} */\nTypeVisitor.prototype.visitBuiltinType;\n/** @type {?} */\nTypeVisitor.prototype.visitExpressionType;\n/** @type {?} */\nTypeVisitor.prototype.visitArrayType;\n/** @type {?} */\nTypeVisitor.prototype.visitMapType;\n/** @enum {number} */\nconst BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    BitwiseAnd: 11,\n    Lower: 12,\n    LowerEquals: 13,\n    Bigger: 14,\n    BiggerEquals: 15,\n};\nexport { BinaryOperator };\nBinaryOperator[BinaryOperator.Equals] = 'Equals';\nBinaryOperator[BinaryOperator.NotEquals] = 'NotEquals';\nBinaryOperator[BinaryOperator.Identical] = 'Identical';\nBinaryOperator[BinaryOperator.NotIdentical] = 'NotIdentical';\nBinaryOperator[BinaryOperator.Minus] = 'Minus';\nBinaryOperator[BinaryOperator.Plus] = 'Plus';\nBinaryOperator[BinaryOperator.Divide] = 'Divide';\nBinaryOperator[BinaryOperator.Multiply] = 'Multiply';\nBinaryOperator[BinaryOperator.Modulo] = 'Modulo';\nBinaryOperator[BinaryOperator.And] = 'And';\nBinaryOperator[BinaryOperator.Or] = 'Or';\nBinaryOperator[BinaryOperator.BitwiseAnd] = 'BitwiseAnd';\nBinaryOperator[BinaryOperator.Lower] = 'Lower';\nBinaryOperator[BinaryOperator.LowerEquals] = 'LowerEquals';\nBinaryOperator[BinaryOperator.Bigger] = 'Bigger';\nBinaryOperator[BinaryOperator.BiggerEquals] = 'BiggerEquals';\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nexport function nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nexport function areAllEquivalent(base, other) {\n    /** @type {?} */\n    const len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (let i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nexport class Expression {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    constructor(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    prop(name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    }\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    key(index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    }\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    callMethod(name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    }\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    callFn(params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    }\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    instantiate(params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    }\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    conditional(trueCase, falseCase = null, sourceSpan) {\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    equals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    notEquals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    identical(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    notIdentical(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    minus(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    plus(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    divide(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    multiply(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    modulo(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    and(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @param {?=} parens\n     * @return {?}\n     */\n    bitwiseAnd(rhs, sourceSpan, parens = true) {\n        return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd, this, rhs, null, sourceSpan, parens);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    or(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    lower(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    lowerEquals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    bigger(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    biggerEquals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    isBlank(sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    cast(type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    }\n    /**\n     * @return {?}\n     */\n    toStmt() { return new ExpressionStatement(this, null); }\n}\nif (false) {\n    /** @type {?} */\n    Expression.prototype.type;\n    /** @type {?} */\n    Expression.prototype.sourceSpan;\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * Calculates whether this expression produces the same value as the given expression.\n     * Note: We don't check Types nor ParseSourceSpans nor function arguments.\n     * @abstract\n     * @param {?} e\n     * @return {?}\n     */\n    Expression.prototype.isEquivalent = function (e) { };\n    /**\n     * Return true if the expression is constant.\n     * @abstract\n     * @return {?}\n     */\n    Expression.prototype.isConstant = function () { };\n}\n/** @enum {number} */\nconst BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nexport { BuiltinVar };\nBuiltinVar[BuiltinVar.This] = 'This';\nBuiltinVar[BuiltinVar.Super] = 'Super';\nBuiltinVar[BuiltinVar.CatchError] = 'CatchError';\nBuiltinVar[BuiltinVar.CatchStack] = 'CatchStack';\nexport class ReadVarExpr extends Expression {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(name, type, sourceSpan) {\n        super(type, sourceSpan);\n        if (typeof name === 'string') {\n            this.name = name;\n            this.builtin = null;\n        }\n        else {\n            this.name = null;\n            this.builtin = name;\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set(value) {\n        if (!this.name) {\n            throw new Error(`Built in variable ${this.builtin} can not be assigned to.`);\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReadVarExpr.prototype.name;\n    /** @type {?} */\n    ReadVarExpr.prototype.builtin;\n}\nexport class TypeofExpr extends Expression {\n    /**\n     * @param {?} expr\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(expr, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.expr = expr;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitTypeofExpr(this, context);\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof TypeofExpr && e.expr.isEquivalent(this.expr);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return this.expr.isConstant(); }\n}\nif (false) {\n    /** @type {?} */\n    TypeofExpr.prototype.expr;\n}\n/**\n * @template T\n */\nexport class WrappedNodeExpr extends Expression {\n    /**\n     * @param {?} node\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(node, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.node = node;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof WrappedNodeExpr && this.node === e.node;\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWrappedNodeExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    WrappedNodeExpr.prototype.node;\n}\nexport class WriteVarExpr extends Expression {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(name, value, type, sourceSpan) {\n        super(type || value.type, sourceSpan);\n        this.name = name;\n        this.value = value;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    }\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    toDeclStmt(type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    }\n}\nif (false) {\n    /** @type {?} */\n    WriteVarExpr.prototype.value;\n    /** @type {?} */\n    WriteVarExpr.prototype.name;\n}\nexport class WriteKeyExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, index, value, type, sourceSpan) {\n        super(type || value.type, sourceSpan);\n        this.receiver = receiver;\n        this.index = index;\n        this.value = value;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    WriteKeyExpr.prototype.value;\n    /** @type {?} */\n    WriteKeyExpr.prototype.receiver;\n    /** @type {?} */\n    WriteKeyExpr.prototype.index;\n}\nexport class WritePropExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, name, value, type, sourceSpan) {\n        super(type || value.type, sourceSpan);\n        this.receiver = receiver;\n        this.name = name;\n        this.value = value;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    WritePropExpr.prototype.value;\n    /** @type {?} */\n    WritePropExpr.prototype.receiver;\n    /** @type {?} */\n    WritePropExpr.prototype.name;\n}\n/** @enum {number} */\nconst BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nexport { BuiltinMethod };\nBuiltinMethod[BuiltinMethod.ConcatArray] = 'ConcatArray';\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = 'SubscribeObservable';\nBuiltinMethod[BuiltinMethod.Bind] = 'Bind';\nexport class InvokeMethodExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, method, args, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.receiver = receiver;\n        this.args = args;\n        if (typeof method === 'string') {\n            this.name = method;\n            this.builtin = null;\n        }\n        else {\n            this.name = null;\n            this.builtin = /** @type {?} */ (method);\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    InvokeMethodExpr.prototype.name;\n    /** @type {?} */\n    InvokeMethodExpr.prototype.builtin;\n    /** @type {?} */\n    InvokeMethodExpr.prototype.receiver;\n    /** @type {?} */\n    InvokeMethodExpr.prototype.args;\n}\nexport class InvokeFunctionExpr extends Expression {\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(fn, args, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.fn = fn;\n        this.args = args;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    InvokeFunctionExpr.prototype.fn;\n    /** @type {?} */\n    InvokeFunctionExpr.prototype.args;\n}\nexport class InstantiateExpr extends Expression {\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(classExpr, args, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.classExpr = classExpr;\n        this.args = args;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    InstantiateExpr.prototype.classExpr;\n    /** @type {?} */\n    InstantiateExpr.prototype.args;\n}\nexport class LiteralExpr extends Expression {\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(value, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.value = value;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return true; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralExpr.prototype.value;\n}\nexport class ExternalExpr extends Expression {\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    constructor(value, type, typeParams = null, sourceSpan) {\n        super(type, sourceSpan);\n        this.value = value;\n        this.typeParams = typeParams;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExternalExpr.prototype.value;\n    /** @type {?} */\n    ExternalExpr.prototype.typeParams;\n}\nexport class ExternalReference {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?=} runtime\n     */\n    constructor(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExternalReference.prototype.moduleName;\n    /** @type {?} */\n    ExternalReference.prototype.name;\n    /** @type {?} */\n    ExternalReference.prototype.runtime;\n}\nexport class ConditionalExpr extends Expression {\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, trueCase, falseCase = null, type, sourceSpan) {\n        super(type || trueCase.type, sourceSpan);\n        this.condition = condition;\n        this.falseCase = falseCase;\n        this.trueCase = trueCase;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ConditionalExpr.prototype.trueCase;\n    /** @type {?} */\n    ConditionalExpr.prototype.condition;\n    /** @type {?} */\n    ConditionalExpr.prototype.falseCase;\n}\nexport class NotExpr extends Expression {\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, sourceSpan) {\n        super(BOOL_TYPE, sourceSpan);\n        this.condition = condition;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    NotExpr.prototype.condition;\n}\nexport class AssertNotNull extends Expression {\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, sourceSpan) {\n        super(condition.type, sourceSpan);\n        this.condition = condition;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    AssertNotNull.prototype.condition;\n}\nexport class CastExpr extends Expression {\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(value, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.value = value;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    CastExpr.prototype.value;\n}\nexport class FnParam {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    constructor(name, type = null) {\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    isEquivalent(param) { return this.name === param.name; }\n}\nif (false) {\n    /** @type {?} */\n    FnParam.prototype.name;\n    /** @type {?} */\n    FnParam.prototype.type;\n}\nexport class FunctionExpr extends Expression {\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @param {?=} name\n     */\n    constructor(params, statements, type, sourceSpan, name) {\n        super(type, sourceSpan);\n        this.params = params;\n        this.statements = statements;\n        this.name = name;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    }\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    toDeclStmt(name, modifiers = null) {\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FunctionExpr.prototype.params;\n    /** @type {?} */\n    FunctionExpr.prototype.statements;\n    /** @type {?} */\n    FunctionExpr.prototype.name;\n}\nexport class BinaryOperatorExpr extends Expression {\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @param {?=} parens\n     */\n    constructor(operator, lhs, rhs, type, sourceSpan, parens = true) {\n        super(type || lhs.type, sourceSpan);\n        this.operator = operator;\n        this.rhs = rhs;\n        this.parens = parens;\n        this.lhs = lhs;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.lhs;\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.operator;\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.rhs;\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.parens;\n}\nexport class ReadPropExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, name, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.receiver = receiver;\n        this.name = name;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set(value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReadPropExpr.prototype.receiver;\n    /** @type {?} */\n    ReadPropExpr.prototype.name;\n}\nexport class ReadKeyExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, index, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.receiver = receiver;\n        this.index = index;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set(value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReadKeyExpr.prototype.receiver;\n    /** @type {?} */\n    ReadKeyExpr.prototype.index;\n}\nexport class LiteralArrayExpr extends Expression {\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(entries, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.entries = entries;\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return this.entries.every(e => e.isConstant()); }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralArrayExpr.prototype.entries;\n}\nexport class LiteralMapEntry {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} quoted\n     */\n    constructor(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralMapEntry.prototype.key;\n    /** @type {?} */\n    LiteralMapEntry.prototype.value;\n    /** @type {?} */\n    LiteralMapEntry.prototype.quoted;\n}\nexport class LiteralMapExpr extends Expression {\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(entries, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.entries = entries;\n        this.valueType = null;\n        if (type) {\n            this.valueType = type.valueType;\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return this.entries.every(e => e.value.isConstant()); }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    LiteralMapExpr.prototype.valueType;\n    /** @type {?} */\n    LiteralMapExpr.prototype.entries;\n}\nexport class CommaExpr extends Expression {\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    constructor(parts, sourceSpan) {\n        super(parts[parts.length - 1].type, sourceSpan);\n        this.parts = parts;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return false; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    CommaExpr.prototype.parts;\n}\n/**\n * @record\n */\nexport function ExpressionVisitor() { }\n/** @type {?} */\nExpressionVisitor.prototype.visitReadVarExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWriteVarExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWriteKeyExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWritePropExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitInvokeMethodExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitInvokeFunctionExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitInstantiateExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitLiteralExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitExternalExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitConditionalExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitNotExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitAssertNotNullExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitCastExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitFunctionExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitBinaryOperatorExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitReadPropExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitReadKeyExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitLiteralArrayExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitLiteralMapExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitCommaExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWrappedNodeExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitTypeofExpr;\n/** @type {?} */\nexport const THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\n/** @type {?} */\nexport const SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\n/** @type {?} */\nexport const CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\n/** @type {?} */\nexport const CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\n/** @type {?} */\nexport const NULL_EXPR = new LiteralExpr(null, null, null);\n/** @type {?} */\nexport const TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nconst StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n    Static: 3,\n};\nexport { StmtModifier };\nStmtModifier[StmtModifier.Final] = 'Final';\nStmtModifier[StmtModifier.Private] = 'Private';\nStmtModifier[StmtModifier.Exported] = 'Exported';\nStmtModifier[StmtModifier.Static] = 'Static';\n/**\n * @abstract\n */\nexport class Statement {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    hasModifier(modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; }\n}\nif (false) {\n    /** @type {?} */\n    Statement.prototype.modifiers;\n    /** @type {?} */\n    Statement.prototype.sourceSpan;\n    /**\n     * Calculates whether this statement produces the same value as the given statement.\n     * Note: We don't check Types nor ParseSourceSpans nor function arguments.\n     * @abstract\n     * @param {?} stmt\n     * @return {?}\n     */\n    Statement.prototype.isEquivalent = function (stmt) { };\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n}\nexport class DeclareVarStmt extends Statement {\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(name, value, type, modifiers = null, sourceSpan) {\n        super(modifiers, sourceSpan);\n        this.name = name;\n        this.value = value;\n        this.type = type || (value && value.type) || null;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    DeclareVarStmt.prototype.type;\n    /** @type {?} */\n    DeclareVarStmt.prototype.name;\n    /** @type {?} */\n    DeclareVarStmt.prototype.value;\n}\nexport class DeclareFunctionStmt extends Statement {\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(name, params, statements, type, modifiers = null, sourceSpan) {\n        super(modifiers, sourceSpan);\n        this.name = name;\n        this.params = params;\n        this.statements = statements;\n        this.type = type || null;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.type;\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.name;\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.params;\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.statements;\n}\nexport class ExpressionStatement extends Statement {\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    constructor(expr, sourceSpan) {\n        super(null, sourceSpan);\n        this.expr = expr;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExpressionStatement.prototype.expr;\n}\nexport class ReturnStatement extends Statement {\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        super(null, sourceSpan);\n        this.value = value;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReturnStatement.prototype.value;\n}\nexport class AbstractClassPart {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    constructor(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    hasModifier(modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; }\n}\nif (false) {\n    /** @type {?} */\n    AbstractClassPart.prototype.type;\n    /** @type {?} */\n    AbstractClassPart.prototype.modifiers;\n}\nexport class ClassField extends AbstractClassPart {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} initializer\n     */\n    constructor(name, type, modifiers = null, initializer) {\n        super(type, modifiers);\n        this.name = name;\n        this.initializer = initializer;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    isEquivalent(f) { return this.name === f.name; }\n}\nif (false) {\n    /** @type {?} */\n    ClassField.prototype.name;\n    /** @type {?} */\n    ClassField.prototype.initializer;\n}\nexport class ClassMethod extends AbstractClassPart {\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    constructor(name, params, body, type, modifiers = null) {\n        super(type, modifiers);\n        this.name = name;\n        this.params = params;\n        this.body = body;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    isEquivalent(m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ClassMethod.prototype.name;\n    /** @type {?} */\n    ClassMethod.prototype.params;\n    /** @type {?} */\n    ClassMethod.prototype.body;\n}\nexport class ClassGetter extends AbstractClassPart {\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    constructor(name, body, type, modifiers = null) {\n        super(type, modifiers);\n        this.name = name;\n        this.body = body;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    isEquivalent(m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ClassGetter.prototype.name;\n    /** @type {?} */\n    ClassGetter.prototype.body;\n}\nexport class ClassStmt extends Statement {\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(name, parent, fields, getters, constructorMethod, methods, modifiers = null, sourceSpan) {\n        super(modifiers, sourceSpan);\n        this.name = name;\n        this.parent = parent;\n        this.fields = fields;\n        this.getters = getters;\n        this.constructorMethod = constructorMethod;\n        this.methods = methods;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ClassStmt.prototype.name;\n    /** @type {?} */\n    ClassStmt.prototype.parent;\n    /** @type {?} */\n    ClassStmt.prototype.fields;\n    /** @type {?} */\n    ClassStmt.prototype.getters;\n    /** @type {?} */\n    ClassStmt.prototype.constructorMethod;\n    /** @type {?} */\n    ClassStmt.prototype.methods;\n}\nexport class IfStmt extends Statement {\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, trueCase, falseCase = [], sourceSpan) {\n        super(null, sourceSpan);\n        this.condition = condition;\n        this.trueCase = trueCase;\n        this.falseCase = falseCase;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    IfStmt.prototype.condition;\n    /** @type {?} */\n    IfStmt.prototype.trueCase;\n    /** @type {?} */\n    IfStmt.prototype.falseCase;\n}\nexport class CommentStmt extends Statement {\n    /**\n     * @param {?} comment\n     * @param {?=} multiline\n     * @param {?=} sourceSpan\n     */\n    constructor(comment, multiline = false, sourceSpan) {\n        super(null, sourceSpan);\n        this.comment = comment;\n        this.multiline = multiline;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) { return stmt instanceof CommentStmt; }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    CommentStmt.prototype.comment;\n    /** @type {?} */\n    CommentStmt.prototype.multiline;\n}\nexport class JSDocCommentStmt extends Statement {\n    /**\n     * @param {?=} tags\n     * @param {?=} sourceSpan\n     */\n    constructor(tags = [], sourceSpan) {\n        super(null, sourceSpan);\n        this.tags = tags;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof JSDocCommentStmt && this.toString() === stmt.toString();\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitJSDocCommentStmt(this, context);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return serializeTags(this.tags); }\n}\nif (false) {\n    /** @type {?} */\n    JSDocCommentStmt.prototype.tags;\n}\nexport class TryCatchStmt extends Statement {\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    constructor(bodyStmts, catchStmts, sourceSpan) {\n        super(null, sourceSpan);\n        this.bodyStmts = bodyStmts;\n        this.catchStmts = catchStmts;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    TryCatchStmt.prototype.bodyStmts;\n    /** @type {?} */\n    TryCatchStmt.prototype.catchStmts;\n}\nexport class ThrowStmt extends Statement {\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    constructor(error, sourceSpan) {\n        super(null, sourceSpan);\n        this.error = error;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    isEquivalent(stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ThrowStmt.prototype.error;\n}\n/**\n * @record\n */\nexport function StatementVisitor() { }\n/** @type {?} */\nStatementVisitor.prototype.visitDeclareVarStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitDeclareFunctionStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitExpressionStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitReturnStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitDeclareClassStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitIfStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitTryCatchStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitThrowStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitCommentStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitJSDocCommentStmt;\nexport class AstTransformer {\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    transformExpr(expr, context) { return expr; }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    transformStmt(stmt, context) { return stmt; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadVarExpr(ast, context) { return this.transformExpr(ast, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, context) {\n        return this.transformExpr(ast, context);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitTypeofExpr(expr, context) {\n        return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWritePropExpr(expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeMethodExpr(ast, context) {\n        /** @type {?} */\n        const method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralExpr(ast, context) { return this.transformExpr(ast, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExternalExpr(ast, context) {\n        return this.transformExpr(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditionalExpr(ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNotExpr(ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCastExpr(ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionExpr(ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadPropExpr(ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, context) {\n        /** @type {?} */\n        const entries = ast.entries.map((entry) => new LiteralMapEntry(entry.key, entry.value.visitExpression(this, context), entry.quoted));\n        /** @type {?} */\n        const mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommaExpr(ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllExpressions(exprs, context) {\n        return exprs.map(expr => expr.visitExpression(this, context));\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, context) {\n        /** @type {?} */\n        const value = stmt.value && stmt.value.visitExpression(this, context);\n        return this.transformStmt(new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitReturnStmt(stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, context) {\n        /** @type {?} */\n        const parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        /** @type {?} */\n        const getters = stmt.getters.map(getter => new ClassGetter(getter.name, this.visitAllStatements(getter.body, context), getter.type, getter.modifiers));\n        /** @type {?} */\n        const ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        /** @type {?} */\n        const methods = stmt.methods.map(method => new ClassMethod(method.name, method.params, this.visitAllStatements(method.body, context), method.type, method.modifiers));\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitIfStmt(stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitThrowStmt(stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommentStmt(stmt, context) {\n        return this.transformStmt(stmt, context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitJSDocCommentStmt(stmt, context) {\n        return this.transformStmt(stmt, context);\n    }\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllStatements(stmts, context) {\n        return stmts.map(stmt => stmt.visitStatement(this, context));\n    }\n}\nexport class RecursiveAstVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    }\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    visitBuiltinType(type, context) { return this.visitType(type, context); }\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpressionType(type, context) {\n        type.value.visitExpression(this, context);\n        if (type.typeParams !== null) {\n            type.typeParams.forEach(param => this.visitType(param, context));\n        }\n        return this.visitType(type, context);\n    }\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    visitArrayType(type, context) { return this.visitType(type, context); }\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    visitMapType(type, context) { return this.visitType(type, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitTypeofExpr(ast, context) { return this.visitExpression(ast, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadVarExpr(ast, context) {\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteVarExpr(ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteKeyExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitWritePropExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeMethodExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralExpr(ast, context) {\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExternalExpr(ast, context) {\n        if (ast.typeParams) {\n            ast.typeParams.forEach(type => type.visitType(this, context));\n        }\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditionalExpr(ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNotExpr(ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCastExpr(ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionExpr(ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadPropExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, context) {\n        ast.entries.forEach((entry) => entry.value.visitExpression(this, context));\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommaExpr(ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    }\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllExpressions(exprs, context) {\n        exprs.forEach(expr => expr.visitExpression(this, context));\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, context) {\n        if (stmt.value) {\n            stmt.value.visitExpression(this, context);\n        }\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitReturnStmt(stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, context) {\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(getter => this.visitAllStatements(getter.body, context));\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(method => this.visitAllStatements(method.body, context));\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitIfStmt(stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitThrowStmt(stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommentStmt(stmt, context) { return stmt; }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitJSDocCommentStmt(stmt, context) { return stmt; }\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllStatements(stmts, context) {\n        stmts.forEach(stmt => stmt.visitStatement(this, context));\n    }\n}\n/**\n * @param {?} stmts\n * @return {?}\n */\nexport function findReadVarNames(stmts) {\n    /** @type {?} */\n    const visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nclass _ReadVarVisitor extends RecursiveAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.varNames = new Set();\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadVarExpr(ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    _ReadVarVisitor.prototype.varNames;\n}\n/**\n * @param {?} stmts\n * @return {?}\n */\nexport function collectExternalReferences(stmts) {\n    /** @type {?} */\n    const visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nclass _FindExternalReferencesVisitor extends RecursiveAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.externalReferences = [];\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    visitExternalExpr(e, context) {\n        this.externalReferences.push(e.value);\n        return super.visitExternalExpr(e, context);\n    }\n}\nif (false) {\n    /** @type {?} */\n    _FindExternalReferencesVisitor.prototype.externalReferences;\n}\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nexport function applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    /** @type {?} */\n    const transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nexport function applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    /** @type {?} */\n    const transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nclass _ApplySourceSpanTransformer extends AstTransformer {\n    /**\n     * @param {?} sourceSpan\n     */\n    constructor(sourceSpan) {\n        super();\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _clone(obj) {\n        /** @type {?} */\n        const clone = Object.create(obj.constructor.prototype);\n        for (let prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    transformExpr(expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    transformStmt(stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    }\n}\nif (false) {\n    /** @type {?} */\n    _ApplySourceSpanTransformer.prototype.sourceSpan;\n}\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function importExpr(id, typeParams = null, sourceSpan) {\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function importType(id, typeParams = null, typeModifiers = null) {\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @param {?=} typeParams\n * @return {?}\n */\nexport function expressionType(expr, typeModifiers = null, typeParams = null) {\n    return new ExpressionType(expr, typeModifiers, typeParams);\n}\n/**\n * @param {?} expr\n * @return {?}\n */\nexport function typeofExpr(expr) {\n    return new TypeofExpr(expr);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nexport function literalMap(values, type = null) {\n    return new LiteralMapExpr(values.map(e => new LiteralMapEntry(e.key, e.value, e.quoted)), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @param {?=} name\n * @return {?}\n */\nexport function fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n/**\n * @param {?} condition\n * @param {?} thenClause\n * @param {?=} elseClause\n * @return {?}\n */\nexport function ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @param {?} exp\n * @return {?}\n */\nexport function isNull(exp) {\n    return exp instanceof LiteralExpr && exp.value === null;\n}\n/** @enum {string} */\nconst JSDocTagName = {\n    Desc: 'desc',\n    Id: 'id',\n    Meaning: 'meaning',\n};\nexport { JSDocTagName };\n/** @typedef {?} */\nvar JSDocTag;\nexport { JSDocTag };\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction tagToString(tag) {\n    /** @type {?} */\n    let out = '';\n    if (tag.tagName) {\n        out += ` @${tag.tagName}`;\n    }\n    if (tag.text) {\n        if (tag.text.match(/\\/\\*|\\*\\//)) {\n            throw new Error('JSDoc text cannot contain \"/*\" and \"*/\"');\n        }\n        out += ' ' + tag.text.replace(/@/g, '\\\\@');\n    }\n    return out;\n}\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction serializeTags(tags) {\n    if (tags.length === 0)\n        return '';\n    /** @type {?} */\n    let out = '*\\n';\n    for (const tag of tags) {\n        out += ' *';\n        // If the tagToString is multi-line, insert \" * \" prefixes on subsequent lines.\n        out += tagToString(tag).replace(/\\n/g, '\\n * ');\n        out += '\\n';\n    }\n    out += ' ';\n    return out;\n}\n//# sourceMappingURL=output_ast.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { visitValue } from '../util';\nimport * as o from './output_ast';\n/** @type {?} */\nexport const QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nexport function convertValueToOutputAst(ctx, value, type = null) {\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nclass _ValueOutputAstTransformer {\n    /**\n     * @param {?} ctx\n     */\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    visitArray(arr, type) {\n        return o.literalArr(arr.map(value => visitValue(value, this, null)), type);\n    }\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    visitStringMap(map, type) {\n        /** @type {?} */\n        const entries = [];\n        /** @type {?} */\n        const quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(key => {\n            entries.push(new o.LiteralMapEntry(key, visitValue(map[key], this, null), quotedSet.has(key)));\n        });\n        return new o.LiteralMapExpr(entries, type);\n    }\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    visitPrimitive(value, type) { return o.literal(value, type); }\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    visitOther(value, type) {\n        if (value instanceof o.Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    _ValueOutputAstTransformer.prototype.ctx;\n}\n//# sourceMappingURL=value_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { convertValueToOutputAst } from './output/value_util';\n/** @typedef {?} */\nvar MapEntry;\n/** @typedef {?} */\nvar MapLiteral;\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction mapEntry(key, value) {\n    return { key, value, quoted: false };\n}\nexport class InjectableCompiler {\n    /**\n     * @param {?} reflector\n     * @param {?} alwaysGenerateDef\n     */\n    constructor(reflector, alwaysGenerateDef) {\n        this.reflector = reflector;\n        this.alwaysGenerateDef = alwaysGenerateDef;\n        this.tokenInjector = reflector.resolveExternalReference(Identifiers.Injector);\n    }\n    /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    depsArray(deps, ctx) {\n        return deps.map(dep => {\n            /** @type {?} */\n            let token = dep;\n            /** @type {?} */\n            let args = [token];\n            /** @type {?} */\n            let flags = 0 /* Default */;\n            if (Array.isArray(dep)) {\n                for (let i = 0; i < dep.length; i++) {\n                    /** @type {?} */\n                    const v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            flags |= 8 /* Optional */;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 4 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            token = v.token;\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n            }\n            /** @type {?} */\n            let tokenExpr;\n            if (typeof token === 'string') {\n                tokenExpr = o.literal(token);\n            }\n            else if (token === this.tokenInjector) {\n                tokenExpr = o.importExpr(Identifiers.INJECTOR);\n            }\n            else {\n                tokenExpr = ctx.importExpr(token);\n            }\n            if (flags !== 0 /* Default */) {\n                args = [tokenExpr, o.literal(flags)];\n            }\n            else {\n                args = [tokenExpr];\n            }\n            return o.importExpr(Identifiers.inject).callFn(args);\n        });\n    }\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    factoryFor(injectable, ctx) {\n        /** @type {?} */\n        let retValue;\n        if (injectable.useExisting) {\n            retValue = o.importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            /** @type {?} */\n            const deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            /** @type {?} */\n            const clazz = injectable.useClass || injectable.symbol;\n            /** @type {?} */\n            const depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new o.InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return o.fn([], [new o.ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    }\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    injectableDef(injectable, ctx) {\n        /** @type {?} */\n        let providedIn = o.NULL_EXPR;\n        if (injectable.providedIn !== undefined) {\n            if (injectable.providedIn === null) {\n                providedIn = o.NULL_EXPR;\n            }\n            else if (typeof injectable.providedIn === 'string') {\n                providedIn = o.literal(injectable.providedIn);\n            }\n            else {\n                providedIn = ctx.importExpr(injectable.providedIn);\n            }\n        }\n        /** @type {?} */\n        const def = [\n            mapEntry('factory', this.factoryFor(injectable, ctx)),\n            mapEntry('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry('providedIn', providedIn),\n        ];\n        return o.importExpr(Identifiers.defineInjectable).callFn([o.literalMap(def)]);\n    }\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    compile(injectable, ctx) {\n        if (this.alwaysGenerateDef || injectable.providedIn !== undefined) {\n            /** @type {?} */\n            const className = /** @type {?} */ ((identifierName(injectable.type)));\n            /** @type {?} */\n            const clazz = new o.ClassStmt(className, null, [\n                new o.ClassField('ngInjectableDef', o.INFERRED_TYPE, [o.StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new o.ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    InjectableCompiler.prototype.tokenInjector;\n    /** @type {?} */\n    InjectableCompiler.prototype.reflector;\n    /** @type {?} */\n    InjectableCompiler.prototype.alwaysGenerateDef;\n}\n//# sourceMappingURL=injectable_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\n/** @type {?} */\nconst GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\n/** @type {?} */\nconst JIT_SUMMARY_FILE = /\\.ngsummary\\./;\n/** @type {?} */\nconst JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function ngfactoryFilePath(filePath, forceSourceFile = false) {\n    /** @type {?} */\n    const urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return `${urlWithSuffix[0]}.ngfactory${normalizeGenFileSuffix(urlWithSuffix[1])}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function splitTypescriptSuffix(path, forceSourceFile = false) {\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    /** @type {?} */\n    const lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nexport function normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nexport function summaryFileName(fileName) {\n    /** @type {?} */\n    const fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function summaryForJitFileName(fileName, forceSourceFile = false) {\n    /** @type {?} */\n    const urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return `${urlWithSuffix[0]}.ngsummary${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nexport function summaryForJitName(symbolName) {\n    return `${symbolName}NgSummary`;\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nexport function stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/** @type {?} */\nconst LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nexport function createLoweredSymbol(id) {\n    return `\\u0275${id}`;\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nexport { LifecycleHooks };\nLifecycleHooks[LifecycleHooks.OnInit] = 'OnInit';\nLifecycleHooks[LifecycleHooks.OnDestroy] = 'OnDestroy';\nLifecycleHooks[LifecycleHooks.DoCheck] = 'DoCheck';\nLifecycleHooks[LifecycleHooks.OnChanges] = 'OnChanges';\nLifecycleHooks[LifecycleHooks.AfterContentInit] = 'AfterContentInit';\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = 'AfterContentChecked';\nLifecycleHooks[LifecycleHooks.AfterViewInit] = 'AfterViewInit';\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = 'AfterViewChecked';\n/** @type {?} */\nexport const LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nexport function hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nexport function getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(reflector, hook, token));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n//# sourceMappingURL=lifecycle_reflector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from './aot/static_symbol';\nimport { ngfactoryFilePath } from './aot/util';\nimport { assertArrayOfStrings, assertInterpolationSymbols } from './assertions';\nimport * as cpl from './compile_metadata';\nimport { ChangeDetectionStrategy, Type, ViewEncapsulation, createAttribute, createComponent, createHost, createInject, createInjectable, createInjectionToken, createNgModule, createOptional, createSelf, createSkipSelf } from './core';\nimport { findLast } from './directive_resolver';\nimport { Identifiers } from './identifiers';\nimport { getAllLifecycleHooks } from './lifecycle_reflector';\nimport { CssSelector } from './selector';\nimport { SyncAsync, ValueTransformer, isPromise, noUndefined, resolveForwardRef, stringify, syntaxError, visitValue } from './util';\n/** @typedef {?} */\nvar ErrorCollector;\nexport { ErrorCollector };\n/** @type {?} */\nexport const ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport class CompileMetadataResolver {\n    /**\n     * @param {?} _config\n     * @param {?} _htmlParser\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    constructor(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n        this._shallowModuleCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    getReflector() { return this._reflector; }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) {\n        /** @type {?} */\n        const dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    }\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    _createProxyClass(baseType, name) {\n        /** @type {?} */\n        let delegate = null;\n        /** @type {?} */\n        const proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(`Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = (d) => {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    }\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    getGeneratedClass(dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getComponentViewClass(dirType) {\n        return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getHostComponentViewClass(dirType) {\n        return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getHostComponentType(dirType) {\n        /** @type {?} */\n        const name = `${cpl.identifierName({ reference: dirType })}_Host`;\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            /** @type {?} */\n            const HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getRendererType(dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    }\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    getComponentFactory(selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n        }\n        else {\n            /** @type {?} */\n            const hostView = this.getHostComponentViewClass(dirType);\n            /** @type {?} */\n            const createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    }\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    initComponentFactory(factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (/** @type {?} */ (factory)).ngContentSelectors.push(...ngContentSelectors);\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    _loadSummary(type, kind) {\n        /** @type {?} */\n        let typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            /** @type {?} */\n            const summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    }\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    getHostComponentMetadata(compMeta, hostViewType) {\n        /** @type {?} */\n        const hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        /** @type {?} */\n        const template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        /** @type {?} */\n        const templateUrl = '';\n        /** @type {?} */\n        const htmlAst = this._htmlParser.parse(template, templateUrl);\n        return cpl.CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new cpl.CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template,\n                templateUrl,\n                htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    }\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    loadDirectiveMetadata(ngModuleType, directiveType, isSync) {\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        const { annotation, metadata } = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType)));\n        /** @type {?} */\n        const createDirectiveMetadata = (templateMetadata) => {\n            /** @type {?} */\n            const normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            this._directiveCache.set(directiveType, normalizedDirMeta);\n            this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            /** @type {?} */\n            const template = /** @type {?} */ ((metadata.template));\n            /** @type {?} */\n            const templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    }\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    getNonNormalizedDirectiveMetadata(directiveType) {\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        /** @type {?} */\n        let cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        /** @type {?} */\n        const dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        /** @type {?} */\n        let nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            /** @type {?} */\n            const compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            /** @type {?} */\n            const animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        /** @type {?} */\n        let changeDetectionStrategy = /** @type {?} */ ((null));\n        /** @type {?} */\n        let viewProviders = [];\n        /** @type {?} */\n        let entryComponentMetadata = [];\n        /** @type {?} */\n        let selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            /** @type {?} */\n            const compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map((type) => /** @type {?} */ ((this._getEntryComponentMetadata(type))))\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(`Directive ${stringifyType(directiveType)} has no selector, please add it!`), directiveType);\n                selector = 'error';\n            }\n        }\n        /** @type {?} */\n        let providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n        }\n        /** @type {?} */\n        let queries = [];\n        /** @type {?} */\n        let viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        /** @type {?} */\n        const metadata = cpl.CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    }\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    getDirectiveMetadata(directiveType) {\n        /** @type {?} */\n        const dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(`Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`), directiveType);\n        }\n        return dirMeta;\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getDirectiveSummary(dirType) {\n        /** @type {?} */\n        const dirSummary = /** @type {?} */ (this._loadSummary(dirType, cpl.CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(`Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`), dirType);\n        }\n        return dirSummary;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isDirective(type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isPipe(type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isNgModule(type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    getNgModuleSummary(moduleType, alreadyCollecting = null) {\n        /** @type {?} */\n        let moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            /** @type {?} */\n            const moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    }\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    loadNgModuleDirectiveAndPipeMetadata(moduleType, isSync, throwIfNotFound = true) {\n        /** @type {?} */\n        const ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        /** @type {?} */\n        const loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach((id) => {\n                /** @type {?} */\n                const promise = this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n        }\n        return Promise.all(loading);\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    getShallowModuleMetadata(moduleType) {\n        /** @type {?} */\n        let compileMeta = this._shallowModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        /** @type {?} */\n        const ngModuleMeta = findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n        compileMeta = {\n            type: this._getTypeMetadata(moduleType),\n            rawExports: ngModuleMeta.exports,\n            rawImports: ngModuleMeta.imports,\n            rawProviders: ngModuleMeta.providers,\n        };\n        this._shallowModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    getNgModuleMetadata(moduleType, throwIfNotFound = true, alreadyCollecting = null) {\n        moduleType = resolveForwardRef(moduleType);\n        /** @type {?} */\n        let compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        /** @type {?} */\n        const meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        /** @type {?} */\n        const declaredDirectives = [];\n        /** @type {?} */\n        const exportedNonModuleIdentifiers = [];\n        /** @type {?} */\n        const declaredPipes = [];\n        /** @type {?} */\n        const importedModules = [];\n        /** @type {?} */\n        const exportedModules = [];\n        /** @type {?} */\n        const providers = [];\n        /** @type {?} */\n        const entryComponents = [];\n        /** @type {?} */\n        const bootstrapComponents = [];\n        /** @type {?} */\n        const schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n                /** @type {?} */\n                let importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    /** @type {?} */\n                    const moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push(...this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, `provider for the NgModule '${stringifyType(importedModuleType)}'`, [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        this._reportError(syntaxError(`${this._getTypeDescriptor(importedModuleType)} '${stringifyType(importedType)}' is imported recursively by the module '${stringifyType(moduleType)}'.`), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    /** @type {?} */\n                    const importedModuleSummary = this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        this._reportError(syntaxError(`Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'. Please add a @NgModule annotation.`), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n                if (!isValidType(exportedType)) {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    this._reportError(syntaxError(`${this._getTypeDescriptor(exportedType)} '${stringify(exportedType)}' is exported recursively by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                /** @type {?} */\n                const exportedModuleSummary = this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        /** @type {?} */\n        const transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n                if (!isValidType(declaredType)) {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                /** @type {?} */\n                const declaredIdentifier = this._getIdentifierMetadata(declaredType);\n                if (this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    this._reportError(syntaxError(`Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`), moduleType);\n                    return;\n                }\n            });\n        }\n        /** @type {?} */\n        const exportedDirectives = [];\n        /** @type {?} */\n        const exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach((exportedId) => {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                this._reportError(syntaxError(`Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push(...this._getProvidersMetadata(meta.providers, entryComponents, `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                .map(type => /** @type {?} */ ((this._getEntryComponentMetadata(type)))));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n                if (!isValidType(type)) {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push(...bootstrapComponents.map(type => /** @type {?} */ ((this._getEntryComponentMetadata(type.reference)))));\n        if (meta.schemas) {\n            schemas.push(...flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new cpl.CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers,\n            entryComponents,\n            bootstrapComponents,\n            schemas,\n            declaredDirectives,\n            exportedDirectives,\n            declaredPipes,\n            exportedPipes,\n            importedModules,\n            exportedModules,\n            transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n        providers.forEach((provider) => transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type));\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    _checkSelfImport(moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(`'${stringifyType(moduleType)}' module can't import itself`), moduleType);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _getTypeDescriptor(type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    }\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    _addTypeToModule(type, moduleType) {\n        /** @type {?} */\n        const oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(`Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n                `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n                `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    }\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    _getTransitiveNgModuleMetadata(importedModules, exportedModules) {\n        /** @type {?} */\n        const result = new cpl.TransitiveCompileNgModuleMetadata();\n        /** @type {?} */\n        const modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach((modSummary) => {\n            modSummary.modules.forEach((mod) => result.addModule(mod));\n            modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n            /** @type {?} */\n            const addedTokens = new Set();\n            modSummary.providers.forEach((entry) => {\n                /** @type {?} */\n                const tokenRef = cpl.tokenReference(entry.provider.token);\n                /** @type {?} */\n                let prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                /** @type {?} */\n                const moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach((modSummary) => {\n            modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n            modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n        });\n        importedModules.forEach((modSummary) => {\n            modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n            modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n        });\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _getIdentifierMetadata(type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isInjectable(type) {\n        /** @type {?} */\n        const annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(ann => createInjectable.isTypeOf(ann));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getInjectableSummary(type) {\n        return {\n            summaryKind: cpl.CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    }\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    getInjectableMetadata(type, dependencies = null, throwOnUnknownDeps = true) {\n        /** @type {?} */\n        const typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        /** @type {?} */\n        const typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        /** @type {?} */\n        const annotations = this._reflector.annotations(type).filter(ann => createInjectable.isTypeOf(ann));\n        if (annotations.length === 0) {\n            return null;\n        }\n        /** @type {?} */\n        const meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            providedIn: meta.providedIn,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    }\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    _getTypeMetadata(type, dependencies = null, throwOnUnknownDeps = true) {\n        /** @type {?} */\n        const identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    }\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    _getFactoryMetadata(factory, dependencies = null) {\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    }\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    getPipeMetadata(pipeType) {\n        /** @type {?} */\n        const pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(`Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`), pipeType);\n        }\n        return pipeMeta || null;\n    }\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    getPipeSummary(pipeType) {\n        /** @type {?} */\n        const pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(`Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`), pipeType);\n        }\n        return pipeSummary;\n    }\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    getOrLoadPipeMetadata(pipeType) {\n        /** @type {?} */\n        let pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    }\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    _loadPipeMetadata(pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        /** @type {?} */\n        const pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        /** @type {?} */\n        const pipeMeta = new cpl.CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    _getDependenciesMetadata(typeOrFunc, dependencies, throwOnUnknownDeps = true) {\n        /** @type {?} */\n        let hasUnknownDeps = false;\n        /** @type {?} */\n        const params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        /** @type {?} */\n        const dependenciesMetadata = params.map((param) => {\n            /** @type {?} */\n            let isAttribute = false;\n            /** @type {?} */\n            let isHost = false;\n            /** @type {?} */\n            let isSelf = false;\n            /** @type {?} */\n            let isSkipSelf = false;\n            /** @type {?} */\n            let isOptional = false;\n            /** @type {?} */\n            let token = null;\n            if (Array.isArray(param)) {\n                param.forEach((paramEntry) => {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute,\n                isHost,\n                isSelf,\n                isSkipSelf,\n                isOptional,\n                token: this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            /** @type {?} */\n            const depsTokens = dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n            /** @type {?} */\n            const message = `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`;\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(`Warning: ${message} This will become an error in Angular v6.x`);\n            }\n        }\n        return dependenciesMetadata;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _getTokenMetadata(token) {\n        token = resolveForwardRef(token);\n        /** @type {?} */\n        let compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    }\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    _getProvidersMetadata(providers, targetEntryComponents, debugInfo, compileProviders = [], type) {\n        providers.forEach((provider, providerIdx) => {\n            if (Array.isArray(provider)) {\n                this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                /** @type {?} */\n                let providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    this._validateProvider(provider);\n                    providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new cpl.ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    this._reportError(syntaxError(`Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.`));\n                    return;\n                }\n                else {\n                    /** @type {?} */\n                    const providersInfo = (/** @type {?} */ (providers.reduce((soFar, seenProvider, seenProviderIdx) => {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(`${stringifyType(seenProvider)}`);\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(`?${stringifyType(seenProvider)}?`);\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    this._reportError(syntaxError(`Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _validateProvider(provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(`Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n        }\n    }\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    _getEntryComponentsFromProvider(provider, type) {\n        /** @type {?} */\n        const components = [];\n        /** @type {?} */\n        const collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach((identifier) => {\n            /** @type {?} */\n            const entry = this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    }\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    _getEntryComponentMetadata(dirType, throwIfNotFound = true) {\n        /** @type {?} */\n        const dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        /** @type {?} */\n        const dirSummary = /** @type {?} */ (this._loadSummary(dirType, cpl.CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    _getInjectableTypeMetadata(type, dependencies = null) {\n        /** @type {?} */\n        const typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    getProviderMetadata(provider) {\n        /** @type {?} */\n        let compileDeps = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        let compileTypeMetadata = /** @type {?} */ ((null));\n        /** @type {?} */\n        let compileFactoryMetadata = /** @type {?} */ ((null));\n        /** @type {?} */\n        let token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    }\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    _getQueriesMetadata(queries, isViewQuery, directiveType) {\n        /** @type {?} */\n        const res = [];\n        Object.keys(queries).forEach((propertyName) => {\n            /** @type {?} */\n            const query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    _queryVarBindings(selector) { return selector.split(/\\s*,\\s*/); }\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    _getQueryMetadata(q, propertyName, typeOrFunc) {\n        /** @type {?} */\n        let selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(`Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    }\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    _reportError(error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._directiveCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._summaryCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._pipeCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._ngModuleCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._ngModuleOfTypes;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._shallowModuleCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._config;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._htmlParser;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._ngModuleResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._directiveResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._pipeResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._summaryResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._schemaRegistry;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._directiveNormalizer;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._console;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._staticSymbolCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._reflector;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._errorCollector;\n}\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out = []) {\n    if (tree) {\n        for (let i = 0; i < tree.length; i++) {\n            /** @type {?} */\n            const item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    visitOther(value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return `${type.name} in ${type.filePath}`;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    /** @type {?} */\n    const error = Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n//# sourceMappingURL=metadata_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { tokenName, tokenReference } from './compile_metadata';\nimport { Identifiers, createTokenForExternalReference } from './identifiers';\nimport { ParseError } from './parse_util';\nimport { ProviderAst, ProviderAstType } from './template_parser/template_ast';\nexport class ProviderError extends ParseError {\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    constructor(message, span) { super(span, message); }\n}\n/**\n * @record\n */\nexport function QueryWithId() { }\n/** @type {?} */\nQueryWithId.prototype.meta;\n/** @type {?} */\nQueryWithId.prototype.queryId;\nexport class ProviderViewContext {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    constructor(reflector, component) {\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach((provider) => {\n            if (this.viewProviders.get(tokenReference(provider.token)) == null) {\n                this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n}\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ProviderViewContext.prototype.viewQueries;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ProviderViewContext.prototype.viewProviders;\n    /** @type {?} */\n    ProviderViewContext.prototype.errors;\n    /** @type {?} */\n    ProviderViewContext.prototype.reflector;\n    /** @type {?} */\n    ProviderViewContext.prototype.component;\n}\nexport class ProviderElementContext {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    constructor(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach((attrAst) => this._attrs[attrAst.name] = attrAst.value);\n        /** @type {?} */\n        const directivesMeta = _directiveAsts.map(directiveAst => directiveAst.directive);\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            this._addQueryReadsTo(provider.token, provider.token, this._queriedTokens);\n        });\n        if (isTemplate) {\n            /** @type {?} */\n            const templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach((refAst) => {\n            /** @type {?} */\n            let defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(this.viewContext.reflector, Identifiers.ElementRef);\n            this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            /** @type {?} */\n            const eager = provider.eager || this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    afterElement() {\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get transformProviders() {\n        /** @type {?} */\n        const lazyProviders = [];\n        /** @type {?} */\n        const eagerProviders = [];\n        this._transformedProviders.forEach(provider => {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    }\n    /**\n     * @return {?}\n     */\n    get transformedDirectiveAsts() {\n        /** @type {?} */\n        const sortedProviderTypes = this.transformProviders.map(provider => provider.token.identifier);\n        /** @type {?} */\n        const sortedDirectives = this._directiveAsts.slice();\n        sortedDirectives.sort((dir1, dir2) => sortedProviderTypes.indexOf(dir1.directive.type) -\n            sortedProviderTypes.indexOf(dir2.directive.type));\n        return sortedDirectives;\n    }\n    /**\n     * @return {?}\n     */\n    get queryMatches() {\n        /** @type {?} */\n        const allMatches = [];\n        this._queriedTokens.forEach((matches) => { allMatches.push(...matches); });\n        return allMatches;\n    }\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    _addQueryReadsTo(token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach((query) => {\n            /** @type {?} */\n            const queryValue = query.meta.read || defaultValue;\n            /** @type {?} */\n            const tokenRef = tokenReference(queryValue);\n            /** @type {?} */\n            let queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _getQueriesFor(token) {\n        /** @type {?} */\n        const result = [];\n        /** @type {?} */\n        let currentEl = this;\n        /** @type {?} */\n        let distance = 0;\n        /** @type {?} */\n        let queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push(...queries.filter((query) => query.meta.descendants || distance <= 1));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push(...queries);\n        }\n        return result;\n    }\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    _getOrCreateLocalProvider(requestingProviderType, token, eager) {\n        /** @type {?} */\n        const resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        /** @type {?} */\n        let transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(`Cannot instantiate cyclic dependency! ${tokenName(token)}`, this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        /** @type {?} */\n        const transformedProviders = resolvedProvider.providers.map((provider) => {\n            /** @type {?} */\n            let transformedUseValue = provider.useValue;\n            /** @type {?} */\n            let transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            /** @type {?} */\n            let transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                /** @type {?} */\n                const existingDiDep = /** @type {?} */ ((this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                /** @type {?} */\n                const deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map((dep) => /** @type {?} */ ((this._getDependency(resolvedProvider.providerType, dep, eager))));\n            }\n            else if (provider.useClass) {\n                /** @type {?} */\n                const deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map((dep) => /** @type {?} */ ((this._getDependency(resolvedProvider.providerType, dep, eager))));\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    }\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    _getLocalDependency(requestingProviderType, dep, eager = false) {\n        if (dep.isAttribute) {\n            /** @type {?} */\n            const attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    _getDependency(requestingProviderType, dep, eager = false) {\n        /** @type {?} */\n        let currElement = this;\n        /** @type {?} */\n        let currEager = eager;\n        /** @type {?} */\n        let result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                /** @type {?} */\n                const prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(`No provider for ${tokenName((/** @type {?} */ ((dep.token))))}`, this._sourceSpan));\n        }\n        return result;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ProviderElementContext.prototype._contentQueries;\n    /** @type {?} */\n    ProviderElementContext.prototype._transformedProviders;\n    /** @type {?} */\n    ProviderElementContext.prototype._seenProviders;\n    /** @type {?} */\n    ProviderElementContext.prototype._allProviders;\n    /** @type {?} */\n    ProviderElementContext.prototype._attrs;\n    /** @type {?} */\n    ProviderElementContext.prototype._queriedTokens;\n    /** @type {?} */\n    ProviderElementContext.prototype.transformedHasViewContainer;\n    /** @type {?} */\n    ProviderElementContext.prototype.viewContext;\n    /** @type {?} */\n    ProviderElementContext.prototype._parent;\n    /** @type {?} */\n    ProviderElementContext.prototype._isViewRoot;\n    /** @type {?} */\n    ProviderElementContext.prototype._directiveAsts;\n    /** @type {?} */\n    ProviderElementContext.prototype._sourceSpan;\n}\nexport class NgModuleProviderAnalyzer {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    constructor(reflector, ngModule, extraProviders, sourceSpan) {\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach((ngModuleType) => {\n            /** @type {?} */\n            const ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, this._errors, this._allProviders, /* isModule */ /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(entry => entry.provider).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, /* isModule */ false);\n    }\n    /**\n     * @return {?}\n     */\n    parse() {\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            /** @type {?} */\n            const errorString = this._errors.join('\\n');\n            throw new Error(`Provider parse errors:\\n${errorString}`);\n        }\n        /** @type {?} */\n        const lazyProviders = [];\n        /** @type {?} */\n        const eagerProviders = [];\n        this._transformedProviders.forEach(provider => {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    }\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    _getOrCreateLocalProvider(token, eager) {\n        /** @type {?} */\n        const resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        /** @type {?} */\n        let transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(`Cannot instantiate cyclic dependency! ${tokenName(token)}`, resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        /** @type {?} */\n        const transformedProviders = resolvedProvider.providers.map((provider) => {\n            /** @type {?} */\n            let transformedUseValue = provider.useValue;\n            /** @type {?} */\n            let transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            /** @type {?} */\n            let transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                /** @type {?} */\n                const existingDiDep = this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                /** @type {?} */\n                const deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n            }\n            else if (provider.useClass) {\n                /** @type {?} */\n                const deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    }\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    _getDependency(dep, eager = false, requestorSourceSpan) {\n        /** @type {?} */\n        let foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        return dep;\n    }\n}\nif (false) {\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._transformedProviders;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._seenProviders;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._allProviders;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._errors;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype.reflector;\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, { useExisting, useValue, deps }) {\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, { eager, providers }) {\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    /** @type {?} */\n    const providersByToken = new Map();\n    directives.forEach((directive) => {\n        /** @type {?} */\n        const dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    /** @type {?} */\n    const directivesWithComponentFirst = directives.filter(dir => dir.isComponent).concat(directives.filter(dir => !dir.isComponent));\n    directivesWithComponentFirst.forEach((directive) => {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @param {?} isModule\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach((provider) => {\n        /** @type {?} */\n        let resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(`Mixing multi and non multi provider is not possible for token ${tokenName(resolvedProvider.token)}`, sourceSpan));\n        }\n        if (!resolvedProvider) {\n            /** @type {?} */\n            const lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            /** @type {?} */\n            const isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    /** @type {?} */\n    let viewQueryId = 1;\n    /** @type {?} */\n    const viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach((query) => _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }));\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    /** @type {?} */\n    let contentQueryId = contentQueryStartId;\n    /** @type {?} */\n    const contentQueries = new Map();\n    directives.forEach((directive, directiveIndex) => {\n        if (directive.queries) {\n            directive.queries.forEach((query) => _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }));\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach((token) => {\n        /** @type {?} */\n        let entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n//# sourceMappingURL=provider_analyzer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ProviderAstType } from '../template_parser/template_ast';\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nexport function providerDef(ctx, providerAst) {\n    /** @type {?} */\n    let flags = 0 /* None */;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    const { providerExpr, flags: providerFlags, depsExpr } = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]);\n    return {\n        providerExpr,\n        flags: providerFlags, depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    /** @type {?} */\n    const allDepDefs = [];\n    /** @type {?} */\n    const allParams = [];\n    /** @type {?} */\n    const exprs = providers.map((provider, providerIndex) => {\n        /** @type {?} */\n        let expr;\n        if (provider.useClass) {\n            /** @type {?} */\n            const depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            /** @type {?} */\n            const depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            /** @type {?} */\n            const depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    /** @type {?} */\n    const providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))], o.INFERRED_TYPE);\n    return {\n        providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: o.literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map((dep, depIndex) => {\n            /** @type {?} */\n            const paramName = `p${providerIndex}_${depIndex}`;\n            allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return o.variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    /** @type {?} */\n    let providerExpr;\n    /** @type {?} */\n    let deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = o.NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    /** @type {?} */\n    const depsExpr = o.literalArr(deps.map(dep => depDef(ctx, dep)));\n    return { providerExpr, flags, depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        o.literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nexport function depDef(ctx, dep) {\n    /** @type {?} */\n    const expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    /** @type {?} */\n    let flags = 0 /* None */;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : o.literalArr([o.literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nexport function lifecycleHookToNodeFlag(lifecycleHook) {\n    /** @type {?} */\n    let nodeFlag = 0 /* None */;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nexport function componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    /** @type {?} */\n    const entryComponentFactories = entryComponents.map((entryComponent) => ctx.importExpr(entryComponent.componentFactory));\n    /** @type {?} */\n    const token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    /** @type {?} */\n    const classMeta = {\n        diDeps: [\n            { isValue: true, value: o.literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    const { providerExpr, flags: providerFlags, depsExpr } = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token,\n        multi: false,\n        useClass: classMeta,\n    });\n    return { providerExpr, flags: providerFlags, depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n//# sourceMappingURL=provider_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { typeSourceSpan } from './parse_util';\nimport { NgModuleProviderAnalyzer } from './provider_analyzer';\nimport { componentFactoryResolverProviderDef, providerDef } from './view_compiler/provider_compiler';\nexport class NgModuleCompileResult {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    constructor(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n}\nif (false) {\n    /** @type {?} */\n    NgModuleCompileResult.prototype.ngModuleFactoryVar;\n}\n/** @type {?} */\nconst LOG_VAR = o.variable('_l');\nexport class NgModuleCompiler {\n    /**\n     * @param {?} reflector\n     */\n    constructor(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    compile(ctx, ngModuleMeta, extraProviders) {\n        /** @type {?} */\n        const sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        /** @type {?} */\n        const entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        /** @type {?} */\n        const bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        /** @type {?} */\n        const providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        /** @type {?} */\n        const providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map((provider) => providerDef(ctx, provider)))\n            .map(({ providerExpr, depsExpr, flags, tokenExpr }) => {\n            return o.importExpr(Identifiers.moduleProviderDef).callFn([\n                o.literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        /** @type {?} */\n        const ngModuleDef = o.importExpr(Identifiers.moduleDef).callFn([o.literalArr(providerDefs)]);\n        /** @type {?} */\n        const ngModuleDefFactory = o.fn([new o.FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new o.ReturnStatement(ngModuleDef)], o.INFERRED_TYPE);\n        /** @type {?} */\n        const ngModuleFactoryVar = `${identifierName(ngModuleMeta.type)}NgFactory`;\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, o.importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            o.literalArr(bootstrapComponents.map(id => ctx.importExpr(id.reference))),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            /** @type {?} */\n            const id = typeof ngModuleMeta.id === 'string' ? o.literal(ngModuleMeta.id) :\n                ctx.importExpr(ngModuleMeta.id);\n            /** @type {?} */\n            const registerFactoryStmt = o.importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([id, o.variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    createStub(ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, o.NULL_EXPR);\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    _createNgModuleFactory(ctx, reference, value) {\n        /** @type {?} */\n        const ngModuleFactoryVar = `${identifierName({ reference: reference })}NgFactory`;\n        /** @type {?} */\n        const ngModuleFactoryStmt = o.variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(o.importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((o.expressionType(ctx.importExpr(reference))))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    }\n}\nif (false) {\n    /** @type {?} */\n    NgModuleCompiler.prototype.reflector;\n}\n//# sourceMappingURL=ng_module_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createNgModule } from './core';\nimport { findLast } from './directive_resolver';\nimport { stringify } from './util';\n/**\n * Resolves types to {\\@link NgModule}.\n */\nexport class NgModuleResolver {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isNgModule(type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); }\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    resolve(type, throwIfNotFound = true) {\n        /** @type {?} */\n        const ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(`No NgModule metadata found for '${stringify(type)}'.`);\n            }\n            return null;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NgModuleResolver.prototype._reflector;\n}\n//# sourceMappingURL=ng_module_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { utf8Encode } from '../util';\n/** @type {?} */\nconst VERSION = 3;\n/** @type {?} */\nconst JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\n/** @typedef {?} */\nvar Segment;\n/** @typedef {?} */\nvar SourceMap;\nexport { SourceMap };\nexport class SourceMapGenerator {\n    /**\n     * @param {?=} file\n     */\n    constructor(file = null) {\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    addSource(url, content = null) {\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    addLine() {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    }\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    addMapping(col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(`A line must be added before mappings can be added`);\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(`Unknown source file \"${sourceUrl}\"`);\n        }\n        if (col0 == null) {\n            throw new Error(`The column in the generated code must be provided`);\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(`Mapping should be added in output order`);\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(`The source location must be provided when a source url is provided`);\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0, sourceUrl, sourceLine0, sourceCol0 });\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    get currentLine() { return this.lines.slice(-1)[0]; }\n    /**\n     * @return {?}\n     */\n    toJSON() {\n        if (!this.hasMappings) {\n            return null;\n        }\n        /** @type {?} */\n        const sourcesIndex = new Map();\n        /** @type {?} */\n        const sources = [];\n        /** @type {?} */\n        const sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach((url, i) => {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(this.sourcesContent.get(url) || null);\n        });\n        /** @type {?} */\n        let mappings = '';\n        /** @type {?} */\n        let lastCol0 = 0;\n        /** @type {?} */\n        let lastSourceIndex = 0;\n        /** @type {?} */\n        let lastSourceLine0 = 0;\n        /** @type {?} */\n        let lastSourceCol0 = 0;\n        this.lines.forEach(segments => {\n            lastCol0 = 0;\n            mappings += segments\n                .map(segment => {\n                /** @type {?} */\n                let segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    }\n    /**\n     * @return {?}\n     */\n    toJsComment() {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    }\n}\nif (false) {\n    /** @type {?} */\n    SourceMapGenerator.prototype.sourcesContent;\n    /** @type {?} */\n    SourceMapGenerator.prototype.lines;\n    /** @type {?} */\n    SourceMapGenerator.prototype.lastCol0;\n    /** @type {?} */\n    SourceMapGenerator.prototype.hasMappings;\n    /** @type {?} */\n    SourceMapGenerator.prototype.file;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function toBase64String(value) {\n    /** @type {?} */\n    let b64 = '';\n    value = utf8Encode(value);\n    for (let i = 0; i < value.length;) {\n        /** @type {?} */\n        const i1 = value.charCodeAt(i++);\n        /** @type {?} */\n        const i2 = value.charCodeAt(i++);\n        /** @type {?} */\n        const i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    /** @type {?} */\n    let out = '';\n    do {\n        /** @type {?} */\n        let digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\n/** @type {?} */\nconst B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(`Can only encode value in the range [0, 63]`);\n    }\n    return B64_DIGITS[value];\n}\n//# sourceMappingURL=source_map.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { SourceMapGenerator } from './source_map';\n/** @type {?} */\nconst _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n/** @type {?} */\nconst _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n/** @type {?} */\nconst _INDENT_WITH = '  ';\n/** @type {?} */\nexport const CATCH_ERROR_VAR = o.variable('error', null, null);\n/** @type {?} */\nexport const CATCH_STACK_VAR = o.variable('stack', null, null);\n/**\n * @record\n */\nexport function OutputEmitter() { }\n/** @type {?} */\nOutputEmitter.prototype.emitStatements;\nclass _EmittedLine {\n    /**\n     * @param {?} indent\n     */\n    constructor(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    _EmittedLine.prototype.partsLength;\n    /** @type {?} */\n    _EmittedLine.prototype.parts;\n    /** @type {?} */\n    _EmittedLine.prototype.srcSpans;\n    /** @type {?} */\n    _EmittedLine.prototype.indent;\n}\nexport class EmitterVisitorContext {\n    /**\n     * @param {?} _indent\n     */\n    constructor(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    static createRoot() { return new EmitterVisitorContext(0); }\n    /**\n     * @return {?}\n     */\n    get _currentLine() { return this._lines[this._lines.length - 1]; }\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    println(from, lastPart = '') {\n        this.print(from || null, lastPart, true);\n    }\n    /**\n     * @return {?}\n     */\n    lineIsEmpty() { return this._currentLine.parts.length === 0; }\n    /**\n     * @return {?}\n     */\n    lineLength() {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    }\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    print(from, part, newLine = false) {\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    removeEmptyLastLine() {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    incIndent() {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    decIndent() {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    }\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    pushClass(clazz) { this._classes.push(clazz); }\n    /**\n     * @return {?}\n     */\n    popClass() { return /** @type {?} */ ((this._classes.pop())); }\n    /**\n     * @return {?}\n     */\n    get currentClass() {\n        return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n    }\n    /**\n     * @return {?}\n     */\n    toSource() {\n        return this.sourceLines\n            .map(l => l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : '')\n            .join('\\n');\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    toSourceMapGenerator(genFilePath, startsAtLine = 0) {\n        /** @type {?} */\n        const map = new SourceMapGenerator(genFilePath);\n        /** @type {?} */\n        let firstOffsetMapped = false;\n        /** @type {?} */\n        const mapFirstOffsetIfNeeded = () => {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (let i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach((line, lineIdx) => {\n            map.addLine();\n            /** @type {?} */\n            const spans = line.srcSpans;\n            /** @type {?} */\n            const parts = line.parts;\n            /** @type {?} */\n            let col0 = line.indent * _INDENT_WITH.length;\n            /** @type {?} */\n            let spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                /** @type {?} */\n                const span = /** @type {?} */ ((spans[spanIdx]));\n                /** @type {?} */\n                const source = span.start.file;\n                /** @type {?} */\n                const sourceLine = span.start.line;\n                /** @type {?} */\n                const sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    setPreambleLineCount(count) { return this._preambleLineCount = count; }\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    spanOf(line, column) {\n        /** @type {?} */\n        const emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            /** @type {?} */\n            let columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (let partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                /** @type {?} */\n                const part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    get sourceLines() {\n        if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n            return this._lines.slice(0, -1);\n        }\n        return this._lines;\n    }\n}\nif (false) {\n    /** @type {?} */\n    EmitterVisitorContext.prototype._lines;\n    /** @type {?} */\n    EmitterVisitorContext.prototype._classes;\n    /** @type {?} */\n    EmitterVisitorContext.prototype._preambleLineCount;\n    /** @type {?} */\n    EmitterVisitorContext.prototype._indent;\n}\n/**\n * @abstract\n */\nexport class AbstractEmitterVisitor {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    constructor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReturnStmt(stmt, ctx) {\n        ctx.print(stmt, `return `);\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitIfStmt(stmt, ctx) {\n        ctx.print(stmt, `if (`);\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, `) {`);\n        /** @type {?} */\n        const hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, ` `);\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, ` `);\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, `} else {`);\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitThrowStmt(stmt, ctx) {\n        ctx.print(stmt, `throw `);\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, `;`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCommentStmt(stmt, ctx) {\n        if (stmt.multiline) {\n            ctx.println(stmt, `/* ${stmt.comment} */`);\n        }\n        else {\n            stmt.comment.split('\\n').forEach((line) => { ctx.println(stmt, `// ${line}`); });\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitJSDocCommentStmt(stmt, ctx) {\n        ctx.println(stmt, `/*${stmt.toString()}*/`);\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, ctx) {\n        /** @type {?} */\n        const lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, `${expr.name} = `);\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, ctx) {\n        /** @type {?} */\n        const lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, `[`);\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, `] = `);\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWritePropExpr(expr, ctx) {\n        /** @type {?} */\n        const lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, `.${expr.name} = `);\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeMethodExpr(expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        /** @type {?} */\n        let name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, `.${name}(`);\n        this.visitAllExpressions(expr.args, ctx, `,`);\n        ctx.print(expr, `)`);\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, `(`);\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, ctx) {\n        throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTypeofExpr(expr, ctx) {\n        ctx.print(expr, 'typeof ');\n        expr.expr.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadVarExpr(ast, ctx) {\n        /** @type {?} */\n        let varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case o.BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case o.BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR.name));\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR.name));\n                    break;\n                default:\n                    throw new Error(`Unknown builtin variable ${ast.builtin}`);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, ctx) {\n        ctx.print(ast, `new `);\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, `(`);\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralExpr(ast, ctx) {\n        /** @type {?} */\n        const value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, `${value}`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitConditionalExpr(ast, ctx) {\n        ctx.print(ast, `(`);\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitNotExpr(ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, ctx) {\n        /** @type {?} */\n        let opStr;\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case o.BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case o.BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case o.BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case o.BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case o.BinaryOperator.BitwiseAnd:\n                opStr = '&';\n                break;\n            case o.BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case o.BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case o.BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case o.BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case o.BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case o.BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case o.BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case o.BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case o.BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case o.BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(`Unknown operator ${ast.operator}`);\n        }\n        if (ast.parens)\n            ctx.print(ast, `(`);\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, ` ${opStr} `);\n        ast.rhs.visitExpression(this, ctx);\n        if (ast.parens)\n            ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadPropExpr(ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, `.`);\n        ctx.print(ast, ast.name);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, `[`);\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, `]`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, ctx) {\n        ctx.print(ast, `[`);\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, `]`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, ctx) {\n        ctx.print(ast, `{`);\n        this.visitAllObjects(entry => {\n            ctx.print(ast, `${escapeIdentifier(entry.key, this._escapeDollarInStrings, entry.quoted)}:`);\n            entry.value.visitExpression(this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, `}`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCommaExpr(ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    }\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    visitAllExpressions(expressions, ctx, separator) {\n        this.visitAllObjects(expr => expr.visitExpression(this, ctx), expressions, ctx, separator);\n    }\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    visitAllObjects(handler, expressions, ctx, separator) {\n        /** @type {?} */\n        let incrementedIndent = false;\n        for (let i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    }\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAllStatements(statements, ctx) {\n        statements.forEach((stmt) => stmt.visitStatement(this, ctx));\n    }\n}\nif (false) {\n    /** @type {?} */\n    AbstractEmitterVisitor.prototype._escapeDollarInStrings;\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n}\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nexport function escapeIdentifier(input, escapeDollar, alwaysQuote = true) {\n    if (input == null) {\n        return null;\n    }\n    /** @type {?} */\n    const body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, (...match) => {\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return `\\\\${match[0]}`;\n        }\n    });\n    /** @type {?} */\n    const requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? `'${body}'` : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n//# sourceMappingURL=abstract_emitter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext } from './abstract_emitter';\nimport * as o from './output_ast';\n/** @type {?} */\nconst _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function debugOutputAstAsTypeScript(ast) {\n    /** @type {?} */\n    const converter = new _TsEmitterVisitor();\n    /** @type {?} */\n    const ctx = EmitterVisitorContext.createRoot();\n    /** @type {?} */\n    const asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach((ast) => {\n        if (ast instanceof o.Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof o.Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof o.Type) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(`Don't know how to print debug info for ${ast}`);\n        }\n    });\n    return ctx.toSource();\n}\n/** @typedef {?} */\nvar ReferenceFilter;\nexport { ReferenceFilter };\nexport class TypeScriptEmitter {\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    emitStatementsAndContext(genFilePath, stmts, preamble = '', emitSourceMaps = true, referenceFilter, importFilter) {\n        /** @type {?} */\n        const converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        /** @type {?} */\n        const ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        /** @type {?} */\n        const preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach((reexports, exportedModuleName) => {\n            /** @type {?} */\n            const reexportsCode = reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n            preambleLines.push(`export {${reexportsCode}} from '${exportedModuleName}';`);\n        });\n        converter.importsWithPrefixes.forEach((prefix, importedModuleName) => {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(`imp` +\n                `ort * as ${prefix} from '${importedModuleName}';`);\n        });\n        /** @type {?} */\n        const sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        /** @type {?} */\n        const lines = [...preambleLines, ctx.toSource(), sm];\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    emitStatements(genFilePath, stmts, preamble = '') {\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    }\n}\nclass _TsEmitterVisitor extends AbstractEmitterVisitor {\n    /**\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     */\n    constructor(referenceFilter, importFilter) {\n        super(false);\n        this.referenceFilter = referenceFilter;\n        this.importFilter = importFilter;\n        this.typeExpression = 0;\n        this.importsWithPrefixes = new Map();\n        this.reexports = new Map();\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    visitType(t, ctx, defaultType = 'any') {\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralExpr(ast, ctx) {\n        /** @type {?} */\n        const value = ast.value;\n        if (value == null && ast.type != o.INFERRED_TYPE) {\n            ctx.print(ast, `(${value} as any)`);\n            return null;\n        }\n        return super.visitLiteralExpr(ast, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        /** @type {?} */\n        const result = super.visitLiteralArrayExpr(ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, ctx) {\n        /** @type {?} */\n        const result = super.visitAssertNotNullExpr(ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n            !stmt.type) {\n            const { name, moduleName } = stmt.value.value;\n            if (moduleName) {\n                /** @type {?} */\n                let reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, `export `);\n        }\n        if (stmt.hasModifier(o.StmtModifier.Final)) {\n            ctx.print(stmt, `const`);\n        }\n        else {\n            ctx.print(stmt, `var`);\n        }\n        ctx.print(stmt, ` ${stmt.name}`);\n        this._printColonType(stmt.type, ctx);\n        if (stmt.value) {\n            ctx.print(stmt, ` = `);\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, `;`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, ctx) {\n        throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCastExpr(ast, ctx) {\n        ctx.print(ast, `(<`); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, `>`);\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, ctx) {\n        ctx.print(ast, `new `);\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, `(`);\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, `export `);\n        }\n        ctx.print(stmt, `class ${stmt.name}`);\n        if (stmt.parent != null) {\n            ctx.print(stmt, ` extends `);\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, ` {`);\n        ctx.incIndent();\n        stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n        stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        ctx.popClass();\n        return null;\n    }\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassField(field, ctx) {\n        if (field.hasModifier(o.StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, `/*private*/ `);\n        }\n        if (field.hasModifier(o.StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, `;`);\n    }\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassGetter(getter, ctx) {\n        if (getter.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, `private `);\n        }\n        ctx.print(null, `get ${getter.name}()`);\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, ` {`);\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, `}`);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassConstructor(stmt, ctx) {\n        ctx.print(stmt, `constructor(`);\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n    }\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassMethod(method, ctx) {\n        if (method.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, `private `);\n        }\n        ctx.print(null, `${method.name}(`);\n        this._visitParams(method.params, ctx);\n        ctx.print(null, `)`);\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, ` {`);\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, `}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, `(`);\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, `)`);\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, ` => `);\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, `export `);\n        }\n        ctx.print(stmt, `function ${stmt.name}(`);\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, `)`);\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, ` {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) {\n        ctx.println(stmt, `try {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n        ctx.incIndent();\n        /** @type {?} */\n        const catchStmts = [/** @type {?} */ (CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitBuiltinType(type, ctx) {\n        /** @type {?} */\n        let typeStr;\n        switch (type.name) {\n            case o.BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case o.BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case o.BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case o.BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            case o.BuiltinTypeName.None:\n                typeStr = 'never';\n                break;\n            default:\n                throw new Error(`Unsupported builtin type ${type.name}`);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExpressionType(ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        if (ast.typeParams !== null) {\n            ctx.print(null, '<');\n            this.visitAllObjects(type => this.visitType(type, ctx), ast.typeParams, ctx, ',');\n            ctx.print(null, '>');\n        }\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitArrayType(type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, `[]`);\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitMapType(type, ctx) {\n        ctx.print(null, `{[key: string]:`);\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, `}`);\n        return null;\n    }\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    getBuiltinMethodName(method) {\n        /** @type {?} */\n        let name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(`Unknown builtin method: ${method}`);\n        }\n        return name;\n    }\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitParams(params, ctx) {\n        this.visitAllObjects(param => {\n            ctx.print(null, param.name);\n            this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    }\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitIdentifier(value, typeParams, ctx) {\n        const { name, moduleName } = value;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            /** @type {?} */\n            let prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = `i${this.importsWithPrefixes.size}`;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, `${prefix}.`);\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            /** @type {?} */\n            const suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, `<`);\n                this.visitAllObjects(type => type.visitType(this, ctx), /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, `>`);\n            }\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _printColonType(type, ctx, defaultType) {\n        if (type !== o.INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.typeExpression;\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.importsWithPrefixes;\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.reexports;\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.referenceFilter;\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.importFilter;\n}\n//# sourceMappingURL=ts_emitter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createPipe } from './core';\nimport { findLast } from './directive_resolver';\nimport { resolveForwardRef, stringify } from './util';\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nexport class PipeResolver {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isPipe(type) {\n        /** @type {?} */\n        const typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    }\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    resolve(type, throwIfNotFound = true) {\n        /** @type {?} */\n        const metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            /** @type {?} */\n            const annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(`No Pipe decorator found on ${stringify(type)}`);\n        }\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    PipeResolver.prototype._reflector;\n}\n//# sourceMappingURL=pipe_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '../core';\n/** *\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n  @type {?} */\nlet _SECURITY_SCHEMA;\n/**\n * @return {?}\n */\nexport function SECURITY_SCHEMA() {\n    if (!_SECURITY_SCHEMA) {\n        _SECURITY_SCHEMA = {};\n        // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n        registerContext(SecurityContext.HTML, [\n            'iframe|srcdoc',\n            '*|innerHTML',\n            '*|outerHTML',\n        ]);\n        registerContext(SecurityContext.STYLE, ['*|style']);\n        // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n        registerContext(SecurityContext.URL, [\n            '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n            'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n            'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n            'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n        ]);\n        registerContext(SecurityContext.RESOURCE_URL, [\n            'applet|code',\n            'applet|codebase',\n            'base|href',\n            'embed|src',\n            'frame|src',\n            'head|profile',\n            'html|manifest',\n            'iframe|src',\n            'link|href',\n            'media|src',\n            'object|codebase',\n            'object|data',\n            'script|src',\n        ]);\n    }\n    return _SECURITY_SCHEMA;\n}\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (const spec of specs)\n        _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n}\n//# sourceMappingURL=dom_security_schema.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nexport class ElementSchemaRegistry {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n}\n//# sourceMappingURL=element_schema_registry.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SecurityContext } from '../core';\nimport { isNgContainer, isNgContent } from '../ml_parser/tags';\nimport { dashCaseToCamelCase } from '../util';\nimport { SECURITY_SCHEMA } from './dom_security_schema';\nimport { ElementSchemaRegistry } from './element_schema_registry';\n/** @type {?} */\nconst BOOLEAN = 'boolean';\n/** @type {?} */\nconst NUMBER = 'number';\n/** @type {?} */\nconst STRING = 'string';\n/** @type {?} */\nconst OBJECT = 'object';\n/** *\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n  @type {?} */\nconst SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\n/** @type {?} */\nconst _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nexport class DomElementSchemaRegistry extends ElementSchemaRegistry {\n    constructor() {\n        super();\n        this._schema = {};\n        SCHEMA.forEach(encodedType => {\n            /** @type {?} */\n            const type = {};\n            const [strType, strProperties] = encodedType.split('|');\n            /** @type {?} */\n            const properties = strProperties.split(',');\n            const [typeNames, superName] = strType.split('^');\n            typeNames.split(',').forEach(tag => this._schema[tag.toLowerCase()] = type);\n            /** @type {?} */\n            const superType = superName && this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach((prop) => { type[prop] = superType[prop]; });\n            }\n            properties.forEach((property) => {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    hasProperty(tagName, propName, schemaMetas) {\n        if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        /** @type {?} */\n        const elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    hasElement(tagName, schemaMetas) {\n        if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    }\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    securityContext(tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        /** @type {?} */\n        let ctx = SECURITY_SCHEMA()[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA()['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    }\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    getMappedPropName(propName) { return _ATTR_TO_PROP[propName] || propName; }\n    /**\n     * @return {?}\n     */\n    getDefaultComponentElementName() { return 'ng-component'; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    validateProperty(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            /** @type {?} */\n            const msg = `Binding to event property '${name}' is disallowed for security reasons, ` +\n                `please use (${name.slice(2)})=...` +\n                `\\nIf '${name}' is a directive input, make sure the directive is imported by the` +\n                ` current module.`;\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    validateAttribute(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            /** @type {?} */\n            const msg = `Binding to event attribute '${name}' is disallowed for security reasons, ` +\n                `please use (${name.slice(2)})=...`;\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    }\n    /**\n     * @return {?}\n     */\n    allKnownElementNames() { return Object.keys(this._schema); }\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    normalizeAnimationStyleProperty(propName) {\n        return dashCaseToCamelCase(propName);\n    }\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    normalizeAnimationStyleValue(camelCaseProp, userProvidedProp, val) {\n        /** @type {?} */\n        let unit = '';\n        /** @type {?} */\n        const strVal = val.toString().trim();\n        /** @type {?} */\n        let errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                /** @type {?} */\n                const valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = `Please provide a CSS unit value for ${userProvidedProp}:${val}`;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    }\n}\nif (false) {\n    /** @type {?} */\n    DomElementSchemaRegistry.prototype._schema;\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n//# sourceMappingURL=dom_element_schema_registry.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nexport class ShadowCss {\n    constructor() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    shimCssText(cssText, selector, hostSelector = '') {\n        /** @type {?} */\n        const commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        /** @type {?} */\n        const scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText, ...commentsWithHash].join('\\n');\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _insertDirectives(cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _insertPolyfillDirectivesInCssText(cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function (...m) { return m[2] + '{'; });\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _insertPolyfillRulesInCssText(cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, (...m) => {\n            /** @type {?} */\n            const rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _scopeCssText(cssText, scopeSelector, hostSelector) {\n        /** @type {?} */\n        const unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _extractUnscopedRulesFromCssText(cssText) {\n        /** @type {?} */\n        let r = '';\n        /** @type {?} */\n        let m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            /** @type {?} */\n            const rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _convertColonHost(cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _convertColonHostContext(cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    _convertColonRule(cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function (...m) {\n            if (m[2]) {\n                /** @type {?} */\n                const parts = m[2].split(',');\n                /** @type {?} */\n                const r = [];\n                for (let i = 0; i < parts.length; i++) {\n                    /** @type {?} */\n                    const p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    }\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    _colonHostContextPartReplacer(host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    }\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    _colonHostPartReplacer(host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _convertShadowDOMSelectors(cssText) {\n        return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _scopeSelectors(cssText, scopeSelector, hostSelector) {\n        return processRules(cssText, (rule) => {\n            /** @type {?} */\n            let selector = rule.selector;\n            /** @type {?} */\n            let content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    _scopeSelector(selector, scopeSelector, hostSelector, strict) {\n        return selector.split(',')\n            .map(part => part.trim().split(_shadowDeepSelectors))\n            .map((deepParts) => {\n            const [shallowPart, ...otherParts] = deepParts;\n            /** @type {?} */\n            const applyScope = (shallowPart) => {\n                if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n            .join(', ');\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    _selectorNeedsScoping(selector, scopeSelector) {\n        /** @type {?} */\n        const re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    }\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    _makeScopeMatcher(scopeSelector) {\n        /** @type {?} */\n        const lre = /\\[/g;\n        /** @type {?} */\n        const rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _applySelectorScope(selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            /** @type {?} */\n            const replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, (hnc, selector) => {\n                return selector.replace(/([^:]*)(:*)(.*)/, (_, before, colon, after) => {\n                    return before + replaceBy + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\n        /** @type {?} */\n        const isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n        /** @type {?} */\n        const attrName = '[' + scopeSelector + ']';\n        /** @type {?} */\n        const _scopeSelectorPart = (p) => {\n            /** @type {?} */\n            let scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                /** @type {?} */\n                const t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    /** @type {?} */\n                    const matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        /** @type {?} */\n        const safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        /** @type {?} */\n        let scopedSelector = '';\n        /** @type {?} */\n        let startIndex = 0;\n        /** @type {?} */\n        let res;\n        /** @type {?} */\n        const sep = /( |>|\\+|~(?!=))\\s*/g;\n        /** @type {?} */\n        const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        /** @type {?} */\n        let shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            /** @type {?} */\n            const separator = res[1];\n            /** @type {?} */\n            const part = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n            /** @type {?} */\n            const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n            scopedSelector += `${scopedPart} ${separator} `;\n            startIndex = sep.lastIndex;\n        }\n        /** @type {?} */\n        const part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    _insertPolyfillHostInCssText(selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ShadowCss.prototype.strictStyling;\n}\nclass SafeSelector {\n    /**\n     * @param {?} selector\n     */\n    constructor(selector) {\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n            /** @type {?} */\n            const replaceBy = `__ph-${this.index}__`;\n            this.placeholders.push(keep);\n            this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n            /** @type {?} */\n            const replaceBy = `__ph-${this.index}__`;\n            this.placeholders.push(exp);\n            this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    restore(content) {\n        return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n    }\n    /**\n     * @return {?}\n     */\n    content() { return this._content; }\n}\nif (false) {\n    /** @type {?} */\n    SafeSelector.prototype.placeholders;\n    /** @type {?} */\n    SafeSelector.prototype.index;\n    /** @type {?} */\n    SafeSelector.prototype._content;\n}\n/** @type {?} */\nconst _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n/** @type {?} */\nconst _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n/** @type {?} */\nconst _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n/** @type {?} */\nconst _polyfillHost = '-shadowcsshost';\n/** @type {?} */\nconst _polyfillHostContext = '-shadowcsscontext';\n/** @type {?} */\nconst _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\n/** @type {?} */\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n/** @type {?} */\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n/** @type {?} */\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n/** @type {?} */\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n/** @type {?} */\nconst _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n/** @type {?} */\nconst _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\n/** @type {?} */\nconst _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n/** @type {?} */\nconst _polyfillHostRe = /-shadowcsshost/gim;\n/** @type {?} */\nconst _colonHostRe = /:host/gim;\n/** @type {?} */\nconst _colonHostContextRe = /:host-context/gim;\n/** @type {?} */\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n/** @type {?} */\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\n/** @type {?} */\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n/** @type {?} */\nconst _curlyRe = /([{}])/g;\n/** @type {?} */\nconst OPEN_CURLY = '{';\n/** @type {?} */\nconst CLOSE_CURLY = '}';\n/** @type {?} */\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\nexport class CssRule {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    constructor(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n}\nif (false) {\n    /** @type {?} */\n    CssRule.prototype.selector;\n    /** @type {?} */\n    CssRule.prototype.content;\n}\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input, ruleCallback) {\n    /** @type {?} */\n    const inputWithEscapedBlocks = escapeBlocks(input);\n    /** @type {?} */\n    let nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function (...m) {\n        /** @type {?} */\n        const selector = m[2];\n        /** @type {?} */\n        let content = '';\n        /** @type {?} */\n        let suffix = m[4];\n        /** @type {?} */\n        let contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        /** @type {?} */\n        const rule = ruleCallback(new CssRule(selector, content));\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n}\nclass StringWithEscapedBlocks {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    constructor(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StringWithEscapedBlocks.prototype.escapedString;\n    /** @type {?} */\n    StringWithEscapedBlocks.prototype.blocks;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    /** @type {?} */\n    const inputParts = input.split(_curlyRe);\n    /** @type {?} */\n    const resultParts = [];\n    /** @type {?} */\n    const escapedBlocks = [];\n    /** @type {?} */\n    let bracketCount = 0;\n    /** @type {?} */\n    let currentBlockParts = [];\n    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        /** @type {?} */\n        const part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n//# sourceMappingURL=shadow_css.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileStylesheetMetadata, identifierModuleUrl, identifierName } from './compile_metadata';\nimport { ViewEncapsulation } from './core';\nimport * as o from './output/output_ast';\nimport { ShadowCss } from './shadow_css';\n/** @type {?} */\nconst COMPONENT_VARIABLE = '%COMP%';\n/** @type {?} */\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\n/** @type {?} */\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nexport class StylesCompileDependency {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    constructor(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StylesCompileDependency.prototype.name;\n    /** @type {?} */\n    StylesCompileDependency.prototype.moduleUrl;\n    /** @type {?} */\n    StylesCompileDependency.prototype.setValue;\n}\nexport class CompiledStylesheet {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    constructor(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompiledStylesheet.prototype.outputCtx;\n    /** @type {?} */\n    CompiledStylesheet.prototype.stylesVar;\n    /** @type {?} */\n    CompiledStylesheet.prototype.dependencies;\n    /** @type {?} */\n    CompiledStylesheet.prototype.isShimmed;\n    /** @type {?} */\n    CompiledStylesheet.prototype.meta;\n}\nexport class StyleCompiler {\n    /**\n     * @param {?} _urlResolver\n     */\n    constructor(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    compileComponent(outputCtx, comp) {\n        /** @type {?} */\n        const template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    compileStyles(outputCtx, comp, stylesheet, shim = this.needsStyleShim(comp)) {\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    }\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    needsStyleShim(comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    _compileStyles(outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        /** @type {?} */\n        const styleExpressions = stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n        /** @type {?} */\n        const dependencies = [];\n        stylesheet.styleUrls.forEach((styleUrl) => {\n            /** @type {?} */\n            const exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, (value) => styleExpressions[exprIndex] = outputCtx.importExpr(value)));\n        });\n        /** @type {?} */\n        const stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        /** @type {?} */\n        const stmt = o.variable(stylesVar)\n            .set(o.literalArr(styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n            o.StmtModifier.Final, o.StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    }\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    _shimIfNeeded(style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StyleCompiler.prototype._shadowCss;\n    /** @type {?} */\n    StyleCompiler.prototype._urlResolver;\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    /** @type {?} */\n    let result = `styles`;\n    if (component) {\n        result += `_${identifierName(component.type)}`;\n    }\n    return result;\n}\n//# sourceMappingURL=style_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from './ast';\nimport { ParseTreeResult } from './parser';\nimport { NGSP_UNICODE } from './tags';\n/** @type {?} */\nexport const PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\n/** @type {?} */\nconst SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n/** @type {?} */\nconst WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\n/** @type {?} */\nconst NO_WS_REGEXP = new RegExp(`[^${WS_CHARS}]`);\n/** @type {?} */\nconst WS_REPLACE_REGEXP = new RegExp(`[${WS_CHARS}]{2,}`, 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some((attr) => attr.name === PRESERVE_WS_ATTR_NAME);\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nexport function replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nexport class WhitespaceVisitor {\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new html.Element(element.name, html.visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        /** @type {?} */\n        const isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new html.Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return comment; }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { return expansion; }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { return expansionCase; }\n}\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nexport function removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(html.visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n//# sourceMappingURL=html_whitespaces.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ParseError } from '../parse_util';\nimport * as html from './ast';\n/** @type {?} */\nconst PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nexport function expandNodes(nodes) {\n    /** @type {?} */\n    const expander = new _Expander();\n    return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nexport class ExpansionResult {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    constructor(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExpansionResult.prototype.nodes;\n    /** @type {?} */\n    ExpansionResult.prototype.expanded;\n    /** @type {?} */\n    ExpansionResult.prototype.errors;\n}\nexport class ExpansionError extends ParseError {\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    constructor(span, errorMsg) { super(span, errorMsg); }\n}\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nclass _Expander {\n    constructor() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { return attribute; }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return text; }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return comment; }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        throw new Error('Should not be reached');\n    }\n}\nif (false) {\n    /** @type {?} */\n    _Expander.prototype.isExpanded;\n    /** @type {?} */\n    _Expander.prototype.errors;\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    /** @type {?} */\n    const children = ast.cases.map(c => {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, `Plural cases should be \"=<number>\" or one of ${PLURAL_CASES.join(\", \")}`));\n        }\n        /** @type {?} */\n        const expansionResult = expandNodes(c.expression);\n        errors.push(...expansionResult.errors);\n        return new html.Element(`ng-template`, [new html.Attribute('ngPluralCase', `${c.value}`, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    /** @type {?} */\n    const switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    /** @type {?} */\n    const children = ast.cases.map(c => {\n        /** @type {?} */\n        const expansionResult = expandNodes(c.expression);\n        errors.push(...expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new html.Element(`ng-template`, [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new html.Element(`ng-template`, [new html.Attribute('ngSwitchCase', `${c.value}`, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    /** @type {?} */\n    const switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n//# sourceMappingURL=icu_ast_expander.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '../core';\nimport { BoundElementProperty, EmptyExpr, ParsedEvent, ParsedProperty, ParsedPropertyType, ParsedVariable, RecursiveAstVisitor } from '../expression_parser/ast';\nimport { mergeNsAndName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { CssSelector } from '../selector';\nimport { splitAtColon, splitAtPeriod } from '../util';\n/** @type {?} */\nconst PROPERTY_PARTS_SEPARATOR = '.';\n/** @type {?} */\nconst ATTRIBUTE_PREFIX = 'attr';\n/** @type {?} */\nconst CLASS_PREFIX = 'class';\n/** @type {?} */\nconst STYLE_PREFIX = 'style';\n/** @type {?} */\nconst ANIMATE_PROP_PREFIX = 'animate-';\n/**\n * Parses bindings in templates and in the directive host area.\n */\nexport class BindingParser {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} errors\n     */\n    constructor(_exprParser, _interpolationConfig, _schemaRegistry, pipes, errors) {\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this.errors = errors;\n        this.pipesByName = null;\n        this._usedPipes = new Map();\n        // When the `pipes` parameter is `null`, do not check for used pipes\n        // This is used in IVY when we might not know the available pipes at compile time\n        if (pipes) {\n            /** @type {?} */\n            const pipesByName = new Map();\n            pipes.forEach(pipe => pipesByName.set(pipe.name, pipe));\n            this.pipesByName = pipesByName;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getUsedPipes() { return Array.from(this._usedPipes.values()); }\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    createBoundHostProperties(dirMeta, sourceSpan) {\n        if (dirMeta.hostProperties) {\n            /** @type {?} */\n            const boundProps = [];\n            Object.keys(dirMeta.hostProperties).forEach(propName => {\n                /** @type {?} */\n                const expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps);\n                }\n                else {\n                    this._reportError(`Value of the host property binding \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`, sourceSpan);\n                }\n            });\n            return boundProps;\n        }\n        return null;\n    }\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    createDirectiveHostPropertyAsts(dirMeta, elementSelector, sourceSpan) {\n        /** @type {?} */\n        const boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n        return boundProps &&\n            boundProps.map((prop) => this.createBoundElementProperty(elementSelector, prop));\n    }\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    createDirectiveHostEventAsts(dirMeta, sourceSpan) {\n        if (dirMeta.hostListeners) {\n            /** @type {?} */\n            const targetEvents = [];\n            Object.keys(dirMeta.hostListeners).forEach(propName => {\n                /** @type {?} */\n                const expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    this.parseEvent(propName, expression, sourceSpan, [], targetEvents);\n                }\n                else {\n                    this._reportError(`Value of the host listener \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`, sourceSpan);\n                }\n            });\n            return targetEvents;\n        }\n        return null;\n    }\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    parseInterpolation(value, sourceSpan) {\n        /** @type {?} */\n        const sourceInfo = sourceSpan.start.toString();\n        try {\n            /** @type {?} */\n            const ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    }\n    /**\n     * @param {?} tplKey\n     * @param {?} tplValue\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    parseInlineTemplateBinding(tplKey, tplValue, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        /** @type {?} */\n        const bindings = this._parseTemplateBindings(tplKey, tplValue, sourceSpan);\n        for (let i = 0; i < bindings.length; i++) {\n            /** @type {?} */\n            const binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new ParsedVariable(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    }\n    /**\n     * @param {?} tplKey\n     * @param {?} tplValue\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _parseTemplateBindings(tplKey, tplValue, sourceSpan) {\n        /** @type {?} */\n        const sourceInfo = sourceSpan.start.toString();\n        try {\n            /** @type {?} */\n            const bindingsResult = this._exprParser.parseTemplateBindings(tplKey, tplValue, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach((binding) => {\n                if (binding.expression) {\n                    this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach((warning) => { this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return [];\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    parseLiteralAttr(name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(`Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid.` +\n                    ` Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.`, sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new ParsedProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), ParsedPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    parsePropertyBinding(name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        /** @type {?} */\n        let isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    parsePropertyInterpolation(name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        /** @type {?} */\n        const expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    _parsePropertyAst(name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.DEFAULT, sourceSpan));\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    _parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        /** @type {?} */\n        const ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.ANIMATION, sourceSpan));\n    }\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _parseBinding(value, isHostBinding, sourceSpan) {\n        /** @type {?} */\n        const sourceInfo = (sourceSpan && sourceSpan.start || '(unknown)').toString();\n        try {\n            /** @type {?} */\n            const ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    }\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    createBoundElementProperty(elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementProperty(boundProp.name, 4 /* Animation */, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        /** @type {?} */\n        let unit = null;\n        /** @type {?} */\n        let bindingType = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        let boundPropertyName = null;\n        /** @type {?} */\n        const parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        /** @type {?} */\n        let securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                /** @type {?} */\n                const nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    /** @type {?} */\n                    const ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    /** @type {?} */\n                    const name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = 1 /* Attribute */;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = 2 /* Class */;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = 3 /* Style */;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = 0 /* Property */;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementProperty(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseRegularEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    _parseAnimationEvent(name, expression, sourceSpan, targetEvents) {\n        /** @type {?} */\n        const matches = splitAtPeriod(name, [name, '']);\n        /** @type {?} */\n        const eventName = matches[0];\n        /** @type {?} */\n        const phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    /** @type {?} */\n                    const ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new ParsedEvent(eventName, phase, 1 /* Animation */, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(`The provided animation output phase value \"${phase}\" for \"@${eventName}\" is not supported (use start or done)`, sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(`The animation trigger output event (@${eventName}) is missing its phase value name (start or done are currently supported)`, sourceSpan);\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    _parseRegularEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        const [target, eventName] = splitAtColon(name, [/** @type {?} */ ((null)), name]);\n        /** @type {?} */\n        const ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new ParsedEvent(eventName, target, 0 /* Regular */, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    }\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _parseAction(value, sourceSpan) {\n        /** @type {?} */\n        const sourceInfo = (sourceSpan && sourceSpan.start || '(unknown').toString();\n        try {\n            /** @type {?} */\n            const ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(`Empty expressions are not allowed`, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    }\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    _reportError(message, sourceSpan, level = ParseErrorLevel.ERROR) {\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    }\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _reportExpressionParserErrors(errors, sourceSpan) {\n        for (const error of errors) {\n            this._reportError(error.message, sourceSpan);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _checkPipes(ast, sourceSpan) {\n        if (ast && this.pipesByName) {\n            /** @type {?} */\n            const collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach((ast, pipeName) => {\n                /** @type {?} */\n                const pipeMeta = /** @type {?} */ ((this.pipesByName)).get(pipeName);\n                if (!pipeMeta) {\n                    this._reportError(`The pipe '${pipeName}' could not be found`, new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    }\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    _validatePropertyOrAttributeName(propName, sourceSpan, isAttr) {\n        /** @type {?} */\n        const report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    BindingParser.prototype.pipesByName;\n    /** @type {?} */\n    BindingParser.prototype._usedPipes;\n    /** @type {?} */\n    BindingParser.prototype._exprParser;\n    /** @type {?} */\n    BindingParser.prototype._interpolationConfig;\n    /** @type {?} */\n    BindingParser.prototype._schemaRegistry;\n    /** @type {?} */\n    BindingParser.prototype.errors;\n}\nexport class PipeCollector extends RecursiveAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.pipes = new Map();\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    PipeCollector.prototype.pipes;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nexport function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    /** @type {?} */\n    const ctxs = [];\n    CssSelector.parse(selector).forEach((selector) => {\n        /** @type {?} */\n        const elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        /** @type {?} */\n        const notElementNames = new Set(selector.notSelectors.filter(selector => selector.isElementSelector())\n            .map((selector) => selector.element));\n        /** @type {?} */\n        const possibleElementNames = elementNames.filter(elementName => !notElementNames.has(elementName));\n        ctxs.push(...possibleElementNames.map(elementName => registry.securityContext(elementName, propName, isAttribute)));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n//# sourceMappingURL=binding_parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport { ASTWithSource, EmptyExpr } from '../expression_parser/ast';\nimport { Identifiers, createTokenForExternalReference, createTokenForReference } from '../identifiers';\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/html_parser';\nimport { removeWhitespaces, replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { expandNodes } from '../ml_parser/icu_ast_expander';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { isNgTemplate, splitNsName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { ProviderElementContext, ProviderViewContext } from '../provider_analyzer';\nimport { CssSelector, SelectorMatcher } from '../selector';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { syntaxError } from '../util';\nimport { BindingParser } from './binding_parser';\nimport * as t from './template_ast';\nimport { PreparsedElementType, preparseElement } from './template_preparser';\n/** @type {?} */\nconst BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n/** @type {?} */\nconst KW_BIND_IDX = 1;\n/** @type {?} */\nconst KW_LET_IDX = 2;\n/** @type {?} */\nconst KW_REF_IDX = 3;\n/** @type {?} */\nconst KW_ON_IDX = 4;\n/** @type {?} */\nconst KW_BINDON_IDX = 5;\n/** @type {?} */\nconst KW_AT_IDX = 6;\n/** @type {?} */\nconst IDENT_KW_IDX = 7;\n/** @type {?} */\nconst IDENT_BANANA_BOX_IDX = 8;\n/** @type {?} */\nconst IDENT_PROPERTY_IDX = 9;\n/** @type {?} */\nconst IDENT_EVENT_IDX = 10;\n/** @type {?} */\nconst TEMPLATE_ATTR_PREFIX = '*';\n/** @type {?} */\nconst CLASS_ATTR = 'class';\n/** @type {?} */\nlet _TEXT_CSS_SELECTOR;\n/**\n * @return {?}\n */\nfunction TEXT_CSS_SELECTOR() {\n    if (!_TEXT_CSS_SELECTOR) {\n        _TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n    }\n    return _TEXT_CSS_SELECTOR;\n}\nexport class TemplateParseError extends ParseError {\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    constructor(message, span, level) {\n        super(span, message, level);\n    }\n}\nexport class TemplateParseResult {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    constructor(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TemplateParseResult.prototype.templateAst;\n    /** @type {?} */\n    TemplateParseResult.prototype.usedPipes;\n    /** @type {?} */\n    TemplateParseResult.prototype.errors;\n}\nexport class TemplateParser {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    constructor(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @return {?}\n     */\n    get expressionParser() { return this._exprParser; }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    parse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        /** @type {?} */\n        const result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        /** @type {?} */\n        const warnings = /** @type {?} */ ((result.errors)).filter(error => error.level === ParseErrorLevel.WARNING);\n        /** @type {?} */\n        const errors = /** @type {?} */ ((result.errors)).filter(error => error.level === ParseErrorLevel.ERROR);\n        if (warnings.length > 0) {\n            this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n        }\n        if (errors.length > 0) {\n            /** @type {?} */\n            const errorString = errors.join('\\n');\n            throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        /** @type {?} */\n        let htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    }\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    tryParseHtml(htmlAstWithErrors, component, directives, pipes, schemas) {\n        /** @type {?} */\n        let result;\n        /** @type {?} */\n        const errors = htmlAstWithErrors.errors;\n        /** @type {?} */\n        const usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            /** @type {?} */\n            const uniqDirectives = removeSummaryDuplicates(directives);\n            /** @type {?} */\n            const uniqPipes = removeSummaryDuplicates(pipes);\n            /** @type {?} */\n            const providerViewContext = new ProviderViewContext(this._reflector, component);\n            /** @type {?} */\n            let interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            /** @type {?} */\n            const bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            /** @type {?} */\n            const parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push(...providerViewContext.errors);\n            usedPipes.push(...bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach((transform) => { result = t.templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    }\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    expandHtml(htmlAstWithErrors, forced = false) {\n        /** @type {?} */\n        const errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            /** @type {?} */\n            const expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push(...expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    }\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    getInterpolationConfig(component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    }\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    _assertNoReferenceDuplicationOnTemplate(result, errors) {\n        /** @type {?} */\n        const existingReferences = [];\n        result.filter(element => !!(/** @type {?} */ (element)).references)\n            .forEach(element => (/** @type {?} */ (element)).references.forEach((reference) => {\n            /** @type {?} */\n            const name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                /** @type {?} */\n                const error = new TemplateParseError(`Reference \"#${name}\" is defined several times`, reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }));\n    }\n}\nif (false) {\n    /** @type {?} */\n    TemplateParser.prototype._config;\n    /** @type {?} */\n    TemplateParser.prototype._reflector;\n    /** @type {?} */\n    TemplateParser.prototype._exprParser;\n    /** @type {?} */\n    TemplateParser.prototype._schemaRegistry;\n    /** @type {?} */\n    TemplateParser.prototype._htmlParser;\n    /** @type {?} */\n    TemplateParser.prototype._console;\n    /** @type {?} */\n    TemplateParser.prototype.transforms;\n}\nclass TemplateParseVisitor {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    constructor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach((directive, index) => {\n            /** @type {?} */\n            const selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            this.selectorMatcher.addSelectables(selector, directive);\n            this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { return null; }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { return null; }\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    visitText(text, parent) {\n        /** @type {?} */\n        const ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR())));\n        /** @type {?} */\n        const valueNoNgsp = replaceNgsp(text.value);\n        /** @type {?} */\n        const expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new t.BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new t.TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return null; }\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    visitElement(element, parent) {\n        /** @type {?} */\n        const queryStartIndex = this.contentQueryStartId;\n        /** @type {?} */\n        const elName = element.name;\n        /** @type {?} */\n        const preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        /** @type {?} */\n        const matchableAttrs = [];\n        /** @type {?} */\n        const elementOrDirectiveProps = [];\n        /** @type {?} */\n        const elementOrDirectiveRefs = [];\n        /** @type {?} */\n        const elementVars = [];\n        /** @type {?} */\n        const events = [];\n        /** @type {?} */\n        const templateElementOrDirectiveProps = [];\n        /** @type {?} */\n        const templateMatchableAttrs = [];\n        /** @type {?} */\n        const templateElementVars = [];\n        /** @type {?} */\n        let hasInlineTemplates = false;\n        /** @type {?} */\n        const attrs = [];\n        /** @type {?} */\n        const isTemplateElement = isNgTemplate(element.name);\n        element.attrs.forEach(attr => {\n            /** @type {?} */\n            const parsedVariables = [];\n            /** @type {?} */\n            const hasBinding = this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            elementVars.push(...parsedVariables.map(v => t.VariableAst.fromParsedVariable(v)));\n            /** @type {?} */\n            let templateValue;\n            /** @type {?} */\n            let templateKey;\n            /** @type {?} */\n            const normalizedName = this._normalizeAttributeName(attr.name);\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateValue = attr.value;\n                templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n            }\n            /** @type {?} */\n            const hasTemplateBinding = templateValue != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    this._reportError(`Can't have multiple template bindings on one element. Use only one attribute prefixed with *`, attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                /** @type {?} */\n                const parsedVariables = [];\n                this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((templateKey)), /** @type {?} */ ((templateValue)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, parsedVariables);\n                templateElementVars.push(...parsedVariables.map(v => t.VariableAst.fromParsedVariable(v)));\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        /** @type {?} */\n        const elementCssSelector = createElementCssSelector(elName, matchableAttrs);\n        const { directives: directiveMetas, matchElement } = this._parseDirectives(this.selectorMatcher, elementCssSelector);\n        /** @type {?} */\n        const references = [];\n        /** @type {?} */\n        const boundDirectivePropNames = new Set();\n        /** @type {?} */\n        const directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        /** @type {?} */\n        const elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        /** @type {?} */\n        const isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        /** @type {?} */\n        const providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        /** @type {?} */\n        const children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        /** @type {?} */\n        const projectionSelector = preparsedElement.projectAs != '' ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        /** @type {?} */\n        const ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        /** @type {?} */\n        let parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>` element\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(`<ng-content> element cannot have content.`, /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new t.NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>` element\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new t.EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            // element other than `<ng-content>` and `<ng-template>`\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            /** @type {?} */\n            const ngContentIndex = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new t.ElementAst(elName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            /** @type {?} */\n            const templateQueryStartIndex = this.contentQueryStartId;\n            /** @type {?} */\n            const templateSelector = createElementCssSelector('ng-template', templateMatchableAttrs);\n            const { directives } = this._parseDirectives(this.selectorMatcher, templateSelector);\n            /** @type {?} */\n            const templateBoundDirectivePropNames = new Set();\n            /** @type {?} */\n            const templateDirectiveAsts = this._createDirectiveAsts(true, elName, directives, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            /** @type {?} */\n            const templateElementProps = this._createElementPropertyAsts(elName, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            /** @type {?} */\n            const templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new t.EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    _parseAttr(isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        /** @type {?} */\n        const name = this._normalizeAttributeName(attr.name);\n        /** @type {?} */\n        const value = attr.value;\n        /** @type {?} */\n        const srcSpan = attr.sourceSpan;\n        /** @type {?} */\n        const boundEvents = [];\n        /** @type {?} */\n        const bindParts = name.match(BIND_NAME_REGEXP);\n        /** @type {?} */\n        let hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    /** @type {?} */\n                    const identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(`\"let-\" is only supported on ng-template elements.`, srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                /** @type {?} */\n                const identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        targetEvents.push(...boundEvents.map(e => t.BoundEventAst.fromParsedEvent(e)));\n        return hasBinding;\n    }\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _normalizeAttributeName(attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    _parseVariable(identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n        }\n        targetVars.push(new t.VariableAst(identifier, value, sourceSpan));\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    _parseReference(identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    _parseAssignmentEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(`${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n    }\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    _parseDirectives(selectorMatcher, elementCssSelector) {\n        /** @type {?} */\n        const directives = new Array(this.directivesIndex.size);\n        /** @type {?} */\n        let matchElement = false;\n        selectorMatcher.match(elementCssSelector, (selector, directive) => {\n            directives[/** @type {?} */ ((this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(dir => !!dir),\n            matchElement,\n        };\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    _createDirectiveAsts(isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        /** @type {?} */\n        const matchedReferences = new Set();\n        /** @type {?} */\n        let component = /** @type {?} */ ((null));\n        /** @type {?} */\n        const directiveAsts = directives.map((directive) => {\n            /** @type {?} */\n            const sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, `Directive ${identifierName(directive.type)}`);\n            if (directive.isComponent) {\n                component = directive;\n            }\n            /** @type {?} */\n            const directiveProperties = [];\n            /** @type {?} */\n            const boundProperties = /** @type {?} */ ((this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            /** @type {?} */\n            let hostProperties = boundProperties.map(prop => t.BoundElementPropertyAst.fromBoundProperty(prop));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = this._checkPropertiesInSchema(elementName, hostProperties);\n            /** @type {?} */\n            const parsedEvents = /** @type {?} */ ((this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach((elOrDirRef) => {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new t.ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            /** @type {?} */\n            const hostEvents = parsedEvents.map(e => t.BoundEventAst.fromParsedEvent(e));\n            /** @type {?} */\n            const contentQueryStartId = this.contentQueryStartId;\n            this.contentQueryStartId += directive.queries.length;\n            return new t.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach((elOrDirRef) => {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    this._reportError(`There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`, elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                /** @type {?} */\n                let refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new t.ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    }\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    _createDirectivePropertyAsts(directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            /** @type {?} */\n            const boundPropsByName = new Map();\n            boundProps.forEach(boundProp => {\n                /** @type {?} */\n                const prevValue = boundPropsByName.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(dirProp => {\n                /** @type {?} */\n                const elProp = directiveProperties[dirProp];\n                /** @type {?} */\n                const boundProp = boundPropsByName.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new t.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    _createElementPropertyAsts(elementName, props, boundDirectivePropNames) {\n        /** @type {?} */\n        const boundElementProps = [];\n        props.forEach((prop) => {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                /** @type {?} */\n                const boundProp = this._bindingParser.createBoundElementProperty(elementName, prop);\n                boundElementProps.push(t.BoundElementPropertyAst.fromBoundProperty(boundProp));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    _findComponentDirectives(directives) {\n        return directives.filter(directive => directive.directive.isComponent);\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    _findComponentDirectiveNames(directives) {\n        return this._findComponentDirectives(directives)\n            .map(directive => /** @type {?} */ ((identifierName(directive.directive.type))));\n    }\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _assertOnlyOneComponent(directives, sourceSpan) {\n        /** @type {?} */\n        const componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(`More than one component matched on this element.\\n` +\n                `Make sure that only one component's selector can match a given element.\\n` +\n                `Conflicting components: ${componentTypeNames.join(',')}`, sourceSpan);\n        }\n    }\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    _assertElementExists(matchElement, element) {\n        /** @type {?} */\n        const elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            /** @type {?} */\n            let errorMsg = `'${elName}' is not a known element:\\n`;\n            errorMsg +=\n                `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n            }\n            else {\n                errorMsg +=\n                    `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    }\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _assertNoComponentsNorElementBindingsOnTemplate(directives, elementProps, sourceSpan) {\n        /** @type {?} */\n        const componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(`Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n        }\n        elementProps.forEach(prop => {\n            this._reportError(`Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`, sourceSpan);\n        });\n    }\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    _assertAllEventsPublishedByDirectives(directives, events) {\n        /** @type {?} */\n        const allDirectiveEvents = new Set();\n        directives.forEach(directive => {\n            Object.keys(directive.directive.outputs).forEach(k => {\n                /** @type {?} */\n                const eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(event => {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                this._reportError(`Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`, event.sourceSpan);\n            }\n        });\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    _checkPropertiesInSchema(elementName, boundProps) {\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter((boundProp) => {\n            if (boundProp.type === 0 /* Property */ &&\n                !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n                /** @type {?} */\n                let errorMsg = `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n                            `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n                            `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n                            `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n                }\n                this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    }\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    _reportError(message, sourceSpan, level = ParseErrorLevel.ERROR) {\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    }\n}\nif (false) {\n    /** @type {?} */\n    TemplateParseVisitor.prototype.selectorMatcher;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.directivesIndex;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.ngContentCount;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.contentQueryStartId;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.reflector;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.config;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.providerViewContext;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._bindingParser;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._schemaRegistry;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._schemas;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._targetErrors;\n}\nclass NonBindableVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    visitElement(ast, parent) {\n        /** @type {?} */\n        const preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        /** @type {?} */\n        const attrNameAndValues = ast.attrs.map((attr) => [attr.name, attr.value]);\n        /** @type {?} */\n        const selector = createElementCssSelector(ast.name, attrNameAndValues);\n        /** @type {?} */\n        const ngContentIndex = parent.findNgContentIndex(selector);\n        /** @type {?} */\n        const children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new t.ElementAst(ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return null; }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    visitText(text, parent) {\n        /** @type {?} */\n        const ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR())));\n        return new t.TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { return expansion; }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { return expansionCase; }\n}\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nclass ElementOrDirectiveRef {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    isReferenceToDirective(directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ElementOrDirectiveRef.prototype.name;\n    /** @type {?} */\n    ElementOrDirectiveRef.prototype.value;\n    /** @type {?} */\n    ElementOrDirectiveRef.prototype.sourceSpan;\n}\n/**\n * Splits a raw, potentially comma-delimited `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(e => e.trim()) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    constructor(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    static create(isTemplateElement, directives, providerContext) {\n        /** @type {?} */\n        const matcher = new SelectorMatcher();\n        /** @type {?} */\n        let wildcardNgContentIndex = /** @type {?} */ ((null));\n        /** @type {?} */\n        const component = directives.find(directive => directive.directive.isComponent);\n        if (component) {\n            /** @type {?} */\n            const ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (let i = 0; i < ngContentSelectors.length; i++) {\n                /** @type {?} */\n                const selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    findNgContentIndex(selector) {\n        /** @type {?} */\n        const ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ElementContext.prototype.isTemplateElement;\n    /** @type {?} */\n    ElementContext.prototype._ngContentIndexMatcher;\n    /** @type {?} */\n    ElementContext.prototype._wildcardNgContentIndex;\n    /** @type {?} */\n    ElementContext.prototype.providerContext;\n}\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(elementName, attributes) {\n    /** @type {?} */\n    const cssSelector = new CssSelector();\n    /** @type {?} */\n    const elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (let i = 0; i < attributes.length; i++) {\n        /** @type {?} */\n        const attrName = attributes[i][0];\n        /** @type {?} */\n        const attrNameNoNs = splitNsName(attrName)[1];\n        /** @type {?} */\n        const attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            /** @type {?} */\n            const classes = splitClasses(attrValue);\n            classes.forEach(className => cssSelector.addClassName(className));\n        }\n    }\n    return cssSelector;\n}\n/** @type {?} */\nconst EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n/** @type {?} */\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates(items) {\n    /** @type {?} */\n    const map = new Map();\n    items.forEach((item) => {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n//# sourceMappingURL=template_parser.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as cdAst from '../expression_parser/ast';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nexport class EventHandlerVars {\n}\nEventHandlerVars.event = o.variable('$event');\nif (false) {\n    /** @type {?} */\n    EventHandlerVars.event;\n}\n/**\n * @record\n */\nexport function LocalResolver() { }\n/** @type {?} */\nLocalResolver.prototype.getLocal;\nexport class ConvertActionBindingResult {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    constructor(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n        /**\n             * This is bit of a hack. It converts statements which render2 expects to statements which are\n             * expected by render3.\n             *\n             * Example: `<div click=\"doSomething($event)\">` will generate:\n             *\n             * Render3:\n             * ```\n             * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);\n             * return pd_b;\n             * ```\n             *\n             * but render2 expects:\n             * ```\n             * return ctx.doSomething($event);\n             * ```\n             */\n        // TODO(misko): remove this hack once we no longer support ViewEngine.\n        this.render3Stmts = stmts.map((statement) => {\n            if (statement instanceof o.DeclareVarStmt && statement.name == allowDefault.name &&\n                statement.value instanceof o.BinaryOperatorExpr) {\n                /** @type {?} */\n                const lhs = /** @type {?} */ (statement.value.lhs);\n                return new o.ReturnStatement(lhs.value);\n            }\n            return statement;\n        });\n    }\n}\nif (false) {\n    /**\n     * Store statements which are render3 compatible.\n     * @type {?}\n     */\n    ConvertActionBindingResult.prototype.render3Stmts;\n    /**\n     * Render2 compatible statements,\n     * @type {?}\n     */\n    ConvertActionBindingResult.prototype.stmts;\n    /**\n     * Variable name used with render2 compatible statements.\n     * @type {?}\n     */\n    ConvertActionBindingResult.prototype.allowDefault;\n}\n/** @typedef {?} */\nvar InterpolationFunction;\nexport { InterpolationFunction };\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @param {?=} interpolationFunction\n * @return {?}\n */\nexport function convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    /** @type {?} */\n    const actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: (argCount) => {\n            // Note: no caching for literal arrays in actions.\n            return (args) => o.literalArr(args);\n        },\n        createLiteralMapConverter: (keys) => {\n            // Note: no caching for literal maps in actions.\n            return (values) => {\n                /** @type {?} */\n                const entries = keys.map((k, i) => ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }));\n                return o.literalMap(entries);\n            };\n        },\n        createPipeConverter: (name) => {\n            throw new Error(`Illegal State: Actions are not allowed to contain pipes. Pipe: ${name}`);\n        }\n    }, action);\n    /** @type {?} */\n    const visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    /** @type {?} */\n    const actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    /** @type {?} */\n    const lastIndex = actionStmts.length - 1;\n    /** @type {?} */\n    let preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        /** @type {?} */\n        const lastStatement = actionStmts[lastIndex];\n        /** @type {?} */\n        const returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n                    .toDeclStmt(null, [o.StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\nexport function BuiltinConverter() { }\n/**\n * @record\n */\nexport function BuiltinConverterFactory() { }\n/** @type {?} */\nBuiltinConverterFactory.prototype.createLiteralArrayConverter;\n/** @type {?} */\nBuiltinConverterFactory.prototype.createLiteralMapConverter;\n/** @type {?} */\nBuiltinConverterFactory.prototype.createPipeConverter;\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nexport function convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nexport class ConvertPropertyBindingResult {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    constructor(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ConvertPropertyBindingResult.prototype.stmts;\n    /** @type {?} */\n    ConvertPropertyBindingResult.prototype.currValExpr;\n}\n/** @enum {number} */\nconst BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherwise generate a general binding\n    TrySimple: 1,\n};\nexport { BindingForm };\nBindingForm[BindingForm.General] = 'General';\nBindingForm[BindingForm.TrySimple] = 'TrySimple';\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @param {?=} interpolationFunction\n * @return {?}\n */\nexport function convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    /** @type {?} */\n    const currValExpr = createCurrValueExpr(bindingId);\n    /** @type {?} */\n    const stmts = [];\n    /** @type {?} */\n    const visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    /** @type {?} */\n    const outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (let i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(o.DYNAMIC_TYPE, [o.StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    /** @type {?} */\n    const visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return `tmp_${bindingId}_${temporaryNumber}`;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nexport function temporaryDeclaration(bindingId, temporaryNumber) {\n    return new o.DeclareVarStmt(temporaryName(bindingId, temporaryNumber), o.NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (let i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nconst _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = 'Statement';\n_Mode[_Mode.Expression] = 'Expression';\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(`Expected a statement, but saw ${ast}`);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(`Expected an expression, but saw ${ast}`);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nclass _BuiltinAstConverter extends cdAst.AstTransformer {\n    /**\n     * @param {?} _converterFactory\n     */\n    constructor(_converterFactory) {\n        super();\n        this._converterFactory = _converterFactory;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        /** @type {?} */\n        const args = [ast.exp, ...ast.args].map(ast => ast.visit(this, context));\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        /** @type {?} */\n        const args = ast.expressions.map(ast => ast.visit(this, context));\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) {\n        /** @type {?} */\n        const args = ast.values.map(ast => ast.visit(this, context));\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    }\n}\nif (false) {\n    /** @type {?} */\n    _BuiltinAstConverter.prototype._converterFactory;\n}\nclass _AstToIrVisitor {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     * @param {?} interpolationFunction\n     */\n    constructor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitBinary(ast, mode) {\n        /** @type {?} */\n        let op;\n        switch (ast.operation) {\n            case '+':\n                op = o.BinaryOperator.Plus;\n                break;\n            case '-':\n                op = o.BinaryOperator.Minus;\n                break;\n            case '*':\n                op = o.BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = o.BinaryOperator.Divide;\n                break;\n            case '%':\n                op = o.BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = o.BinaryOperator.And;\n                break;\n            case '||':\n                op = o.BinaryOperator.Or;\n                break;\n            case '==':\n                op = o.BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = o.BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = o.BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = o.BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = o.BinaryOperator.Lower;\n                break;\n            case '>':\n                op = o.BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = o.BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = o.BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(`Unsupported operation ${ast.operation}`);\n        }\n        return convertToStatementIfNeeded(mode, new o.BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitChain(ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitConditional(ast, mode) {\n        /** @type {?} */\n        const value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPipe(ast, mode) {\n        throw new Error(`Illegal state: Pipes should have been converted into functions. Pipe: ${ast.name}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitFunctionCall(ast, mode) {\n        /** @type {?} */\n        const convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        /** @type {?} */\n        let fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitInterpolation(ast, mode) {\n        ensureExpressionMode(mode, ast);\n        /** @type {?} */\n        const args = [o.literal(ast.expressions.length)];\n        for (let i = 0; i < ast.strings.length - 1; i++) {\n            args.push(o.literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(o.literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            o.importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            o.importExpr(Identifiers.interpolate).callFn([args[0], o.literalArr(args.slice(1))]);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitKeyedRead(ast, mode) {\n        /** @type {?} */\n        const leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitKeyedWrite(ast, mode) {\n        /** @type {?} */\n        const obj = this._visit(ast.obj, _Mode.Expression);\n        /** @type {?} */\n        const key = this._visit(ast.key, _Mode.Expression);\n        /** @type {?} */\n        const value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitLiteralArray(ast, mode) {\n        throw new Error(`Illegal State: literal arrays should have been converted into functions`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitLiteralMap(ast, mode) {\n        throw new Error(`Illegal State: literal maps should have been converted into functions`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, mode) {\n        /** @type {?} */\n        const type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            o.INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, o.literal(ast.value, type));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _getLocal(name) { return this._localResolver.getLocal(name); }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitMethodCall(ast, mode) {\n        if (ast.receiver instanceof cdAst.ImplicitReceiver && ast.name == '$any') {\n            /** @type {?} */\n            const args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(`Invalid call to $any, expected 1 argument but received ${args.length || 'none'}`);\n            }\n            return (/** @type {?} */ (args[0])).cast(o.DYNAMIC_TYPE);\n        }\n        /** @type {?} */\n        const leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            /** @type {?} */\n            const args = this.visitAll(ast.args, _Mode.Expression);\n            /** @type {?} */\n            let result = null;\n            /** @type {?} */\n            const receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                /** @type {?} */\n                const varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPrefixNot(ast, mode) {\n        return convertToStatementIfNeeded(mode, o.not(this._visit(ast.expression, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitNonNullAssert(ast, mode) {\n        return convertToStatementIfNeeded(mode, o.assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPropertyRead(ast, mode) {\n        /** @type {?} */\n        const leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            /** @type {?} */\n            let result = null;\n            /** @type {?} */\n            const receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPropertyWrite(ast, mode) {\n        /** @type {?} */\n        const receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            /** @type {?} */\n            const varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    }\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    visitAll(asts, mode) { return asts.map(ast => this._visit(ast, mode)); }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitQuote(ast, mode) {\n        throw new Error(`Quotes are not supported for evaluation!\n        Statement: ${ast.uninterpretedExpression} located at ${ast.location}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _visit(ast, mode) {\n        /** @type {?} */\n        const result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    convertSafeAccess(ast, leftMostSafe, mode) {\n        /** @type {?} */\n        let guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        /** @type {?} */\n        let temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        /** @type {?} */\n        const condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof cdAst.SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new cdAst.MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new cdAst.PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        /** @type {?} */\n        const access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(o.literal(null), access));\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    leftMostSafeNode(ast) {\n        /** @type {?} */\n        const visit = (visitor, ast) => {\n            return (this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead(ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall(ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead(ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall(ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead(ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    needsTemporary(ast) {\n        /** @type {?} */\n        const visit = (visitor, ast) => {\n            return ast && (this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        /** @type {?} */\n        const visitSome = (visitor, ast) => {\n            return ast.some(ast => visit(visitor, ast));\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary(ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional(ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation(ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot(ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert(ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead(ast) { return false; }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    allocateTemporary() {\n        /** @type {?} */\n        const tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new o.ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    }\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    releaseTemporary(temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(`Temporary ${temporary.name} released out of order`);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    _AstToIrVisitor.prototype._nodeMap;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._resultMap;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._currentTemporary;\n    /** @type {?} */\n    _AstToIrVisitor.prototype.temporaryCount;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._localResolver;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._implicitReceiver;\n    /** @type {?} */\n    _AstToIrVisitor.prototype.bindingId;\n    /** @type {?} */\n    _AstToIrVisitor.prototype.interpolationFunction;\n}\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach((entry) => flattenStatements(entry, output));\n    }\n    else {\n        output.push(arg);\n    }\n}\nclass DefaultLocalResolver {\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    }\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return o.variable(`currVal_${bindingId}`); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return o.variable(`pd_${bindingId}`);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof o.ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof o.ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nexport class BuiltinFunctionCall extends cdAst.FunctionCall {\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    constructor(span, args, converter) {\n        super(span, null, args);\n        this.args = args;\n        this.converter = converter;\n    }\n}\nif (false) {\n    /** @type {?} */\n    BuiltinFunctionCall.prototype.args;\n    /** @type {?} */\n    BuiltinFunctionCall.prototype.converter;\n}\n//# sourceMappingURL=expression_converter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport { BindingForm, EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport * as o from '../output/output_ast';\nimport { templateVisitAll } from '../template_parser/template_ast';\n/**\n * Generates code that is used to type check templates.\n */\nexport class TypeCheckCompiler {\n    /**\n     * @param {?} options\n     * @param {?} reflector\n     */\n    constructor(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    compileComponent(componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        /** @type {?} */\n        const pipes = new Map();\n        usedPipes.forEach(p => pipes.set(p.name, p.type.reference));\n        /** @type {?} */\n        let embeddedViewCount = 0;\n        /** @type {?} */\n        const viewBuilderFactory = (parent, guards) => {\n            /** @type {?} */\n            const embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(this.options, this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        /** @type {?} */\n        const visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    }\n}\nif (false) {\n    /** @type {?} */\n    TypeCheckCompiler.prototype.options;\n    /** @type {?} */\n    TypeCheckCompiler.prototype.reflector;\n}\n/**\n * @record\n */\nfunction GuardExpression() { }\n/** @type {?} */\nGuardExpression.prototype.guard;\n/** @type {?} */\nGuardExpression.prototype.useIf;\n/** @type {?} */\nGuardExpression.prototype.expression;\n/**\n * @record\n */\nfunction ViewBuilderFactory() { }\n/** @typedef {?} */\nvar OutputVarType;\n/**\n * @record\n */\nfunction Expression() { }\n/** @type {?} */\nExpression.prototype.context;\n/** @type {?} */\nExpression.prototype.sourceSpan;\n/** @type {?} */\nExpression.prototype.value;\n/** @type {?} */\nconst DYNAMIC_VAR_NAME = '_any';\nclass TypeCheckLocalResolver {\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return o.variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    }\n}\n/** @type {?} */\nconst defaultResolver = new TypeCheckLocalResolver();\nclass ViewBuilder {\n    /**\n     * @param {?} options\n     * @param {?} reflector\n     * @param {?} externalReferenceVars\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} isHostComponent\n     * @param {?} embeddedViewIndex\n     * @param {?} pipes\n     * @param {?} guards\n     * @param {?} ctx\n     * @param {?} viewBuilderFactory\n     */\n    constructor(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getOutputVar(type) {\n        /** @type {?} */\n        let varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(`Illegal State: referring to a type without a variable ${JSON.stringify(type)}`);\n        }\n        return varName;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    getTypeGuardExpressions(ast) {\n        /** @type {?} */\n        const result = [...this.guards];\n        for (let directive of ast.directives) {\n            for (let input of directive.inputs) {\n                /** @type {?} */\n                const guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    /** @type {?} */\n                    const useIf = guard === 'UseIf';\n                    result.push({\n                        guard,\n                        useIf,\n                        expression: /** @type {?} */ ({ context: this.component, value: input.value })\n                    });\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    visitAll(variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    }\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    build(componentId, targetStatements = []) {\n        this.children.forEach((child) => child.build(componentId, targetStatements));\n        /** @type {?} */\n        let viewStmts = [o.variable(DYNAMIC_VAR_NAME).set(o.NULL_EXPR).toDeclStmt(o.DYNAMIC_TYPE)];\n        /** @type {?} */\n        let bindingCount = 0;\n        this.updates.forEach((expression) => {\n            const { sourceSpan, context, value } = this.preprocessUpdateExpression(expression);\n            /** @type {?} */\n            const bindingId = `${bindingCount++}`;\n            /** @type {?} */\n            const nameResolver = context === this.component ? this : defaultResolver;\n            const { stmts, currValExpr } = convertPropertyBinding(nameResolver, o.variable(this.getOutputVar(context)), value, bindingId, BindingForm.General);\n            stmts.push(new o.ExpressionStatement(currValExpr));\n            viewStmts.push(...stmts.map((stmt) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n        });\n        this.actions.forEach(({ sourceSpan, context, value }) => {\n            /** @type {?} */\n            const bindingId = `${bindingCount++}`;\n            /** @type {?} */\n            const nameResolver = context === this.component ? this : defaultResolver;\n            const { stmts } = convertActionBinding(nameResolver, o.variable(this.getOutputVar(context)), value, bindingId);\n            viewStmts.push(...stmts.map((stmt) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n        });\n        if (this.guards.length) {\n            /** @type {?} */\n            let guardExpression = undefined;\n            for (const guard of this.guards) {\n                const { context, value } = this.preprocessUpdateExpression(guard.expression);\n                /** @type {?} */\n                const bindingId = `${bindingCount++}`;\n                /** @type {?} */\n                const nameResolver = context === this.component ? this : defaultResolver;\n                const { stmts, currValExpr } = convertPropertyBinding(nameResolver, o.variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple);\n                if (stmts.length == 0) {\n                    /** @type {?} */\n                    const guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new o.IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        /** @type {?} */\n        const viewName = `_View_${componentId}_${this.embeddedViewIndex}`;\n        /** @type {?} */\n        const viewFactory = new o.DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBoundText(ast, context) {\n        /** @type {?} */\n        const astWithSource = /** @type {?} */ (ast.value);\n        /** @type {?} */\n        const inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach((expr) => this.updates.push({ context: this.component, value: expr, sourceSpan: ast.sourceSpan }));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            /** @type {?} */\n            const guards = this.getTypeGuardExpressions(ast);\n            /** @type {?} */\n            const childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        this.visitElementOrTemplate(ast);\n        /** @type {?} */\n        let inputDefs = [];\n        /** @type {?} */\n        let updateRendererExpressions = [];\n        /** @type {?} */\n        let outputDefs = [];\n        ast.inputs.forEach((inputAst) => {\n            this.updates.push({ context: this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    visitElementOrTemplate(ast) {\n        ast.directives.forEach((dirAst) => { this.visitDirective(dirAst); });\n        ast.references.forEach((ref) => {\n            /** @type {?} */\n            let outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = o.BuiltinTypeName.Dynamic;\n            }\n            this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach((outputAst) => {\n            this.actions.push({ context: this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    }\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    visitDirective(dirAst) {\n        /** @type {?} */\n        const dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach((input) => this.updates.push({ context: this.component, value: input.value, sourceSpan: input.sourceSpan }));\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach((inputAst) => this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan }));\n            dirAst.hostEvents.forEach((hostEventAst) => this.actions.push({\n                context: dirType,\n                value: hostEventAst.handler,\n                sourceSpan: hostEventAst.sourceSpan\n            }));\n        }\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) {\n        if (name == EventHandlerVars.event.name) {\n            return o.variable(this.getOutputVar(o.BuiltinTypeName.Dynamic));\n        }\n        for (let currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            /** @type {?} */\n            let outputVarType;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                /** @type {?} */\n                const varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n                if (varAst) {\n                    outputVarType = o.BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return o.variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    pipeOutputVar(name) {\n        /** @type {?} */\n        const pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(`Illegal State: Could not find pipe ${name} in template of ${this.component}`);\n        }\n        return this.getOutputVar(pipe);\n    }\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    preprocessUpdateExpression(expression) {\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: (argCount) => (args) => {\n                    /** @type {?} */\n                    const arr = o.literalArr(args);\n                    // Note: The old view compiler used to use an `any` type\n                    // for arrays.\n                    return this.options.fullTemplateTypeCheck ? arr : arr.cast(o.DYNAMIC_TYPE);\n                },\n                createLiteralMapConverter: (keys) => (values) => {\n                    /** @type {?} */\n                    const entries = keys.map((k, i) => ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    }));\n                    /** @type {?} */\n                    const map = o.literalMap(entries);\n                    // Note: The old view compiler used to use an `any` type\n                    // for maps.\n                    return this.options.fullTemplateTypeCheck ? map : map.cast(o.DYNAMIC_TYPE);\n                },\n                createPipeConverter: (name, argCount) => (args) => {\n                    /** @type {?} */\n                    const pipeExpr = this.options.fullTemplateTypeCheck ?\n                        o.variable(this.pipeOutputVar(name)) :\n                        o.variable(this.getOutputVar(o.BuiltinTypeName.Dynamic));\n                    return pipeExpr.callMethod('transform', args);\n                },\n            }, expression.value)\n        };\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNgContent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirectiveProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReference(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitVariable(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEvent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElementProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttr(ast, context) { }\n}\nif (false) {\n    /** @type {?} */\n    ViewBuilder.prototype.refOutputVars;\n    /** @type {?} */\n    ViewBuilder.prototype.variables;\n    /** @type {?} */\n    ViewBuilder.prototype.children;\n    /** @type {?} */\n    ViewBuilder.prototype.updates;\n    /** @type {?} */\n    ViewBuilder.prototype.actions;\n    /** @type {?} */\n    ViewBuilder.prototype.options;\n    /** @type {?} */\n    ViewBuilder.prototype.reflector;\n    /** @type {?} */\n    ViewBuilder.prototype.externalReferenceVars;\n    /** @type {?} */\n    ViewBuilder.prototype.parent;\n    /** @type {?} */\n    ViewBuilder.prototype.component;\n    /** @type {?} */\n    ViewBuilder.prototype.isHostComponent;\n    /** @type {?} */\n    ViewBuilder.prototype.embeddedViewIndex;\n    /** @type {?} */\n    ViewBuilder.prototype.pipes;\n    /** @type {?} */\n    ViewBuilder.prototype.guards;\n    /** @type {?} */\n    ViewBuilder.prototype.ctx;\n    /** @type {?} */\n    ViewBuilder.prototype.viewBuilderFactory;\n}\n//# sourceMappingURL=type_check_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { rendererTypeName, tokenReference, viewClassName } from '../compile_metadata';\nimport { BindingForm, EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport { ChangeDetectionStrategy } from '../core';\nimport { Identifiers } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport { isNgContainer } from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ElementAst, EmbeddedTemplateAst, NgContentAst, templateVisitAll } from '../template_parser/template_ast';\nimport { componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef } from './provider_compiler';\n/** @type {?} */\nconst CLASS_ATTR = 'class';\n/** @type {?} */\nconst STYLE_ATTR = 'style';\n/** @type {?} */\nconst IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nexport class ViewCompileResult {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    constructor(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ViewCompileResult.prototype.viewClassVar;\n    /** @type {?} */\n    ViewCompileResult.prototype.rendererTypeVar;\n}\nexport class ViewCompiler {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    compileComponent(outputCtx, component, template, styles, usedPipes) {\n        /** @type {?} */\n        let embeddedViewCount = 0;\n        /** @type {?} */\n        const staticQueryIds = findStaticQueryIds(template);\n        /** @type {?} */\n        let renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            /** @type {?} */\n            const template = /** @type {?} */ ((component.template));\n            /** @type {?} */\n            const customRenderData = [];\n            if (template.animations && template.animations.length) {\n                customRenderData.push(new o.LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template.animations), true));\n            }\n            /** @type {?} */\n            const renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                    new o.LiteralMapEntry('encapsulation', o.literal(template.encapsulation), false),\n                    new o.LiteralMapEntry('styles', styles, false),\n                    new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(o.importType(Identifiers.RendererType2), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n        }\n        /** @type {?} */\n        const viewBuilderFactory = (parent) => {\n            /** @type {?} */\n            const embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        /** @type {?} */\n        const visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        outputCtx.statements.push(...visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ViewCompiler.prototype._reflector;\n}\n/**\n * @record\n */\nfunction ViewBuilderFactory() { }\n/**\n * @record\n */\nfunction UpdateExpression() { }\n/** @type {?} */\nUpdateExpression.prototype.context;\n/** @type {?} */\nUpdateExpression.prototype.nodeIndex;\n/** @type {?} */\nUpdateExpression.prototype.bindingIndex;\n/** @type {?} */\nUpdateExpression.prototype.sourceSpan;\n/** @type {?} */\nUpdateExpression.prototype.value;\n/** @type {?} */\nconst LOG_VAR = o.variable('_l');\n/** @type {?} */\nconst VIEW_VAR = o.variable('_v');\n/** @type {?} */\nconst CHECK_VAR = o.variable('_ck');\n/** @type {?} */\nconst COMP_VAR = o.variable('_co');\n/** @type {?} */\nconst EVENT_NAME_VAR = o.variable('en');\n/** @type {?} */\nconst ALLOW_DEFAULT_VAR = o.variable(`ad`);\nclass ViewBuilder {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    constructor(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            o.DYNAMIC_TYPE : /** @type {?} */\n            ((o.expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    visitAll(variables, astNodes) {\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach((pipe) => {\n                if (pipe.pure) {\n                    this.purePipeNodeIndices[pipe.name] = this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            /** @type {?} */\n            const queryIds = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach((query, queryIndex) => {\n                /** @type {?} */\n                const queryId = queryIndex + 1;\n                /** @type {?} */\n                const bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                /** @type {?} */\n                const flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n                this.nodes.push(() => ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                        o.literal(flags), o.literal(queryId),\n                        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                    ])\n                }));\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(() => ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                    o.literal(0 /* None */), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                ])\n            }));\n        }\n    }\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    build(targetStatements = []) {\n        this.children.forEach((child) => child.build(targetStatements));\n        const { updateRendererStmts, updateDirectivesStmts, nodeDefExprs } = this._createNodeExpressions();\n        /** @type {?} */\n        const updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        /** @type {?} */\n        const updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        /** @type {?} */\n        let viewFlags = 0 /* None */;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        /** @type {?} */\n        const viewFactory = new o.DeclareFunctionStmt(this.viewName, [new o.FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n                o.literal(viewFlags),\n                o.literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], o.importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    }\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    _createUpdateFn(updateStmts) {\n        /** @type {?} */\n        let updateFn;\n        if (updateStmts.length > 0) {\n            /** @type {?} */\n            const preStmts = [];\n            if (!this.component.isHost && o.findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = o.fn([\n                new o.FnParam(/** @type {?} */ ((CHECK_VAR.name)), o.INFERRED_TYPE),\n                new o.FnParam(/** @type {?} */ ((VIEW_VAR.name)), o.INFERRED_TYPE)\n            ], [...preStmts, ...updateStmts], o.INFERRED_TYPE);\n        }\n        else {\n            updateFn = o.NULL_EXPR;\n        }\n        return updateFn;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNgContent(ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(() => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                o.literal(ast.ngContentIndex), o.literal(ast.index)\n            ])\n        }));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) {\n        /** @type {?} */\n        const checkIndex = -1;\n        this.nodes.push(() => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr([o.literal(ast.value)]),\n            ])\n        }));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBoundText(ast, context) {\n        /** @type {?} */\n        const nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        /** @type {?} */\n        const astWithSource = /** @type {?} */ (ast.value);\n        /** @type {?} */\n        const inter = /** @type {?} */ (astWithSource.ast);\n        /** @type {?} */\n        const updateRendererExpressions = inter.expressions.map((expr, bindingIndex) => this._preprocessUpdateExpression({ nodeIndex, bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }));\n        /** @type {?} */\n        const checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr(inter.strings.map(s => o.literal(s))),\n            ]),\n            updateRenderer: updateRendererExpressions\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) {\n        /** @type {?} */\n        const nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        const { flags, queryMatchesExpr, hostEvents } = this._visitElementOrTemplate(nodeIndex, ast);\n        /** @type {?} */\n        const childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        /** @type {?} */\n        const childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                this._createElementHandleEventFn(nodeIndex, hostEvents),\n                o.variable(childVisitor.viewName),\n            ])\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        /** @type {?} */\n        const nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        /** @type {?} */\n        const elName = isNgContainer(ast.name) ? null : ast.name;\n        const { flags, usedEvents, queryMatchesExpr, hostBindings: dirHostBindings, hostEvents } = this._visitElementOrTemplate(nodeIndex, ast);\n        /** @type {?} */\n        let inputDefs = [];\n        /** @type {?} */\n        let updateRendererExpressions = [];\n        /** @type {?} */\n        let outputDefs = [];\n        if (elName) {\n            /** @type {?} */\n            const hostBindings = ast.inputs\n                .map((inputAst) => ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst,\n                dirAst: /** @type {?} */ (null),\n            }))\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map((hostBinding, bindingIndex) => this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex,\n                        bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }));\n                inputDefs = hostBindings.map(hostBinding => elementBindingDef(hostBinding.inputAst, hostBinding.dirAst));\n            }\n            outputDefs = usedEvents.map(([target, eventName]) => o.literalArr([o.literal(target), o.literal(eventName)]));\n        }\n        templateVisitAll(this, ast.children);\n        /** @type {?} */\n        const childCount = this.nodes.length - nodeIndex - 1;\n        /** @type {?} */\n        const compAst = ast.directives.find(dirAst => dirAst.directive.isComponent);\n        /** @type {?} */\n        let compRendererType = /** @type {?} */ (o.NULL_EXPR);\n        /** @type {?} */\n        let compView = /** @type {?} */ (o.NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        /** @type {?} */\n        const checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                o.literal(elName),\n                elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n                inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n                this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        });\n    }\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    _visitElementOrTemplate(nodeIndex, ast) {\n        /** @type {?} */\n        let flags = 0 /* None */;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        /** @type {?} */\n        const usedEvents = new Map();\n        ast.outputs.forEach((event) => {\n            const { name, target } = elementEventNameAndTarget(event, null);\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach((dirAst) => {\n            dirAst.hostEvents.forEach((event) => {\n                const { name, target } = elementEventNameAndTarget(event, dirAst);\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        /** @type {?} */\n        const hostBindings = [];\n        /** @type {?} */\n        const hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach((providerAst, providerIndex) => {\n            /** @type {?} */\n            let dirAst = /** @type {?} */ ((undefined));\n            /** @type {?} */\n            let dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach((localDirAst, i) => {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                const { hostBindings: dirHostBindings, hostEvents: dirHostEvents } = this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((this.staticQueryIds.get(/** @type {?} */ (ast)))));\n                hostBindings.push(...dirHostBindings);\n                hostEvents.push(...dirHostEvents);\n            }\n            else {\n                this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        /** @type {?} */\n        let queryMatchExprs = [];\n        ast.queryMatches.forEach((match) => {\n            /** @type {?} */\n            let valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n            }\n        });\n        ast.references.forEach((ref) => {\n            /** @type {?} */\n            let valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach((outputAst) => {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n            hostBindings,\n            hostEvents: hostEvents\n        };\n    }\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    _visitDirective(providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        /** @type {?} */\n        const nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach((query, queryIndex) => {\n            /** @type {?} */\n            const queryId = dirAst.contentQueryStartId + queryIndex;\n            /** @type {?} */\n            const flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            /** @type {?} */\n            const bindingType = query.first ? 0 /* First */ : 1 /* All */;\n            this.nodes.push(() => ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                    o.literal(flags), o.literal(queryId),\n                    new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                ]),\n            }));\n        });\n        /** @type {?} */\n        const childCount = this.nodes.length - nodeIndex - 1;\n        let { flags, queryMatchExprs, providerExpr, depsExpr } = this._visitProviderOrDirective(providerAst, queryMatches);\n        refs.forEach((ref) => {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        /** @type {?} */\n        const inputDefs = dirAst.inputs.map((inputAst, inputIndex) => {\n            /** @type {?} */\n            const mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        /** @type {?} */\n        const outputDefs = [];\n        /** @type {?} */\n        const dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach((propName) => {\n            /** @type {?} */\n            const eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n            }\n        });\n        /** @type {?} */\n        let updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map((input, bindingIndex) => this._preprocessUpdateExpression({\n                    nodeIndex,\n                    bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }));\n        }\n        /** @type {?} */\n        const dirContextExpr = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n        /** @type {?} */\n        const hostBindings = dirAst.hostProperties.map((inputAst) => ({\n            context: dirContextExpr,\n            dirAst,\n            inputAst,\n        }));\n        /** @type {?} */\n        const hostEvents = dirAst.hostEvents.map((hostEventAst) => ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst,\n        }));\n        /** @type {?} */\n        const checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n                o.literal(childCount),\n                providerExpr,\n                depsExpr,\n                inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR,\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        });\n        return { hostBindings, hostEvents };\n    }\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    _visitProvider(providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    _visitComponentFactoryResolverProvider(directives) {\n        /** @type {?} */\n        const componentDirMeta = directives.find(dirAst => dirAst.directive.isComponent);\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            const { providerExpr, depsExpr, flags, tokenExpr } = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents);\n            this._addProviderNode({\n                providerExpr,\n                depsExpr,\n                flags,\n                tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    _addProviderNode(data) {\n        /** @type {?} */\n        const nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(() => ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n                o.literal(data.flags),\n                data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }));\n    }\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    _visitProviderOrDirective(providerAst, queryMatches) {\n        /** @type {?} */\n        let flags = 0 /* None */;\n        /** @type {?} */\n        let queryMatchExprs = [];\n        queryMatches.forEach((match) => {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(4 /* Provider */)]));\n            }\n        });\n        const { providerExpr, depsExpr, flags: providerFlags, tokenExpr } = providerDef(this.outputCtx, providerAst);\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs,\n            providerExpr,\n            depsExpr,\n            tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        /** @type {?} */\n        let currViewExpr = VIEW_VAR;\n        for (let currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n            /** @type {?} */\n            const refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n            }\n            /** @type {?} */\n            const varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n            if (varAst) {\n                /** @type {?} */\n                const varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    _createLiteralArrayConverter(sourceSpan, argCount) {\n        if (argCount === 0) {\n            /** @type {?} */\n            const valueExpr = o.importExpr(Identifiers.EMPTY_ARRAY);\n            return () => valueExpr;\n        }\n        /** @type {?} */\n        const checkIndex = this.nodes.length;\n        this.nodes.push(() => ({\n            sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([\n                o.literal(checkIndex),\n                o.literal(argCount),\n            ])\n        }));\n        return (args) => callCheckStmt(checkIndex, args);\n    }\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    _createLiteralMapConverter(sourceSpan, keys) {\n        if (keys.length === 0) {\n            /** @type {?} */\n            const valueExpr = o.importExpr(Identifiers.EMPTY_MAP);\n            return () => valueExpr;\n        }\n        /** @type {?} */\n        const map = o.literalMap(keys.map((e, i) => (Object.assign({}, e, { value: o.literal(i) }))));\n        /** @type {?} */\n        const checkIndex = this.nodes.length;\n        this.nodes.push(() => ({\n            sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([\n                o.literal(checkIndex),\n                map,\n            ])\n        }));\n        return (args) => callCheckStmt(checkIndex, args);\n    }\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    _createPipeConverter(expression, name, argCount) {\n        /** @type {?} */\n        const pipe = /** @type {?} */ ((this.usedPipes.find((pipeSummary) => pipeSummary.name === name)));\n        if (pipe.pure) {\n            /** @type {?} */\n            const checkIndex = this.nodes.length;\n            this.nodes.push(() => ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([\n                    o.literal(checkIndex),\n                    o.literal(argCount),\n                ])\n            }));\n            /** @type {?} */\n            let compViewExpr = VIEW_VAR;\n            /** @type {?} */\n            let compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n            }\n            /** @type {?} */\n            const pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            /** @type {?} */\n            const pipeValueExpr = o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n            return (args) => callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex, [pipeValueExpr].concat(args)));\n        }\n        else {\n            /** @type {?} */\n            const nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            /** @type {?} */\n            const nodeValueExpr = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n            return (args) => callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr.callMethod('transform', args));\n        }\n    }\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    _createPipe(sourceSpan, pipe) {\n        /** @type {?} */\n        const nodeIndex = this.nodes.length;\n        /** @type {?} */\n        let flags = 0 /* None */;\n        pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        /** @type {?} */\n        const depExprs = pipe.type.diDeps.map((diDep) => depDef(this.outputCtx, diDep));\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(() => ({\n            sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n                o.literal(flags), this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n            ])\n        }));\n        return nodeIndex;\n    }\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    _preprocessUpdateExpression(expression) {\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: (argCount) => this._createLiteralArrayConverter(expression.sourceSpan, argCount),\n                createLiteralMapConverter: (keys) => this._createLiteralMapConverter(expression.sourceSpan, keys),\n                createPipeConverter: (name, argCount) => this._createPipeConverter(expression, name, argCount)\n            }, expression.value)\n        };\n    }\n    /**\n     * @return {?}\n     */\n    _createNodeExpressions() {\n        /** @type {?} */\n        const self = this;\n        /** @type {?} */\n        let updateBindingCount = 0;\n        /** @type {?} */\n        const updateRendererStmts = [];\n        /** @type {?} */\n        const updateDirectivesStmts = [];\n        /** @type {?} */\n        const nodeDefExprs = this.nodes.map((factory, nodeIndex) => {\n            const { nodeDef, nodeFlags, updateDirectives, updateRenderer, sourceSpan } = factory();\n            if (updateRenderer) {\n                updateRendererStmts.push(...createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push(...createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            /** @type {?} */\n            const logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts, updateDirectivesStmts, nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            /** @type {?} */\n            const updateStmts = [];\n            /** @type {?} */\n            const exprs = expressions.map(({ sourceSpan, context, value }) => {\n                /** @type {?} */\n                const bindingId = `${updateBindingCount++}`;\n                /** @type {?} */\n                const nameResolver = context === COMP_VAR ? self : null;\n                const { stmts, currValExpr } = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General);\n                updateStmts.push(...stmts.map((stmt) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n                return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(o.applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    }\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    _createElementHandleEventFn(nodeIndex, handlers) {\n        /** @type {?} */\n        const handleEventStmts = [];\n        /** @type {?} */\n        let handleEventBindingCount = 0;\n        handlers.forEach(({ context, eventAst, dirAst }) => {\n            /** @type {?} */\n            const bindingId = `${handleEventBindingCount++}`;\n            /** @type {?} */\n            const nameResolver = context === COMP_VAR ? this : null;\n            const { stmts, allowDefault } = convertActionBinding(nameResolver, context, eventAst.handler, bindingId);\n            /** @type {?} */\n            const trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            const { target: eventTarget, name: eventName } = elementEventNameAndTarget(eventAst, dirAst);\n            /** @type {?} */\n            const fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        /** @type {?} */\n        let handleEventFn;\n        if (handleEventStmts.length > 0) {\n            /** @type {?} */\n            const preStmts = [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n            if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = o.fn([\n                new o.FnParam(/** @type {?} */ ((VIEW_VAR.name)), o.INFERRED_TYPE),\n                new o.FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), o.INFERRED_TYPE),\n                new o.FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), o.INFERRED_TYPE)\n            ], [...preStmts, ...handleEventStmts, new o.ReturnStatement(ALLOW_DEFAULT_VAR)], o.INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = o.NULL_EXPR;\n        }\n        return handleEventFn;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirective(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirectiveProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReference(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitVariable(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEvent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElementProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttr(ast, context) { }\n}\nif (false) {\n    /** @type {?} */\n    ViewBuilder.prototype.compType;\n    /** @type {?} */\n    ViewBuilder.prototype.nodes;\n    /** @type {?} */\n    ViewBuilder.prototype.purePipeNodeIndices;\n    /** @type {?} */\n    ViewBuilder.prototype.refNodeIndices;\n    /** @type {?} */\n    ViewBuilder.prototype.variables;\n    /** @type {?} */\n    ViewBuilder.prototype.children;\n    /** @type {?} */\n    ViewBuilder.prototype.viewName;\n    /** @type {?} */\n    ViewBuilder.prototype.reflector;\n    /** @type {?} */\n    ViewBuilder.prototype.outputCtx;\n    /** @type {?} */\n    ViewBuilder.prototype.parent;\n    /** @type {?} */\n    ViewBuilder.prototype.component;\n    /** @type {?} */\n    ViewBuilder.prototype.embeddedViewIndex;\n    /** @type {?} */\n    ViewBuilder.prototype.usedPipes;\n    /** @type {?} */\n    ViewBuilder.prototype.staticQueryIds;\n    /** @type {?} */\n    ViewBuilder.prototype.viewBuilderFactory;\n}\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    /** @type {?} */\n    const lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case 1 /* Attribute */:\n            return o.literalArr([\n                o.literal(1 /* TypeElementAttribute */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case 0 /* Property */:\n            return o.literalArr([\n                o.literal(8 /* TypeProperty */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case 4 /* Animation */:\n            /** @type {?} */\n            const bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return o.literalArr([\n                o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n            ]);\n        case 2 /* Class */:\n            return o.literalArr([o.literal(2 /* TypeElementClass */), o.literal(inputAst.name), o.NULL_EXPR]);\n        case 3 /* Style */:\n            return o.literalArr([\n                o.literal(4 /* TypeElementStyle */), o.literal(inputAst.name), o.literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    /** @type {?} */\n    const mapResult = Object.create(null);\n    elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(dirAst => {\n        Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n            /** @type {?} */\n            const value = dirAst.directive.hostAttributes[name];\n            /** @type {?} */\n            const prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return o.literalArr(Object.keys(mapResult).sort().map((attrName) => o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])])));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n        return `${attrValue1} ${attrValue2}`;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(1 /* Dynamic */), o.literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(0 /* Inline */), ...exprs]);\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return o.importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n    ]);\n}\n/**\n * @record\n */\nfunction StaticAndDynamicQueryIds() { }\n/** @type {?} */\nStaticAndDynamicQueryIds.prototype.staticQueryIds;\n/** @type {?} */\nStaticAndDynamicQueryIds.prototype.dynamicQueryIds;\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result = new Map()) {\n    nodes.forEach((node) => {\n        /** @type {?} */\n        const staticQueryIds = new Set();\n        /** @type {?} */\n        const dynamicQueryIds = new Set();\n        /** @type {?} */\n        let queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach((child) => {\n                /** @type {?} */\n                const childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n                childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach((child) => {\n                /** @type {?} */\n                const childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n                childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach((match) => staticQueryIds.add(match.queryId));\n        }\n        dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n        result.set(node, { staticQueryIds, dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    /** @type {?} */\n    const staticQueryIds = new Set();\n    /** @type {?} */\n    const dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach((entry) => {\n        entry.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n        entry.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n    });\n    dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n    return { staticQueryIds, dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: `@${eventAst.name}.${eventAst.phase}`,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    /** @type {?} */\n    let flags = 0 /* None */;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target, name) {\n    return target ? `${target}:${name}` : name;\n}\n//# sourceMappingURL=view_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output/output_ast';\nimport { error } from './util';\n/** @type {?} */\nconst CONSTANT_PREFIX = '_c';\n/** @type {?} */\nconst TRANSLATION_PREFIX = 'MSG_';\n/** @enum {number} */\nconst DefinitionKind = {\n    Injector: 0, Directive: 1, Component: 2, Pipe: 3,\n};\nexport { DefinitionKind };\n/** *\n * Closure uses `goog.getMsg(message)` to lookup translations\n  @type {?} */\nconst GOOG_GET_MSG = 'goog.getMsg';\n/** *\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n  @type {?} */\nconst KEY_CONTEXT = {};\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nclass FixupExpression extends o.Expression {\n    /**\n     * @param {?} resolved\n     */\n    constructor(resolved) {\n        super(resolved.type);\n        this.resolved = resolved;\n        this.original = resolved;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        if (context === KEY_CONTEXT) {\n            // When producing a key we want to traverse the constant not the\n            // variable used to refer to it.\n            return this.original.visitExpression(visitor, context);\n        }\n        else {\n            return this.resolved.visitExpression(visitor, context);\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    isEquivalent(e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    }\n    /**\n     * @return {?}\n     */\n    isConstant() { return true; }\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    fixup(expression) {\n        this.resolved = expression;\n        this.shared = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixupExpression.prototype.original;\n    /** @type {?} */\n    FixupExpression.prototype.shared;\n    /** @type {?} */\n    FixupExpression.prototype.resolved;\n}\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nexport class ConstantPool {\n    constructor() {\n        this.statements = [];\n        this.translations = new Map();\n        this.literals = new Map();\n        this.literalFactories = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.pipeDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    getConstLiteral(literal, forceShared) {\n        if (literal instanceof o.LiteralExpr || literal instanceof FixupExpression) {\n            // Do no put simple literals into the constant pool or try to produce a constant for a\n            // reference to a constant.\n            return literal;\n        }\n        /** @type {?} */\n        const key = this.keyOf(literal);\n        /** @type {?} */\n        let fixup = this.literals.get(key);\n        /** @type {?} */\n        let newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            /** @type {?} */\n            const name = this.freshName();\n            this.statements.push(o.variable(name).set(literal).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            fixup.fixup(o.variable(name));\n        }\n        return fixup;\n    }\n    /**\n     * @param {?} message\n     * @param {?} meta\n     * @return {?}\n     */\n    getTranslation(message, meta) {\n        /** @type {?} */\n        const key = meta.meaning ? `${message}\\u0000\\u0000${meta.meaning}` : message;\n        /** @type {?} */\n        const exp = this.translations.get(key);\n        if (exp) {\n            return exp;\n        }\n        /** @type {?} */\n        const docStmt = i18nMetaToDocStmt(meta);\n        if (docStmt) {\n            this.statements.push(docStmt);\n        }\n        /** @type {?} */\n        const variable = o.variable(this.freshTranslationName());\n        /** @type {?} */\n        const fnCall = o.variable(GOOG_GET_MSG).callFn([o.literal(message)]);\n        /** @type {?} */\n        const msgStmt = variable.set(fnCall).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n        this.statements.push(msgStmt);\n        this.translations.set(key, variable);\n        return variable;\n    }\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    getDefinition(type, kind, ctx, forceShared = false) {\n        /** @type {?} */\n        const definitions = this.definitionsOf(kind);\n        /** @type {?} */\n        let fixup = definitions.get(type);\n        /** @type {?} */\n        let newValue = false;\n        if (!fixup) {\n            /** @type {?} */\n            const property = this.propertyNameOf(kind);\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            definitions.set(type, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            /** @type {?} */\n            const name = this.freshName();\n            this.statements.push(o.variable(name).set(fixup.resolved).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            fixup.fixup(o.variable(name));\n        }\n        return fixup;\n    }\n    /**\n     * @param {?} literal\n     * @return {?}\n     */\n    getLiteralFactory(literal) {\n        // Create a pure function that builds an array of a mix of constant  and variable expressions\n        if (literal instanceof o.LiteralArrayExpr) {\n            /** @type {?} */\n            const argumentsForKey = literal.entries.map(e => e.isConstant() ? e : o.literal(null));\n            /** @type {?} */\n            const key = this.keyOf(o.literalArr(argumentsForKey));\n            return this._getLiteralFactory(key, literal.entries, entries => o.literalArr(entries));\n        }\n        else {\n            /** @type {?} */\n            const expressionForKey = o.literalMap(literal.entries.map(e => ({\n                key: e.key,\n                value: e.value.isConstant() ? e.value : o.literal(null),\n                quoted: e.quoted\n            })));\n            /** @type {?} */\n            const key = this.keyOf(expressionForKey);\n            return this._getLiteralFactory(key, literal.entries.map(e => e.value), entries => o.literalMap(entries.map((value, index) => ({\n                key: literal.entries[index].key,\n                value,\n                quoted: literal.entries[index].quoted\n            }))));\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} values\n     * @param {?} resultMap\n     * @return {?}\n     */\n    _getLiteralFactory(key, values, resultMap) {\n        /** @type {?} */\n        let literalFactory = this.literalFactories.get(key);\n        /** @type {?} */\n        const literalFactoryArguments = values.filter((e => !e.isConstant()));\n        if (!literalFactory) {\n            /** @type {?} */\n            const resultExpressions = values.map((e, index) => e.isConstant() ? this.getConstLiteral(e, true) : o.variable(`a${index}`));\n            /** @type {?} */\n            const parameters = resultExpressions.filter(isVariable).map(e => new o.FnParam(/** @type {?} */ ((e.name)), o.DYNAMIC_TYPE));\n            /** @type {?} */\n            const pureFunctionDeclaration = o.fn(parameters, [new o.ReturnStatement(resultMap(resultExpressions))], o.INFERRED_TYPE);\n            /** @type {?} */\n            const name = this.freshName();\n            this.statements.push(o.variable(name).set(pureFunctionDeclaration).toDeclStmt(o.INFERRED_TYPE, [\n                o.StmtModifier.Final\n            ]));\n            literalFactory = o.variable(name);\n            this.literalFactories.set(key, literalFactory);\n        }\n        return { literalFactory, literalFactoryArguments };\n    }\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    uniqueName(prefix) { return `${prefix}${this.nextNameIndex++}`; }\n    /**\n     * @param {?} kind\n     * @return {?}\n     */\n    definitionsOf(kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return this.componentDefinitions;\n            case 1 /* Directive */:\n                return this.directiveDefinitions;\n            case 0 /* Injector */:\n                return this.injectorDefinitions;\n            case 3 /* Pipe */:\n                return this.pipeDefinitions;\n        }\n        error(`Unknown definition kind ${kind}`);\n        return this.componentDefinitions;\n    }\n    /**\n     * @param {?} kind\n     * @return {?}\n     */\n    propertyNameOf(kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return 'ngComponentDef';\n            case 1 /* Directive */:\n                return 'ngDirectiveDef';\n            case 0 /* Injector */:\n                return 'ngInjectorDef';\n            case 3 /* Pipe */:\n                return 'ngPipeDef';\n        }\n        error(`Unknown definition kind ${kind}`);\n        return '<unknown>';\n    }\n    /**\n     * @return {?}\n     */\n    freshName() { return this.uniqueName(CONSTANT_PREFIX); }\n    /**\n     * @return {?}\n     */\n    freshTranslationName() {\n        return this.uniqueName(TRANSLATION_PREFIX).toUpperCase();\n    }\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    keyOf(expression) {\n        return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ConstantPool.prototype.statements;\n    /** @type {?} */\n    ConstantPool.prototype.translations;\n    /** @type {?} */\n    ConstantPool.prototype.literals;\n    /** @type {?} */\n    ConstantPool.prototype.literalFactories;\n    /** @type {?} */\n    ConstantPool.prototype.injectorDefinitions;\n    /** @type {?} */\n    ConstantPool.prototype.directiveDefinitions;\n    /** @type {?} */\n    ConstantPool.prototype.componentDefinitions;\n    /** @type {?} */\n    ConstantPool.prototype.pipeDefinitions;\n    /** @type {?} */\n    ConstantPool.prototype.nextNameIndex;\n}\n/**\n * Visitor used to determine if 2 expressions are equivalent and can be shared in the\n * `ConstantPool`.\n *\n * When the id (string) generated by the visitor is equal, expressions are considered equivalent.\n */\nclass KeyVisitor {\n    constructor() {\n        this.visitWrappedNodeExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    visitLiteralExpr(ast) {\n        return `${typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value}`;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, context) {\n        return `[${ast.entries.map(entry => entry.visitExpression(this, context)).join(',')}]`;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, context) {\n        /** @type {?} */\n        const mapKey = (entry) => {\n            /** @type {?} */\n            const quote = entry.quoted ? '\"' : '';\n            return `${quote}${entry.key}${quote}`;\n        };\n        /** @type {?} */\n        const mapEntry = (entry) => `${mapKey(entry)}:${entry.value.visitExpression(this, context)}`;\n        return `{${ast.entries.map(mapEntry).join(',')}`;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    visitExternalExpr(ast) {\n        return ast.value.moduleName ? `EX:${ast.value.moduleName}:${ast.value.name}` :\n            `EX:${ast.value.runtime.name}`;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    visitReadVarExpr(node) { return `VAR:${node.name}`; }\n    /**\n     * @param {?} node\n     * @param {?} context\n     * @return {?}\n     */\n    visitTypeofExpr(node, context) {\n        return `TYPEOF:${node.expr.visitExpression(this, context)}`;\n    }\n}\nif (false) {\n    /** @type {?} */\n    KeyVisitor.prototype.visitWrappedNodeExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitWriteVarExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitWriteKeyExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitWritePropExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitInvokeMethodExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitInvokeFunctionExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitInstantiateExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitConditionalExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitNotExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitAssertNotNullExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitCastExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitFunctionExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitBinaryOperatorExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitReadPropExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitReadKeyExpr;\n    /** @type {?} */\n    KeyVisitor.prototype.visitCommaExpr;\n}\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid(arg) {\n    throw new Error(`Invalid state: Visitor ${this.constructor.name} doesn't handle ${arg.constructor.name}`);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nfunction isVariable(e) {\n    return e instanceof o.ReadVarExpr;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction i18nMetaToDocStmt(meta) {\n    /** @type {?} */\n    const tags = [];\n    if (meta.description) {\n        tags.push({ tagName: \"desc\" /* Desc */, text: meta.description });\n    }\n    if (meta.meaning) {\n        tags.push({ tagName: \"meaning\" /* Meaning */, text: meta.meaning });\n    }\n    return tags.length == 0 ? null : new o.JSDocCommentStmt(tags);\n}\n//# sourceMappingURL=constant_pool.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { extractMessages } from './extractor_merger';\nimport * as i18n from './i18n_ast';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    constructor(_htmlParser, _implicitTags, _implicitAttrs, _locale = null) {\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    updateFromTemplate(html, url, interpolationConfig) {\n        /** @type {?} */\n        const htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        /** @type {?} */\n        const i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        this._messages.push(...i18nParserResult.messages);\n        return [];\n    }\n    /**\n     * @return {?}\n     */\n    getMessages() { return this._messages; }\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    write(serializer, filterSources) {\n        /** @type {?} */\n        const messages = {};\n        /** @type {?} */\n        const mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(message => {\n            /** @type {?} */\n            const id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                messages[id].sources.push(...message.sources);\n            }\n        });\n        /** @type {?} */\n        const msgList = Object.keys(messages).map(id => {\n            /** @type {?} */\n            const mapper = serializer.createNameMapper(messages[id]);\n            /** @type {?} */\n            const src = messages[id];\n            /** @type {?} */\n            const nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            /** @type {?} */\n            let transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach((source) => source.filePath = filterSources(source.filePath));\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    }\n}\nif (false) {\n    /** @type {?} */\n    MessageBundle.prototype._messages;\n    /** @type {?} */\n    MessageBundle.prototype._htmlParser;\n    /** @type {?} */\n    MessageBundle.prototype._implicitTags;\n    /** @type {?} */\n    MessageBundle.prototype._implicitAttrs;\n    /** @type {?} */\n    MessageBundle.prototype._locale;\n}\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    convert(nodes, mapper) {\n        return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, mapper) {\n        /** @type {?} */\n        const startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        /** @type {?} */\n        const closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        /** @type {?} */\n        const children = ph.children.map(n => n.visit(this, mapper));\n        return new i18n.TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    visitPlaceholder(ph, mapper) {\n        return new i18n.Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, mapper) {\n        return new i18n.IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    }\n}\n//# sourceMappingURL=message_bundle.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\n/** @typedef {?} */\nvar MapEntry;\nexport { MapEntry };\n/** @typedef {?} */\nvar MapLiteral;\nexport { MapLiteral };\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nexport function mapEntry(key, value) {\n    return { key, value, quoted: false };\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function mapLiteral(obj) {\n    return o.literalMap(Object.keys(obj).map(key => ({\n        key,\n        quoted: false,\n        value: obj[key],\n    })));\n}\n//# sourceMappingURL=map_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst CORE = '@angular/core';\nexport class Identifiers {\n}\n/* Methods */\nIdentifiers.NEW_METHOD = 'factory';\nIdentifiers.TRANSFORM_METHOD = 'transform';\nIdentifiers.PATCH_DEPS = 'patchedDeps';\n/* Instructions */\nIdentifiers.namespaceHTML = { name: 'ɵNH', moduleName: CORE };\nIdentifiers.namespaceMathML = { name: 'ɵNM', moduleName: CORE };\nIdentifiers.namespaceSVG = { name: 'ɵNS', moduleName: CORE };\nIdentifiers.element = { name: 'ɵEe', moduleName: CORE };\nIdentifiers.elementStart = { name: 'ɵE', moduleName: CORE };\nIdentifiers.elementEnd = { name: 'ɵe', moduleName: CORE };\nIdentifiers.elementProperty = { name: 'ɵp', moduleName: CORE };\nIdentifiers.elementAttribute = { name: 'ɵa', moduleName: CORE };\nIdentifiers.elementClassProp = { name: 'ɵcp', moduleName: CORE };\nIdentifiers.elementStyling = { name: 'ɵs', moduleName: CORE };\nIdentifiers.elementStylingMap = { name: 'ɵsm', moduleName: CORE };\nIdentifiers.elementStyleProp = { name: 'ɵsp', moduleName: CORE };\nIdentifiers.elementStylingApply = { name: 'ɵsa', moduleName: CORE };\nIdentifiers.containerCreate = { name: 'ɵC', moduleName: CORE };\nIdentifiers.text = { name: 'ɵT', moduleName: CORE };\nIdentifiers.textBinding = { name: 'ɵt', moduleName: CORE };\nIdentifiers.bind = { name: 'ɵb', moduleName: CORE };\nIdentifiers.interpolation1 = { name: 'ɵi1', moduleName: CORE };\nIdentifiers.interpolation2 = { name: 'ɵi2', moduleName: CORE };\nIdentifiers.interpolation3 = { name: 'ɵi3', moduleName: CORE };\nIdentifiers.interpolation4 = { name: 'ɵi4', moduleName: CORE };\nIdentifiers.interpolation5 = { name: 'ɵi5', moduleName: CORE };\nIdentifiers.interpolation6 = { name: 'ɵi6', moduleName: CORE };\nIdentifiers.interpolation7 = { name: 'ɵi7', moduleName: CORE };\nIdentifiers.interpolation8 = { name: 'ɵi8', moduleName: CORE };\nIdentifiers.interpolationV = { name: 'ɵiV', moduleName: CORE };\nIdentifiers.pureFunction0 = { name: 'ɵf0', moduleName: CORE };\nIdentifiers.pureFunction1 = { name: 'ɵf1', moduleName: CORE };\nIdentifiers.pureFunction2 = { name: 'ɵf2', moduleName: CORE };\nIdentifiers.pureFunction3 = { name: 'ɵf3', moduleName: CORE };\nIdentifiers.pureFunction4 = { name: 'ɵf4', moduleName: CORE };\nIdentifiers.pureFunction5 = { name: 'ɵf5', moduleName: CORE };\nIdentifiers.pureFunction6 = { name: 'ɵf6', moduleName: CORE };\nIdentifiers.pureFunction7 = { name: 'ɵf7', moduleName: CORE };\nIdentifiers.pureFunction8 = { name: 'ɵf8', moduleName: CORE };\nIdentifiers.pureFunctionV = { name: 'ɵfV', moduleName: CORE };\nIdentifiers.pipeBind1 = { name: 'ɵpb1', moduleName: CORE };\nIdentifiers.pipeBind2 = { name: 'ɵpb2', moduleName: CORE };\nIdentifiers.pipeBind3 = { name: 'ɵpb3', moduleName: CORE };\nIdentifiers.pipeBind4 = { name: 'ɵpb4', moduleName: CORE };\nIdentifiers.pipeBindV = { name: 'ɵpbV', moduleName: CORE };\nIdentifiers.load = { name: 'ɵld', moduleName: CORE };\nIdentifiers.loadDirective = { name: 'ɵd', moduleName: CORE };\nIdentifiers.loadQueryList = { name: 'ɵql', moduleName: CORE };\nIdentifiers.pipe = { name: 'ɵPp', moduleName: CORE };\nIdentifiers.projection = { name: 'ɵP', moduleName: CORE };\nIdentifiers.projectionDef = { name: 'ɵpD', moduleName: CORE };\nIdentifiers.inject = { name: 'inject', moduleName: CORE };\nIdentifiers.injectAttribute = { name: 'ɵinjectAttribute', moduleName: CORE };\nIdentifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE };\nIdentifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE };\nIdentifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE };\nIdentifiers.injectChangeDetectorRef = { name: 'ɵinjectChangeDetectorRef', moduleName: CORE };\nIdentifiers.directiveInject = { name: 'ɵdirectiveInject', moduleName: CORE };\nIdentifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE };\nIdentifiers.ComponentDef = {\n    name: 'ɵComponentDef',\n    moduleName: CORE,\n};\nIdentifiers.defineDirective = {\n    name: 'ɵdefineDirective',\n    moduleName: CORE,\n};\nIdentifiers.DirectiveDef = {\n    name: 'ɵDirectiveDef',\n    moduleName: CORE,\n};\nIdentifiers.InjectorDef = {\n    name: 'ɵInjectorDef',\n    moduleName: CORE,\n};\nIdentifiers.defineInjector = {\n    name: 'defineInjector',\n    moduleName: CORE,\n};\nIdentifiers.NgModuleDef = {\n    name: 'ɵNgModuleDef',\n    moduleName: CORE,\n};\nIdentifiers.defineNgModule = { name: 'ɵdefineNgModule', moduleName: CORE };\nIdentifiers.PipeDef = { name: 'ɵPipeDef', moduleName: CORE };\nIdentifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE };\nIdentifiers.query = { name: 'ɵQ', moduleName: CORE };\nIdentifiers.queryRefresh = { name: 'ɵqR', moduleName: CORE };\nIdentifiers.registerContentQuery = { name: 'ɵQr', moduleName: CORE };\nIdentifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE };\nIdentifiers.InheritDefinitionFeature = { name: 'ɵInheritDefinitionFeature', moduleName: CORE };\nIdentifiers.listener = { name: 'ɵL', moduleName: CORE };\n// Reserve slots for pure functions\nIdentifiers.reserveSlots = { name: 'ɵrS', moduleName: CORE };\n// sanitization-related functions\nIdentifiers.sanitizeHtml = { name: 'ɵzh', moduleName: CORE };\nIdentifiers.sanitizeStyle = { name: 'ɵzs', moduleName: CORE };\nIdentifiers.defaultStyleSanitizer = { name: 'ɵzss', moduleName: CORE };\nIdentifiers.sanitizeResourceUrl = { name: 'ɵzr', moduleName: CORE };\nIdentifiers.sanitizeScript = { name: 'ɵzc', moduleName: CORE };\nIdentifiers.sanitizeUrl = { name: 'ɵzu', moduleName: CORE };\nif (false) {\n    /** @type {?} */\n    Identifiers.NEW_METHOD;\n    /** @type {?} */\n    Identifiers.TRANSFORM_METHOD;\n    /** @type {?} */\n    Identifiers.PATCH_DEPS;\n    /** @type {?} */\n    Identifiers.namespaceHTML;\n    /** @type {?} */\n    Identifiers.namespaceMathML;\n    /** @type {?} */\n    Identifiers.namespaceSVG;\n    /** @type {?} */\n    Identifiers.element;\n    /** @type {?} */\n    Identifiers.elementStart;\n    /** @type {?} */\n    Identifiers.elementEnd;\n    /** @type {?} */\n    Identifiers.elementProperty;\n    /** @type {?} */\n    Identifiers.elementAttribute;\n    /** @type {?} */\n    Identifiers.elementClassProp;\n    /** @type {?} */\n    Identifiers.elementStyling;\n    /** @type {?} */\n    Identifiers.elementStylingMap;\n    /** @type {?} */\n    Identifiers.elementStyleProp;\n    /** @type {?} */\n    Identifiers.elementStylingApply;\n    /** @type {?} */\n    Identifiers.containerCreate;\n    /** @type {?} */\n    Identifiers.text;\n    /** @type {?} */\n    Identifiers.textBinding;\n    /** @type {?} */\n    Identifiers.bind;\n    /** @type {?} */\n    Identifiers.interpolation1;\n    /** @type {?} */\n    Identifiers.interpolation2;\n    /** @type {?} */\n    Identifiers.interpolation3;\n    /** @type {?} */\n    Identifiers.interpolation4;\n    /** @type {?} */\n    Identifiers.interpolation5;\n    /** @type {?} */\n    Identifiers.interpolation6;\n    /** @type {?} */\n    Identifiers.interpolation7;\n    /** @type {?} */\n    Identifiers.interpolation8;\n    /** @type {?} */\n    Identifiers.interpolationV;\n    /** @type {?} */\n    Identifiers.pureFunction0;\n    /** @type {?} */\n    Identifiers.pureFunction1;\n    /** @type {?} */\n    Identifiers.pureFunction2;\n    /** @type {?} */\n    Identifiers.pureFunction3;\n    /** @type {?} */\n    Identifiers.pureFunction4;\n    /** @type {?} */\n    Identifiers.pureFunction5;\n    /** @type {?} */\n    Identifiers.pureFunction6;\n    /** @type {?} */\n    Identifiers.pureFunction7;\n    /** @type {?} */\n    Identifiers.pureFunction8;\n    /** @type {?} */\n    Identifiers.pureFunctionV;\n    /** @type {?} */\n    Identifiers.pipeBind1;\n    /** @type {?} */\n    Identifiers.pipeBind2;\n    /** @type {?} */\n    Identifiers.pipeBind3;\n    /** @type {?} */\n    Identifiers.pipeBind4;\n    /** @type {?} */\n    Identifiers.pipeBindV;\n    /** @type {?} */\n    Identifiers.load;\n    /** @type {?} */\n    Identifiers.loadDirective;\n    /** @type {?} */\n    Identifiers.loadQueryList;\n    /** @type {?} */\n    Identifiers.pipe;\n    /** @type {?} */\n    Identifiers.projection;\n    /** @type {?} */\n    Identifiers.projectionDef;\n    /** @type {?} */\n    Identifiers.inject;\n    /** @type {?} */\n    Identifiers.injectAttribute;\n    /** @type {?} */\n    Identifiers.injectElementRef;\n    /** @type {?} */\n    Identifiers.injectTemplateRef;\n    /** @type {?} */\n    Identifiers.injectViewContainerRef;\n    /** @type {?} */\n    Identifiers.injectChangeDetectorRef;\n    /** @type {?} */\n    Identifiers.directiveInject;\n    /** @type {?} */\n    Identifiers.defineComponent;\n    /** @type {?} */\n    Identifiers.ComponentDef;\n    /** @type {?} */\n    Identifiers.defineDirective;\n    /** @type {?} */\n    Identifiers.DirectiveDef;\n    /** @type {?} */\n    Identifiers.InjectorDef;\n    /** @type {?} */\n    Identifiers.defineInjector;\n    /** @type {?} */\n    Identifiers.NgModuleDef;\n    /** @type {?} */\n    Identifiers.defineNgModule;\n    /** @type {?} */\n    Identifiers.PipeDef;\n    /** @type {?} */\n    Identifiers.definePipe;\n    /** @type {?} */\n    Identifiers.query;\n    /** @type {?} */\n    Identifiers.queryRefresh;\n    /** @type {?} */\n    Identifiers.registerContentQuery;\n    /** @type {?} */\n    Identifiers.NgOnChangesFeature;\n    /** @type {?} */\n    Identifiers.InheritDefinitionFeature;\n    /** @type {?} */\n    Identifiers.listener;\n    /** @type {?} */\n    Identifiers.reserveSlots;\n    /** @type {?} */\n    Identifiers.sanitizeHtml;\n    /** @type {?} */\n    Identifiers.sanitizeStyle;\n    /** @type {?} */\n    Identifiers.defaultStyleSanitizer;\n    /** @type {?} */\n    Identifiers.sanitizeResourceUrl;\n    /** @type {?} */\n    Identifiers.sanitizeScript;\n    /** @type {?} */\n    Identifiers.sanitizeUrl;\n}\n//# sourceMappingURL=r3_identifiers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from '../../output/output_ast';\n/** *\n * Name of the temporary to use during data binding\n  @type {?} */\nexport const TEMPORARY_NAME = '_t';\n/** *\n * Name of the context parameter passed into a template function\n  @type {?} */\nexport const CONTEXT_NAME = 'ctx';\n/** *\n * Name of the RenderFlag passed into a template function\n  @type {?} */\nexport const RENDER_FLAGS = 'rf';\n/** *\n * The prefix reference variables\n  @type {?} */\nexport const REFERENCE_PREFIX = '_r';\n/** *\n * The name of the implicit context reference\n  @type {?} */\nexport const IMPLICIT_REFERENCE = '$implicit';\n/** *\n * Name of the i18n attributes *\n  @type {?} */\nexport const I18N_ATTR = 'i18n';\n/** @type {?} */\nexport const I18N_ATTR_PREFIX = 'i18n-';\n/** *\n * I18n separators for metadata *\n  @type {?} */\nexport const MEANING_SEPARATOR = '|';\n/** @type {?} */\nexport const ID_SEPARATOR = '@@';\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n * @param {?} statements\n * @param {?} name\n * @return {?}\n */\nexport function temporaryAllocator(statements, name) {\n    /** @type {?} */\n    let temp = null;\n    return () => {\n        if (!temp) {\n            statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n            temp = o.variable(name);\n        }\n        return temp;\n    };\n}\n/**\n * @param {?} feature\n * @return {?}\n */\nexport function unsupported(feature) {\n    if (this) {\n        throw new Error(`Builder ${this.constructor.name} doesn't support ${feature} yet`);\n    }\n    throw new Error(`Feature ${feature} is not supported yet`);\n}\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nexport function invalid(arg) {\n    throw new Error(`Invalid state: Visitor ${this.constructor.name} doesn't handle ${o.constructor.name}`);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function asLiteral(value) {\n    if (Array.isArray(value)) {\n        return o.literalArr(value.map(asLiteral));\n    }\n    return o.literal(value, o.INFERRED_TYPE);\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nexport function conditionallyCreateMapObjectLiteral(keys) {\n    if (Object.getOwnPropertyNames(keys).length > 0) {\n        return mapToExpression(keys);\n    }\n    return null;\n}\n/**\n * @param {?} map\n * @param {?=} quoted\n * @return {?}\n */\nexport function mapToExpression(map, quoted = false) {\n    return o.literalMap(Object.getOwnPropertyNames(map).map(key => ({ key, quoted, value: asLiteral(map[key]) })));\n}\n/**\n *  Remove trailing null nodes as they are implied.\n * @param {?} parameters\n * @return {?}\n */\nexport function trimTrailingNulls(parameters) {\n    while (o.isNull(parameters[parameters.length - 1])) {\n        parameters.pop();\n    }\n    return parameters;\n}\n/**\n * @param {?} query\n * @param {?} constantPool\n * @return {?}\n */\nexport function getQueryPredicate(query, constantPool) {\n    if (Array.isArray(query.predicate)) {\n        return constantPool.getConstLiteral(o.literalArr(query.predicate.map(selector => /** @type {?} */ (o.literal(selector)))));\n    }\n    else {\n        return query.predicate;\n    }\n}\n/**\n * @return {?}\n */\nexport function noop() { }\nexport class DefinitionMap {\n    constructor() {\n        this.values = [];\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    set(key, value) {\n        if (value) {\n            this.values.push({ key, value, quoted: false });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toLiteralMap() { return o.literalMap(this.values); }\n}\nif (false) {\n    /** @type {?} */\n    DefinitionMap.prototype.values;\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport { tokenReference } from '../compile_metadata';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nimport { Identifiers as R3 } from '../render3/r3_identifiers';\nimport { unsupported } from './view/util';\n/**\n * Metadata required by the factory generator to generate a `factory` function for a type.\n * @record\n */\nexport function R3FactoryMetadata() { }\n/**\n * String name of the type being generated (used to name the factory function).\n * @type {?}\n */\nR3FactoryMetadata.prototype.name;\n/**\n * An expression representing the function (or constructor) which will instantiate the requested\n * type.\n *\n * This could be a reference to a constructor type, or to a user-defined factory function. The\n * `useNew` property determines whether it will be called as a constructor or not.\n * @type {?}\n */\nR3FactoryMetadata.prototype.fnOrClass;\n/**\n * Regardless of whether `fnOrClass` is a constructor function or a user-defined factory, it\n * may have 0 or more parameters, which will be injected according to the `R3DependencyMetadata`\n * for those parameters.\n * @type {?}\n */\nR3FactoryMetadata.prototype.deps;\n/**\n * Whether to interpret `fnOrClass` as a constructor function (`useNew: true`) or as a factory\n * (`useNew: false`).\n * @type {?}\n */\nR3FactoryMetadata.prototype.useNew;\n/**\n * An expression for the function which will be used to inject dependencies. The API of this\n * function could be different, and other options control how it will be invoked.\n * @type {?}\n */\nR3FactoryMetadata.prototype.injectFn;\n/** @enum {number} */\nconst R3ResolvedDependencyType = {\n    /**\n       * A normal token dependency.\n       */\n    Token: 0,\n    /**\n       * The dependency is for an attribute.\n       *\n       * The token expression is a string representing the attribute name.\n       */\n    Attribute: 1,\n    /**\n       * The dependency is for the `Injector` type itself.\n       */\n    Injector: 2,\n    /**\n       * The dependency is for `ElementRef`.\n       */\n    ElementRef: 3,\n    /**\n       * The dependency is for `TemplateRef`.\n       */\n    TemplateRef: 4,\n    /**\n       * The dependency is for `ViewContainerRef`.\n       */\n    ViewContainerRef: 5,\n    /**\n       * The dependency is for `ChangeDetectorRef`.\n       */\n    ChangeDetectorRef: 6,\n};\nexport { R3ResolvedDependencyType };\nR3ResolvedDependencyType[R3ResolvedDependencyType.Token] = 'Token';\nR3ResolvedDependencyType[R3ResolvedDependencyType.Attribute] = 'Attribute';\nR3ResolvedDependencyType[R3ResolvedDependencyType.Injector] = 'Injector';\nR3ResolvedDependencyType[R3ResolvedDependencyType.ElementRef] = 'ElementRef';\nR3ResolvedDependencyType[R3ResolvedDependencyType.TemplateRef] = 'TemplateRef';\nR3ResolvedDependencyType[R3ResolvedDependencyType.ViewContainerRef] = 'ViewContainerRef';\nR3ResolvedDependencyType[R3ResolvedDependencyType.ChangeDetectorRef] = 'ChangeDetectorRef';\n/**\n * Metadata representing a single dependency to be injected into a constructor or function call.\n * @record\n */\nexport function R3DependencyMetadata() { }\n/**\n * An expression representing the token or value to be injected.\n * @type {?}\n */\nR3DependencyMetadata.prototype.token;\n/**\n * An enum indicating whether this dependency has special meaning to Angular and needs to be\n * injected specially.\n * @type {?}\n */\nR3DependencyMetadata.prototype.resolved;\n/**\n * Whether the dependency has an \\@Host qualifier.\n * @type {?}\n */\nR3DependencyMetadata.prototype.host;\n/**\n * Whether the dependency has an \\@Optional qualifier.\n * @type {?}\n */\nR3DependencyMetadata.prototype.optional;\n/**\n * Whether the dependency has an \\@Self qualifier.\n * @type {?}\n */\nR3DependencyMetadata.prototype.self;\n/**\n * Whether the dependency has an \\@SkipSelf qualifier.\n * @type {?}\n */\nR3DependencyMetadata.prototype.skipSelf;\n/**\n * Construct a factory function expression for the given `R3FactoryMetadata`.\n * @param {?} meta\n * @return {?}\n */\nexport function compileFactoryFunction(meta) {\n    /** @type {?} */\n    const args = meta.deps.map(dep => compileInjectDependency(dep, meta.injectFn));\n    /** @type {?} */\n    const expr = meta.useNew ? new o.InstantiateExpr(meta.fnOrClass, args) :\n        new o.InvokeFunctionExpr(meta.fnOrClass, args);\n    return o.fn([], [new o.ReturnStatement(expr)], o.INFERRED_TYPE, undefined, `${meta.name}_Factory`);\n}\n/**\n * @param {?} dep\n * @param {?} injectFn\n * @return {?}\n */\nfunction compileInjectDependency(dep, injectFn) {\n    // Interpret the dependency according to its resolved type.\n    switch (dep.resolved) {\n        case R3ResolvedDependencyType.Token:\n        case R3ResolvedDependencyType.Injector: {\n            /** @type {?} */\n            const flags = 0 /* Default */ | (dep.self ? 2 /* Self */ : 0) |\n                (dep.skipSelf ? 4 /* SkipSelf */ : 0) | (dep.host ? 1 /* Host */ : 0) |\n                (dep.optional ? 8 /* Optional */ : 0);\n            /** @type {?} */\n            let token = dep.token;\n            if (dep.resolved === R3ResolvedDependencyType.Injector) {\n                token = o.importExpr(Identifiers.INJECTOR);\n            }\n            /** @type {?} */\n            const injectArgs = [token];\n            // If this dependency is optional or otherwise has non-default flags, then additional\n            // parameters describing how to inject the dependency must be passed to the inject function\n            // that's being used.\n            if (flags !== 0 /* Default */ || dep.optional) {\n                injectArgs.push(o.literal(flags));\n            }\n            return o.importExpr(injectFn).callFn(injectArgs);\n        }\n        case R3ResolvedDependencyType.Attribute:\n            // In the case of attributes, the attribute name in question is given as the token.\n            return o.importExpr(R3.injectAttribute).callFn([dep.token]);\n        case R3ResolvedDependencyType.ElementRef:\n            return o.importExpr(R3.injectElementRef).callFn([]);\n        case R3ResolvedDependencyType.TemplateRef:\n            return o.importExpr(R3.injectTemplateRef).callFn([]);\n        case R3ResolvedDependencyType.ViewContainerRef:\n            return o.importExpr(R3.injectViewContainerRef).callFn([]);\n        case R3ResolvedDependencyType.ChangeDetectorRef:\n            return o.importExpr(R3.injectChangeDetectorRef).callFn([]);\n        default:\n            return unsupported(`Unknown R3ResolvedDependencyType: ${R3ResolvedDependencyType[dep.resolved]}`);\n    }\n}\n/**\n * A helper function useful for extracting `R3DependencyMetadata` from a Render2\n * `CompileTypeMetadata` instance.\n * @param {?} type\n * @param {?} outputCtx\n * @param {?} reflector\n * @return {?}\n */\nexport function dependenciesFromGlobalMetadata(type, outputCtx, reflector) {\n    /** @type {?} */\n    const elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    /** @type {?} */\n    const templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    /** @type {?} */\n    const viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    /** @type {?} */\n    const injectorRef = reflector.resolveExternalReference(Identifiers.Injector);\n    /** @type {?} */\n    const deps = [];\n    for (let dependency of type.diDeps) {\n        if (dependency.token) {\n            /** @type {?} */\n            const tokenRef = tokenReference(dependency.token);\n            /** @type {?} */\n            let resolved = R3ResolvedDependencyType.Token;\n            if (tokenRef === elementRef) {\n                resolved = R3ResolvedDependencyType.ElementRef;\n            }\n            else if (tokenRef === templateRef) {\n                resolved = R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (tokenRef === viewContainerRef) {\n                resolved = R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else if (tokenRef === injectorRef) {\n                resolved = R3ResolvedDependencyType.Injector;\n            }\n            else if (dependency.isAttribute) {\n                resolved = R3ResolvedDependencyType.Attribute;\n            }\n            /** @type {?} */\n            const token = tokenRef instanceof StaticSymbol ? outputCtx.importExpr(tokenRef) : o.literal(tokenRef);\n            // Construct the dependency.\n            deps.push({\n                token,\n                resolved,\n                host: !!dependency.isHost,\n                optional: !!dependency.isOptional,\n                self: !!dependency.isSelf,\n                skipSelf: !!dependency.isSkipSelf,\n            });\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return deps;\n}\n//# sourceMappingURL=r3_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport * as o from '../output/output_ast';\n/**\n * Convert an object map with `Expression` values into a `LiteralMapExpr`.\n * @param {?} map\n * @return {?}\n */\nexport function mapToMapExpression(map) {\n    /** @type {?} */\n    const result = Object.keys(map).map(key => ({ key, value: map[key], quoted: false }));\n    return o.literalMap(result);\n}\n/**\n * Convert metadata into an `Expression` in the given `OutputContext`.\n *\n * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.\n * @param {?} meta\n * @param {?} ctx\n * @return {?}\n */\nexport function convertMetaToOutput(meta, ctx) {\n    if (Array.isArray(meta)) {\n        return o.literalArr(meta.map(entry => convertMetaToOutput(entry, ctx)));\n    }\n    if (meta instanceof StaticSymbol) {\n        return ctx.importExpr(meta);\n    }\n    if (meta == null) {\n        return o.literal(meta);\n    }\n    throw new Error(`Internal error: Unsupported or unknown metadata: ${meta}`);\n}\n/**\n * @param {?} type\n * @param {?} numParams\n * @return {?}\n */\nexport function typeWithParameters(type, numParams) {\n    /** @type {?} */\n    let params = null;\n    if (numParams > 0) {\n        params = [];\n        for (let i = 0; i < numParams; i++) {\n            params.push(o.DYNAMIC_TYPE);\n        }\n    }\n    return o.expressionType(type, null, params);\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport { mapLiteral } from '../output/map_util';\nimport * as o from '../output/output_ast';\nimport { compileFactoryFunction } from './r3_factory';\nimport { Identifiers as R3 } from './r3_identifiers';\nimport { convertMetaToOutput, mapToMapExpression } from './util';\n/**\n * @record\n */\nexport function R3NgModuleDef() { }\n/** @type {?} */\nR3NgModuleDef.prototype.expression;\n/** @type {?} */\nR3NgModuleDef.prototype.type;\n/** @type {?} */\nR3NgModuleDef.prototype.additionalStatements;\n/**\n * Metadata required by the module compiler to generate a `ngModuleDef` for a type.\n * @record\n */\nexport function R3NgModuleMetadata() { }\n/**\n * An expression representing the module type being compiled.\n * @type {?}\n */\nR3NgModuleMetadata.prototype.type;\n/**\n * An array of expressions representing the bootstrap components specified by the module.\n * @type {?}\n */\nR3NgModuleMetadata.prototype.bootstrap;\n/**\n * An array of expressions representing the directives and pipes declared by the module.\n * @type {?}\n */\nR3NgModuleMetadata.prototype.declarations;\n/**\n * An array of expressions representing the imports of the module.\n * @type {?}\n */\nR3NgModuleMetadata.prototype.imports;\n/**\n * An array of expressions representing the exports of the module.\n * @type {?}\n */\nR3NgModuleMetadata.prototype.exports;\n/**\n * Whether to emit the selector scope values (declarations, imports, exports) inline into the\n * module definition, or to generate additional statements which patch them on. Inline emission\n * does not allow components to be tree-shaken, but is useful for JIT mode.\n * @type {?}\n */\nR3NgModuleMetadata.prototype.emitInline;\n/**\n * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.\n * @param {?} meta\n * @return {?}\n */\nexport function compileNgModule(meta) {\n    const { type: moduleType, bootstrap, declarations, imports, exports } = meta;\n    /** @type {?} */\n    const expression = o.importExpr(R3.defineNgModule).callFn([mapToMapExpression({\n            type: moduleType,\n            bootstrap: o.literalArr(bootstrap),\n            declarations: o.literalArr(declarations),\n            imports: o.literalArr(imports),\n            exports: o.literalArr(exports),\n        })]);\n    /** @type {?} */\n    const type = new o.ExpressionType(o.importExpr(R3.NgModuleDef, [\n        new o.ExpressionType(moduleType), tupleTypeOf(declarations), tupleTypeOf(imports),\n        tupleTypeOf(exports)\n    ]));\n    /** @type {?} */\n    const additionalStatements = [];\n    return { expression, type, additionalStatements };\n}\n/**\n * @record\n */\nexport function R3InjectorDef() { }\n/** @type {?} */\nR3InjectorDef.prototype.expression;\n/** @type {?} */\nR3InjectorDef.prototype.type;\n/**\n * @record\n */\nexport function R3InjectorMetadata() { }\n/** @type {?} */\nR3InjectorMetadata.prototype.name;\n/** @type {?} */\nR3InjectorMetadata.prototype.type;\n/** @type {?} */\nR3InjectorMetadata.prototype.deps;\n/** @type {?} */\nR3InjectorMetadata.prototype.providers;\n/** @type {?} */\nR3InjectorMetadata.prototype.imports;\n/**\n * @param {?} meta\n * @return {?}\n */\nexport function compileInjector(meta) {\n    /** @type {?} */\n    const expression = o.importExpr(R3.defineInjector).callFn([mapToMapExpression({\n            factory: compileFactoryFunction({\n                name: meta.name,\n                fnOrClass: meta.type,\n                deps: meta.deps,\n                useNew: true,\n                injectFn: R3.inject,\n            }),\n            providers: meta.providers,\n            imports: meta.imports,\n        })]);\n    /** @type {?} */\n    const type = new o.ExpressionType(o.importExpr(R3.InjectorDef, [new o.ExpressionType(meta.type)]));\n    return { expression, type };\n}\n/**\n * @param {?} ctx\n * @param {?} ngModule\n * @param {?} injectableCompiler\n * @return {?}\n */\nexport function compileNgModuleFromRender2(ctx, ngModule, injectableCompiler) {\n    /** @type {?} */\n    const className = /** @type {?} */ ((identifierName(ngModule.type)));\n    /** @type {?} */\n    const rawImports = ngModule.rawImports ? [ngModule.rawImports] : [];\n    /** @type {?} */\n    const rawExports = ngModule.rawExports ? [ngModule.rawExports] : [];\n    /** @type {?} */\n    const injectorDefArg = mapLiteral({\n        'factory': injectableCompiler.factoryFor({ type: ngModule.type, symbol: ngModule.type.reference }, ctx),\n        'providers': convertMetaToOutput(ngModule.rawProviders, ctx),\n        'imports': convertMetaToOutput([...rawImports, ...rawExports], ctx),\n    });\n    /** @type {?} */\n    const injectorDef = o.importExpr(R3.defineInjector).callFn([injectorDefArg]);\n    ctx.statements.push(new o.ClassStmt(className, null, /* fields */ [new o.ClassField('ngInjectorDef', /* type */ o.INFERRED_TYPE, /* modifiers */ [o.StmtModifier.Static], injectorDef)], /* getters */ [], /* constructorMethod */ new o.ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} module\n * @return {?}\n */\nfunction accessExportScope(module) {\n    /** @type {?} */\n    const selectorScope = new o.ReadPropExpr(module, 'ngModuleDef');\n    return new o.ReadPropExpr(selectorScope, 'exported');\n}\n/**\n * @param {?} exp\n * @return {?}\n */\nfunction tupleTypeOf(exp) {\n    /** @type {?} */\n    const types = exp.map(type => o.typeofExpr(type));\n    return exp.length > 0 ? o.expressionType(o.literalArr(types)) : o.NONE_TYPE;\n}\n//# sourceMappingURL=r3_module_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { error } from '../util';\nimport { compileFactoryFunction, dependenciesFromGlobalMetadata } from './r3_factory';\nimport { Identifiers as R3 } from './r3_identifiers';\n/**\n * @record\n */\nexport function R3PipeMetadata() { }\n/** @type {?} */\nR3PipeMetadata.prototype.name;\n/** @type {?} */\nR3PipeMetadata.prototype.type;\n/** @type {?} */\nR3PipeMetadata.prototype.pipeName;\n/** @type {?} */\nR3PipeMetadata.prototype.deps;\n/** @type {?} */\nR3PipeMetadata.prototype.pure;\n/**\n * @record\n */\nexport function R3PipeDef() { }\n/** @type {?} */\nR3PipeDef.prototype.expression;\n/** @type {?} */\nR3PipeDef.prototype.type;\n/**\n * @param {?} metadata\n * @return {?}\n */\nexport function compilePipeFromMetadata(metadata) {\n    /** @type {?} */\n    const definitionMapValues = [];\n    // e.g. `name: 'myPipe'`\n    definitionMapValues.push({ key: 'name', value: o.literal(metadata.pipeName), quoted: false });\n    // e.g. `type: MyPipe`\n    definitionMapValues.push({ key: 'type', value: metadata.type, quoted: false });\n    /** @type {?} */\n    const templateFactory = compileFactoryFunction({\n        name: metadata.name,\n        fnOrClass: metadata.type,\n        deps: metadata.deps,\n        useNew: true,\n        injectFn: R3.directiveInject,\n    });\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. `pure: true`\n    definitionMapValues.push({ key: 'pure', value: o.literal(metadata.pure), quoted: false });\n    /** @type {?} */\n    const expression = o.importExpr(R3.definePipe).callFn([o.literalMap(definitionMapValues)]);\n    /** @type {?} */\n    const type = new o.ExpressionType(o.importExpr(R3.PipeDef, [\n        new o.ExpressionType(metadata.type),\n        new o.ExpressionType(new o.LiteralExpr(metadata.pipeName)),\n    ]));\n    return { expression, type };\n}\n/**\n * Write a pipe definition to the output context.\n * @param {?} outputCtx\n * @param {?} pipe\n * @param {?} reflector\n * @return {?}\n */\nexport function compilePipeFromRender2(outputCtx, pipe, reflector) {\n    /** @type {?} */\n    const definitionMapValues = [];\n    /** @type {?} */\n    const name = identifierName(pipe.type);\n    if (!name) {\n        return error(`Cannot resolve the name of ${pipe.type}`);\n    }\n    /** @type {?} */\n    const metadata = {\n        name,\n        pipeName: pipe.name,\n        type: outputCtx.importExpr(pipe.type.reference),\n        deps: dependenciesFromGlobalMetadata(pipe.type, outputCtx, reflector),\n        pure: pipe.pure,\n    };\n    /** @type {?} */\n    const res = compilePipeFromMetadata(metadata);\n    /** @type {?} */\n    const definitionField = outputCtx.constantPool.propertyNameOf(3 /* Pipe */);\n    outputCtx.statements.push(new o.ClassStmt(name, null, /* fields */ [new o.ClassField(definitionField, /* type */ o.INFERRED_TYPE, /* modifiers */ [o.StmtModifier.Static], /* initializer */ res.expression)], /* getters */ [], /* constructorMethod */ new o.ClassMethod(null, [], []), /* methods */ []));\n}\n//# sourceMappingURL=r3_pipe_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nexport function Node() { }\n/** @type {?} */\nNode.prototype.sourceSpan;\n/** @type {?} */\nNode.prototype.visit;\nexport class Text {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitText(this); }\n}\nif (false) {\n    /** @type {?} */\n    Text.prototype.value;\n    /** @type {?} */\n    Text.prototype.sourceSpan;\n}\nexport class BoundText {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitBoundText(this); }\n}\nif (false) {\n    /** @type {?} */\n    BoundText.prototype.value;\n    /** @type {?} */\n    BoundText.prototype.sourceSpan;\n}\nexport class TextAttribute {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    constructor(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitTextAttribute(this); }\n}\nif (false) {\n    /** @type {?} */\n    TextAttribute.prototype.name;\n    /** @type {?} */\n    TextAttribute.prototype.value;\n    /** @type {?} */\n    TextAttribute.prototype.sourceSpan;\n    /** @type {?} */\n    TextAttribute.prototype.valueSpan;\n}\nexport class BoundAttribute {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    constructor(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    static fromBoundElementProperty(prop) {\n        return new BoundAttribute(prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitBoundAttribute(this); }\n}\nif (false) {\n    /** @type {?} */\n    BoundAttribute.prototype.name;\n    /** @type {?} */\n    BoundAttribute.prototype.type;\n    /** @type {?} */\n    BoundAttribute.prototype.securityContext;\n    /** @type {?} */\n    BoundAttribute.prototype.value;\n    /** @type {?} */\n    BoundAttribute.prototype.unit;\n    /** @type {?} */\n    BoundAttribute.prototype.sourceSpan;\n}\nexport class BoundEvent {\n    /**\n     * @param {?} name\n     * @param {?} handler\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} sourceSpan\n     */\n    constructor(name, handler, target, phase, sourceSpan) {\n        this.name = name;\n        this.handler = handler;\n        this.target = target;\n        this.phase = phase;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    static fromParsedEvent(event) {\n        /** @type {?} */\n        const target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        /** @type {?} */\n        const phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEvent(event.name, event.handler, target, phase, event.sourceSpan);\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitBoundEvent(this); }\n}\nif (false) {\n    /** @type {?} */\n    BoundEvent.prototype.name;\n    /** @type {?} */\n    BoundEvent.prototype.handler;\n    /** @type {?} */\n    BoundEvent.prototype.target;\n    /** @type {?} */\n    BoundEvent.prototype.phase;\n    /** @type {?} */\n    BoundEvent.prototype.sourceSpan;\n}\nexport class Element {\n    /**\n     * @param {?} name\n     * @param {?} attributes\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} children\n     * @param {?} references\n     * @param {?} sourceSpan\n     * @param {?} startSourceSpan\n     * @param {?} endSourceSpan\n     */\n    constructor(name, attributes, inputs, outputs, children, references, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitElement(this); }\n}\nif (false) {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.attributes;\n    /** @type {?} */\n    Element.prototype.inputs;\n    /** @type {?} */\n    Element.prototype.outputs;\n    /** @type {?} */\n    Element.prototype.children;\n    /** @type {?} */\n    Element.prototype.references;\n    /** @type {?} */\n    Element.prototype.sourceSpan;\n    /** @type {?} */\n    Element.prototype.startSourceSpan;\n    /** @type {?} */\n    Element.prototype.endSourceSpan;\n}\nexport class Template {\n    /**\n     * @param {?} attributes\n     * @param {?} inputs\n     * @param {?} children\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} sourceSpan\n     * @param {?} startSourceSpan\n     * @param {?} endSourceSpan\n     */\n    constructor(attributes, inputs, children, references, variables, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.children = children;\n        this.references = references;\n        this.variables = variables;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitTemplate(this); }\n}\nif (false) {\n    /** @type {?} */\n    Template.prototype.attributes;\n    /** @type {?} */\n    Template.prototype.inputs;\n    /** @type {?} */\n    Template.prototype.children;\n    /** @type {?} */\n    Template.prototype.references;\n    /** @type {?} */\n    Template.prototype.variables;\n    /** @type {?} */\n    Template.prototype.sourceSpan;\n    /** @type {?} */\n    Template.prototype.startSourceSpan;\n    /** @type {?} */\n    Template.prototype.endSourceSpan;\n}\nexport class Content {\n    /**\n     * @param {?} selectorIndex\n     * @param {?} attributes\n     * @param {?} sourceSpan\n     */\n    constructor(selectorIndex, attributes, sourceSpan) {\n        this.selectorIndex = selectorIndex;\n        this.attributes = attributes;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitContent(this); }\n}\nif (false) {\n    /** @type {?} */\n    Content.prototype.selectorIndex;\n    /** @type {?} */\n    Content.prototype.attributes;\n    /** @type {?} */\n    Content.prototype.sourceSpan;\n}\nexport class Variable {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitVariable(this); }\n}\nif (false) {\n    /** @type {?} */\n    Variable.prototype.name;\n    /** @type {?} */\n    Variable.prototype.value;\n    /** @type {?} */\n    Variable.prototype.sourceSpan;\n}\nexport class Reference {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @template Result\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitReference(this); }\n}\nif (false) {\n    /** @type {?} */\n    Reference.prototype.name;\n    /** @type {?} */\n    Reference.prototype.value;\n    /** @type {?} */\n    Reference.prototype.sourceSpan;\n}\n/**\n * @record\n * @template Result\n */\nexport function Visitor() { }\n/** @type {?|undefined} */\nVisitor.prototype.visit;\n/** @type {?} */\nVisitor.prototype.visitElement;\n/** @type {?} */\nVisitor.prototype.visitTemplate;\n/** @type {?} */\nVisitor.prototype.visitContent;\n/** @type {?} */\nVisitor.prototype.visitVariable;\n/** @type {?} */\nVisitor.prototype.visitReference;\n/** @type {?} */\nVisitor.prototype.visitTextAttribute;\n/** @type {?} */\nVisitor.prototype.visitBoundAttribute;\n/** @type {?} */\nVisitor.prototype.visitBoundEvent;\n/** @type {?} */\nVisitor.prototype.visitText;\n/** @type {?} */\nVisitor.prototype.visitBoundText;\nexport class NullVisitor {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    visitElement(element) { }\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    visitTemplate(template) { }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    visitContent(content) { }\n    /**\n     * @param {?} variable\n     * @return {?}\n     */\n    visitVariable(variable) { }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    visitReference(reference) { }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitTextAttribute(attribute) { }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitBoundAttribute(attribute) { }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitBoundEvent(attribute) { }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitBoundText(text) { }\n}\nexport class RecursiveVisitor {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    visitElement(element) {\n        visitAll(this, element.attributes);\n        visitAll(this, element.children);\n        visitAll(this, element.references);\n    }\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    visitTemplate(template) {\n        visitAll(this, template.attributes);\n        visitAll(this, template.children);\n        visitAll(this, template.references);\n        visitAll(this, template.variables);\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    visitContent(content) { }\n    /**\n     * @param {?} variable\n     * @return {?}\n     */\n    visitVariable(variable) { }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    visitReference(reference) { }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitTextAttribute(attribute) { }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitBoundAttribute(attribute) { }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitBoundEvent(attribute) { }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitBoundText(text) { }\n}\nexport class TransformVisitor {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    visitElement(element) {\n        /** @type {?} */\n        const newAttributes = transformAll(this, element.attributes);\n        /** @type {?} */\n        const newInputs = transformAll(this, element.inputs);\n        /** @type {?} */\n        const newOutputs = transformAll(this, element.outputs);\n        /** @type {?} */\n        const newChildren = transformAll(this, element.children);\n        /** @type {?} */\n        const newReferences = transformAll(this, element.references);\n        if (newAttributes != element.attributes || newInputs != element.inputs ||\n            newOutputs != element.outputs || newChildren != element.children ||\n            newReferences != element.references) {\n            return new Element(element.name, newAttributes, newInputs, newOutputs, newChildren, newReferences, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return element;\n    }\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    visitTemplate(template) {\n        /** @type {?} */\n        const newAttributes = transformAll(this, template.attributes);\n        /** @type {?} */\n        const newInputs = transformAll(this, template.inputs);\n        /** @type {?} */\n        const newChildren = transformAll(this, template.children);\n        /** @type {?} */\n        const newReferences = transformAll(this, template.references);\n        /** @type {?} */\n        const newVariables = transformAll(this, template.variables);\n        if (newAttributes != template.attributes || newInputs != template.inputs ||\n            newChildren != template.children || newVariables != template.variables ||\n            newReferences != template.references) {\n            return new Template(newAttributes, newInputs, newChildren, newReferences, newVariables, template.sourceSpan, template.startSourceSpan, template.endSourceSpan);\n        }\n        return template;\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    visitContent(content) { return content; }\n    /**\n     * @param {?} variable\n     * @return {?}\n     */\n    visitVariable(variable) { return variable; }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    visitReference(reference) { return reference; }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitTextAttribute(attribute) { return attribute; }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitBoundAttribute(attribute) { return attribute; }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitBoundEvent(attribute) { return attribute; }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { return text; }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitBoundText(text) { return text; }\n}\n/**\n * @template Result\n * @param {?} visitor\n * @param {?} nodes\n * @return {?}\n */\nexport function visitAll(visitor, nodes) {\n    /** @type {?} */\n    const result = [];\n    if (visitor.visit) {\n        for (const node of nodes) {\n            /** @type {?} */\n            const newNode = visitor.visit(node) || node.visit(visitor);\n        }\n    }\n    else {\n        for (const node of nodes) {\n            /** @type {?} */\n            const newNode = node.visit(visitor);\n            if (newNode) {\n                result.push(newNode);\n            }\n        }\n    }\n    return result;\n}\n/**\n * @template Result\n * @param {?} visitor\n * @param {?} nodes\n * @return {?}\n */\nexport function transformAll(visitor, nodes) {\n    /** @type {?} */\n    const result = [];\n    /** @type {?} */\n    let changed = false;\n    for (const node of nodes) {\n        /** @type {?} */\n        const newNode = node.visit(visitor);\n        if (newNode) {\n            result.push(/** @type {?} */ (newNode));\n        }\n        changed = changed || newNode != node;\n    }\n    return changed ? result : nodes;\n}\n//# sourceMappingURL=r3_ast.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { isNgTemplate } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel } from '../parse_util';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { PreparsedElementType, preparseElement } from '../template_parser/template_preparser';\nimport { syntaxError } from '../util';\nimport * as t from './r3_ast';\n/** @type {?} */\nconst BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n/** @type {?} */\nconst KW_BIND_IDX = 1;\n/** @type {?} */\nconst KW_LET_IDX = 2;\n/** @type {?} */\nconst KW_REF_IDX = 3;\n/** @type {?} */\nconst KW_ON_IDX = 4;\n/** @type {?} */\nconst KW_BINDON_IDX = 5;\n/** @type {?} */\nconst KW_AT_IDX = 6;\n/** @type {?} */\nconst IDENT_KW_IDX = 7;\n/** @type {?} */\nconst IDENT_BANANA_BOX_IDX = 8;\n/** @type {?} */\nconst IDENT_PROPERTY_IDX = 9;\n/** @type {?} */\nconst IDENT_EVENT_IDX = 10;\n/** @type {?} */\nconst TEMPLATE_ATTR_PREFIX = '*';\n/** @type {?} */\nconst CLASS_ATTR = 'class';\n/** @type {?} */\nconst DEFAULT_CONTENT_SELECTOR = '*';\n/** @typedef {?} */\nvar Render3ParseResult;\nexport { Render3ParseResult };\n/**\n * @param {?} htmlNodes\n * @param {?} bindingParser\n * @return {?}\n */\nexport function htmlAstToRender3Ast(htmlNodes, bindingParser) {\n    /** @type {?} */\n    const transformer = new HtmlAstToIvyAst(bindingParser);\n    /** @type {?} */\n    const ivyNodes = html.visitAll(transformer, htmlNodes);\n    /** @type {?} */\n    const allErrors = bindingParser.errors.concat(transformer.errors);\n    /** @type {?} */\n    const errors = allErrors.filter(e => e.level === ParseErrorLevel.ERROR);\n    if (errors.length > 0) {\n        /** @type {?} */\n        const errorString = errors.join('\\n');\n        throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n    }\n    return {\n        nodes: ivyNodes,\n        errors: allErrors,\n        ngContentSelectors: transformer.ngContentSelectors,\n        hasNgContent: transformer.hasNgContent,\n    };\n}\nclass HtmlAstToIvyAst {\n    /**\n     * @param {?} bindingParser\n     */\n    constructor(bindingParser) {\n        this.bindingParser = bindingParser;\n        this.errors = [];\n        // Selectors for the `ng-content` tags. Only non `*` selectors are recorded here\n        this.ngContentSelectors = [];\n        // Any `<ng-content>` in the template ?\n        this.hasNgContent = false;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    visitElement(element) {\n        /** @type {?} */\n        const preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        /** @type {?} */\n        const isTemplateElement = isNgTemplate(element.name);\n        /** @type {?} */\n        const matchableAttributes = [];\n        /** @type {?} */\n        const parsedProperties = [];\n        /** @type {?} */\n        const boundEvents = [];\n        /** @type {?} */\n        const variables = [];\n        /** @type {?} */\n        const references = [];\n        /** @type {?} */\n        const attributes = [];\n        /** @type {?} */\n        const templateMatchableAttributes = [];\n        /** @type {?} */\n        let inlineTemplateSourceSpan;\n        /** @type {?} */\n        const templateParsedProperties = [];\n        /** @type {?} */\n        const templateVariables = [];\n        /** @type {?} */\n        let elementHasInlineTemplate = false;\n        for (const attribute of element.attrs) {\n            /** @type {?} */\n            let hasBinding = false;\n            /** @type {?} */\n            const normalizedName = normalizeAttributeName(attribute.name);\n            /** @type {?} */\n            let isTemplateBinding = false;\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                if (elementHasInlineTemplate) {\n                    this.reportError(`Can't have multiple template bindings on one element. Use only one attribute prefixed with *`, attribute.sourceSpan);\n                }\n                isTemplateBinding = true;\n                elementHasInlineTemplate = true;\n                /** @type {?} */\n                const templateValue = attribute.value;\n                /** @type {?} */\n                const templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n                inlineTemplateSourceSpan = attribute.valueSpan || attribute.sourceSpan;\n                /** @type {?} */\n                const parsedVariables = [];\n                this.bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attribute.sourceSpan, templateMatchableAttributes, templateParsedProperties, parsedVariables);\n                templateVariables.push(...parsedVariables.map(v => new t.Variable(v.name, v.value, v.sourceSpan)));\n            }\n            else {\n                // Check for variables, events, property bindings, interpolation\n                hasBinding = this.parseAttribute(isTemplateElement, attribute, matchableAttributes, parsedProperties, boundEvents, variables, references);\n            }\n            if (!hasBinding && !isTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attributes.push(/** @type {?} */ (this.visitAttribute(attribute)));\n                matchableAttributes.push([attribute.name, attribute.value]);\n            }\n        }\n        /** @type {?} */\n        const children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n        /** @type {?} */\n        let parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>`\n            this.hasNgContent = true;\n            if (element.children && !element.children.every(isEmptyTextNode)) {\n                this.reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n            }\n            /** @type {?} */\n            const selector = preparsedElement.selectAttr;\n            /** @type {?} */\n            let attributes = element.attrs.map(attribute => {\n                return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan);\n            });\n            /** @type {?} */\n            const selectorIndex = selector === DEFAULT_CONTENT_SELECTOR ? 0 : this.ngContentSelectors.push(selector);\n            parsedElement = new t.Content(selectorIndex, attributes, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            /** @type {?} */\n            const boundAttributes = this.createBoundAttributes(element.name, parsedProperties);\n            parsedElement = new t.Template(attributes, boundAttributes, children, references, variables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        else {\n            /** @type {?} */\n            const boundAttributes = this.createBoundAttributes(element.name, parsedProperties);\n            parsedElement = new t.Element(element.name, attributes, boundAttributes, boundEvents, children, references, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        if (elementHasInlineTemplate) {\n            /** @type {?} */\n            const attributes = [];\n            templateMatchableAttributes.forEach(([name, value]) => attributes.push(new t.TextAttribute(name, value, inlineTemplateSourceSpan)));\n            /** @type {?} */\n            const boundAttributes = this.createBoundAttributes('ng-template', templateParsedProperties);\n            parsedElement = new t.Template(attributes, boundAttributes, [parsedElement], [], templateVariables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return parsedElement;\n    }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitAttribute(attribute) {\n        return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan);\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) {\n        /** @type {?} */\n        const valueNoNgsp = replaceNgsp(text.value);\n        /** @type {?} */\n        const expr = this.bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n        return expr ? new t.BoundText(expr, text.sourceSpan) : new t.Text(valueNoNgsp, text.sourceSpan);\n    }\n    /**\n     * @param {?} comment\n     * @return {?}\n     */\n    visitComment(comment) { return null; }\n    /**\n     * @param {?} expansion\n     * @return {?}\n     */\n    visitExpansion(expansion) { return null; }\n    /**\n     * @param {?} expansionCase\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase) { return null; }\n    /**\n     * @param {?} elementName\n     * @param {?} properties\n     * @return {?}\n     */\n    createBoundAttributes(elementName, properties) {\n        return properties.filter(prop => !prop.isLiteral)\n            .map(prop => this.bindingParser.createBoundElementProperty(elementName, prop))\n            .map(prop => t.BoundAttribute.fromBoundElementProperty(prop));\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attribute\n     * @param {?} matchableAttributes\n     * @param {?} parsedProperties\n     * @param {?} boundEvents\n     * @param {?} variables\n     * @param {?} references\n     * @return {?}\n     */\n    parseAttribute(isTemplateElement, attribute, matchableAttributes, parsedProperties, boundEvents, variables, references) {\n        /** @type {?} */\n        const name = normalizeAttributeName(attribute.name);\n        /** @type {?} */\n        const value = attribute.value;\n        /** @type {?} */\n        const srcSpan = attribute.sourceSpan;\n        /** @type {?} */\n        const bindParts = name.match(BIND_NAME_REGEXP);\n        /** @type {?} */\n        let hasBinding = false;\n        if (bindParts) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    /** @type {?} */\n                    const identifier = bindParts[IDENT_KW_IDX];\n                    this.parseVariable(identifier, value, srcSpan, variables);\n                }\n                else {\n                    this.reportError(`\"let-\" is only supported on ng-template elements.`, srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                /** @type {?} */\n                const identifier = bindParts[IDENT_KW_IDX];\n                this.parseReference(identifier, value, srcSpan, references);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                /** @type {?} */\n                const events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this.bindingParser.parseLiteralAttr(name, value, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                /** @type {?} */\n                const events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this.bindingParser.parsePropertyInterpolation(name, value, srcSpan, matchableAttributes, parsedProperties);\n        }\n        return hasBinding;\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} variables\n     * @return {?}\n     */\n    parseVariable(identifier, value, sourceSpan, variables) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n        }\n        variables.push(new t.Variable(identifier, value, sourceSpan));\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} references\n     * @return {?}\n     */\n    parseReference(identifier, value, sourceSpan, references) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n        }\n        references.push(new t.Reference(identifier, value, sourceSpan));\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} boundEvents\n     * @return {?}\n     */\n    parseAssignmentEvent(name, expression, sourceSpan, targetMatchableAttrs, boundEvents) {\n        /** @type {?} */\n        const events = [];\n        this.bindingParser.parseEvent(`${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, events);\n        addEvents(events, boundEvents);\n    }\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    reportError(message, sourceSpan, level = ParseErrorLevel.ERROR) {\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    }\n}\nif (false) {\n    /** @type {?} */\n    HtmlAstToIvyAst.prototype.errors;\n    /** @type {?} */\n    HtmlAstToIvyAst.prototype.ngContentSelectors;\n    /** @type {?} */\n    HtmlAstToIvyAst.prototype.hasNgContent;\n    /** @type {?} */\n    HtmlAstToIvyAst.prototype.bindingParser;\n}\nclass NonBindableVisitor {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    visitElement(ast) {\n        /** @type {?} */\n        const preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        /** @type {?} */\n        const children = html.visitAll(this, ast.children, null);\n        return new t.Element(ast.name, /** @type {?} */ (html.visitAll(this, ast.attrs)), /* inputs */ [], /* outputs */ /* outputs */ [], children, /* references */ /* references */ [], ast.sourceSpan, ast.startSourceSpan, ast.endSourceSpan);\n    }\n    /**\n     * @param {?} comment\n     * @return {?}\n     */\n    visitComment(comment) { return null; }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    visitAttribute(attribute) {\n        return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { return new t.Text(text.value, text.sourceSpan); }\n    /**\n     * @param {?} expansion\n     * @return {?}\n     */\n    visitExpansion(expansion) { return null; }\n    /**\n     * @param {?} expansionCase\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase) { return null; }\n}\n/** @type {?} */\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} attrName\n * @return {?}\n */\nfunction normalizeAttributeName(attrName) {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\n/**\n * @param {?} events\n * @param {?} boundEvents\n * @return {?}\n */\nfunction addEvents(events, boundEvents) {\n    boundEvents.push(...events.map(e => t.BoundEvent.fromParsedEvent(e)));\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\n//# sourceMappingURL=r3_template_transform.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst Char = {\n    OpenParen: 40,\n    CloseParen: 41,\n    Colon: 58,\n    Semicolon: 59,\n    BackSlash: 92,\n    QuoteNone: 0,\n    // indicating we are not inside a quote\n    QuoteDouble: 34,\n    QuoteSingle: 39,\n};\n/**\n * Parses string representation of a style and converts it into object literal.\n *\n * @param {?} value string representation of style as used in the `style` attribute in HTML.\n *   Example: `color: red; height: auto`.\n * @return {?} an object literal. `{ color: 'red', height: 'auto'}`.\n */\nexport function parseStyle(value) {\n    /** @type {?} */\n    const styles = {};\n    /** @type {?} */\n    let i = 0;\n    /** @type {?} */\n    let parenDepth = 0;\n    /** @type {?} */\n    let quote = 0 /* QuoteNone */;\n    /** @type {?} */\n    let valueStart = 0;\n    /** @type {?} */\n    let propStart = 0;\n    /** @type {?} */\n    let currentProp = null;\n    /** @type {?} */\n    let valueHasQuotes = false;\n    while (i < value.length) {\n        /** @type {?} */\n        const token = /** @type {?} */ (value.charCodeAt(i++));\n        switch (token) {\n            case 40 /* OpenParen */:\n                parenDepth++;\n                break;\n            case 41 /* CloseParen */:\n                parenDepth--;\n                break;\n            case 39 /* QuoteSingle */:\n                // valueStart needs to be there since prop values don't\n                // have quotes in CSS\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 39 /* QuoteSingle */;\n                }\n                else if (quote === 39 /* QuoteSingle */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 34 /* QuoteDouble */:\n                // same logic as above\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 34 /* QuoteDouble */;\n                }\n                else if (quote === 34 /* QuoteDouble */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 58 /* Colon */:\n                if (!currentProp && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n                    valueStart = i;\n                }\n                break;\n            case 59 /* Semicolon */:\n                if (currentProp && valueStart > 0 && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    /** @type {?} */\n                    const styleVal = value.substring(valueStart, i - 1).trim();\n                    styles[currentProp] = valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal;\n                    propStart = i;\n                    valueStart = 0;\n                    currentProp = null;\n                    valueHasQuotes = false;\n                }\n                break;\n        }\n    }\n    if (currentProp && valueStart) {\n        /** @type {?} */\n        const styleVal = value.substr(valueStart).trim();\n        styles[currentProp] = valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal;\n    }\n    return styles;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function stripUnnecessaryQuotes(value) {\n    /** @type {?} */\n    const qS = value.charCodeAt(0);\n    /** @type {?} */\n    const qE = value.charCodeAt(value.length - 1);\n    if (qS == qE && (qS == 39 /* QuoteSingle */ || qS == 34 /* QuoteDouble */)) {\n        /** @type {?} */\n        const tempValue = value.substring(1, value.length - 1);\n        // special case to avoid using a multi-quoted string that was just chomped\n        // (e.g. `font-family: \"Verdana\", \"sans-serif\"`)\n        if (tempValue.indexOf('\\'') == -1 && tempValue.indexOf('\"') == -1) {\n            value = tempValue;\n        }\n    }\n    return value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function hyphenate(value) {\n    return value.replace(/[a-z][A-Z]/g, v => {\n        return v.charAt(0) + '-' + v.charAt(1);\n    }).toLowerCase();\n}\n//# sourceMappingURL=styling.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { flatten, sanitizeIdentifier } from '../../compile_metadata';\nimport { BindingForm, BuiltinFunctionCall, convertActionBinding, convertPropertyBinding } from '../../compiler_util/expression_converter';\nimport * as core from '../../core';\nimport { AstMemoryEfficientTransformer, FunctionCall, ImplicitReceiver, Interpolation, LiteralArray, LiteralPrimitive, PropertyRead } from '../../expression_parser/ast';\nimport { Lexer } from '../../expression_parser/lexer';\nimport { Parser } from '../../expression_parser/parser';\nimport * as html from '../../ml_parser/ast';\nimport { HtmlParser } from '../../ml_parser/html_parser';\nimport { WhitespaceVisitor } from '../../ml_parser/html_whitespaces';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../../ml_parser/interpolation_config';\nimport { splitNsName } from '../../ml_parser/tags';\nimport * as o from '../../output/output_ast';\nimport { DomElementSchemaRegistry } from '../../schema/dom_element_schema_registry';\nimport { CssSelector } from '../../selector';\nimport { BindingParser } from '../../template_parser/binding_parser';\nimport { error } from '../../util';\nimport * as t from '../r3_ast';\nimport { Identifiers as R3 } from '../r3_identifiers';\nimport { htmlAstToRender3Ast } from '../r3_template_transform';\nimport { parseStyle } from './styling';\nimport { CONTEXT_NAME, I18N_ATTR, I18N_ATTR_PREFIX, ID_SEPARATOR, IMPLICIT_REFERENCE, MEANING_SEPARATOR, REFERENCE_PREFIX, RENDER_FLAGS, asLiteral, invalid, mapToExpression, noop, trimTrailingNulls, unsupported } from './util';\n/**\n * @param {?} type\n * @return {?}\n */\nfunction mapBindingToInstruction(type) {\n    switch (type) {\n        case 0 /* Property */:\n            return R3.elementProperty;\n        case 1 /* Attribute */:\n            return R3.elementAttribute;\n        case 2 /* Class */:\n            return R3.elementClassProp;\n        default:\n            return undefined;\n    }\n}\n/**\n * @param {?} flags\n * @param {?} statements\n * @return {?}\n */\nexport function renderFlagCheckIfStmt(flags, statements) {\n    return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null, false), statements);\n}\nexport class TemplateDefinitionBuilder {\n    /**\n     * @param {?} constantPool\n     * @param {?} contextParameter\n     * @param {?} parentBindingScope\n     * @param {?=} level\n     * @param {?=} contextName\n     * @param {?=} templateName\n     * @param {?=} viewQueries\n     * @param {?=} directiveMatcher\n     * @param {?=} directives\n     * @param {?=} pipeTypeByName\n     * @param {?=} pipes\n     * @param {?=} _namespace\n     */\n    constructor(constantPool, contextParameter, parentBindingScope, level = 0, contextName, templateName, viewQueries, directiveMatcher, directives, pipeTypeByName, pipes, _namespace) {\n        this.constantPool = constantPool;\n        this.contextParameter = contextParameter;\n        this.level = level;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this.viewQueries = viewQueries;\n        this.directiveMatcher = directiveMatcher;\n        this.directives = directives;\n        this.pipeTypeByName = pipeTypeByName;\n        this.pipes = pipes;\n        this._namespace = _namespace;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._prefixCode = [];\n        this._creationCode = [];\n        this._variableCode = [];\n        this._bindingCode = [];\n        this._postfixCode = [];\n        this._unsupported = unsupported;\n        this._inI18nSection = false;\n        this._i18nSectionIndex = -1;\n        this._phToNodeIdxes = [{}];\n        this._pureFunctionSlots = 0;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid;\n        this.visitVariable = invalid;\n        this.visitTextAttribute = invalid;\n        this.visitBoundAttribute = invalid;\n        this.visitBoundEvent = invalid;\n        // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n        // function)\n        this._dataIndex = viewQueries.length;\n        this._bindingScope =\n            parentBindingScope.nestedScope((lhsVar, expression) => {\n                this._bindingCode.push(lhsVar.set(expression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            });\n        this._valueConverter = new ValueConverter(constantPool, () => this.allocateDataSlot(), (numSlots) => this._pureFunctionSlots += numSlots, (name, localName, slot, value) => {\n            /** @type {?} */\n            const pipeType = pipeTypeByName.get(name);\n            if (pipeType) {\n                this.pipes.add(pipeType);\n            }\n            this._bindingScope.set(localName, value);\n            this._creationCode.push(o.importExpr(R3.pipe).callFn([o.literal(slot), o.literal(name)]).toStmt());\n        });\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} variables\n     * @param {?=} hasNgContent\n     * @param {?=} ngContentSelectors\n     * @return {?}\n     */\n    buildTemplateFunction(nodes, variables, hasNgContent = false, ngContentSelectors = []) {\n        if (this._namespace !== R3.namespaceHTML) {\n            this.instruction(this._creationCode, null, this._namespace);\n        }\n        // Create variable bindings\n        for (const variable of variables) {\n            /** @type {?} */\n            const variableName = variable.name;\n            /** @type {?} */\n            const expression = o.variable(this.contextParameter).prop(variable.value || IMPLICIT_REFERENCE);\n            /** @type {?} */\n            const scopedName = this._bindingScope.freshReferenceName();\n            // Add the reference to the local scope.\n            this._bindingScope.set(variableName, o.variable(variableName + scopedName), expression);\n        }\n        // Output a `ProjectionDef` instruction when some `<ng-content>` are present\n        if (hasNgContent) {\n            /** @type {?} */\n            const parameters = [];\n            // Only selectors with a non-default value are generated\n            if (ngContentSelectors.length > 1) {\n                /** @type {?} */\n                const r3Selectors = ngContentSelectors.map(s => core.parseSelectorToR3Selector(s));\n                /** @type {?} */\n                const parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n                /** @type {?} */\n                const unParsed = this.constantPool.getConstLiteral(asLiteral(ngContentSelectors), true);\n                parameters.push(parsed, unParsed);\n            }\n            this.instruction(this._creationCode, null, R3.projectionDef, ...parameters);\n        }\n        t.visitAll(this, nodes);\n        if (this._pureFunctionSlots > 0) {\n            this.instruction(this._creationCode, null, R3.reserveSlots, o.literal(this._pureFunctionSlots));\n        }\n        /** @type {?} */\n        const creationCode = this._creationCode.length > 0 ?\n            [renderFlagCheckIfStmt(1 /* Create */, this._creationCode)] :\n            [];\n        /** @type {?} */\n        const updateCode = this._bindingCode.length > 0 ?\n            [renderFlagCheckIfStmt(2 /* Update */, this._bindingCode)] :\n            [];\n        // Generate maps of placeholder name to node indexes\n        // TODO(vicb): This is a WIP, not fully supported yet\n        for (const phToNodeIdx of this._phToNodeIdxes) {\n            if (Object.keys(phToNodeIdx).length > 0) {\n                /** @type {?} */\n                const scopedName = this._bindingScope.freshReferenceName();\n                /** @type {?} */\n                const phMap = o.variable(scopedName)\n                    .set(mapToExpression(phToNodeIdx, true))\n                    .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n                this._prefixCode.push(phMap);\n            }\n        }\n        return o.fn([new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(this.contextParameter, null)], [\n            // Temporary variable declarations for query refresh (i.e. let _t: any;)\n            ...this._prefixCode,\n            // Creating mode (i.e. if (rf & RenderFlags.Create) { ... })\n            ...creationCode,\n            // Temporary variable declarations for local refs (i.e. const tmp = ld(1) as any)\n            ...this._variableCode,\n            // Binding and refresh mode (i.e. if (rf & RenderFlags.Update) {...})\n            ...updateCode,\n            // Nested templates (i.e. function CompTemplate() {})\n            ...this._postfixCode\n        ], o.INFERRED_TYPE, null, this.templateName);\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) { return this._bindingScope.get(name); }\n    /**\n     * @param {?} ngContent\n     * @return {?}\n     */\n    visitContent(ngContent) {\n        /** @type {?} */\n        const slot = this.allocateDataSlot();\n        /** @type {?} */\n        const selectorIndex = ngContent.selectorIndex;\n        /** @type {?} */\n        const parameters = [o.literal(slot)];\n        /** @type {?} */\n        const attributeAsList = [];\n        ngContent.attributes.forEach((attribute) => {\n            /** @type {?} */\n            const name = attribute.name;\n            if (name !== 'select') {\n                attributeAsList.push(name, attribute.value);\n            }\n        });\n        if (attributeAsList.length > 0) {\n            parameters.push(o.literal(selectorIndex), asLiteral(attributeAsList));\n        }\n        else if (selectorIndex !== 0) {\n            parameters.push(o.literal(selectorIndex));\n        }\n        this.instruction(this._creationCode, ngContent.sourceSpan, R3.projection, ...parameters);\n    }\n    /**\n     * @param {?} namespaceKey\n     * @return {?}\n     */\n    getNamespaceInstruction(namespaceKey) {\n        switch (namespaceKey) {\n            case 'math':\n                return R3.namespaceMathML;\n            case 'svg':\n                return R3.namespaceSVG;\n            default:\n                return R3.namespaceHTML;\n        }\n    }\n    /**\n     * @param {?} nsInstruction\n     * @param {?} element\n     * @return {?}\n     */\n    addNamespaceInstruction(nsInstruction, element) {\n        this._namespace = nsInstruction;\n        this.instruction(this._creationCode, element.sourceSpan, nsInstruction);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    visitElement(element) {\n        /** @type {?} */\n        const elementIndex = this.allocateDataSlot();\n        /** @type {?} */\n        const referenceDataSlots = new Map();\n        /** @type {?} */\n        const wasInI18nSection = this._inI18nSection;\n        /** @type {?} */\n        const outputAttrs = {};\n        /** @type {?} */\n        const attrI18nMetas = {};\n        /** @type {?} */\n        let i18nMeta = '';\n        const [namespaceKey, elementName] = splitNsName(element.name);\n        // Elements inside i18n sections are replaced with placeholders\n        // TODO(vicb): nested elements are a WIP in this phase\n        if (this._inI18nSection) {\n            /** @type {?} */\n            const phName = element.name.toLowerCase();\n            if (!this._phToNodeIdxes[this._i18nSectionIndex][phName]) {\n                this._phToNodeIdxes[this._i18nSectionIndex][phName] = [];\n            }\n            this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);\n        }\n        // Handle i18n attributes\n        for (const attr of element.attributes) {\n            /** @type {?} */\n            const name = attr.name;\n            /** @type {?} */\n            const value = attr.value;\n            if (name === I18N_ATTR) {\n                if (this._inI18nSection) {\n                    throw new Error(`Could not mark an element as translatable inside of a translatable section`);\n                }\n                this._inI18nSection = true;\n                this._i18nSectionIndex++;\n                this._phToNodeIdxes[this._i18nSectionIndex] = {};\n                i18nMeta = value;\n            }\n            else if (name.startsWith(I18N_ATTR_PREFIX)) {\n                attrI18nMetas[name.slice(I18N_ATTR_PREFIX.length)] = value;\n            }\n            else {\n                outputAttrs[name] = value;\n            }\n        }\n        // Match directives on non i18n attributes\n        if (this.directiveMatcher) {\n            /** @type {?} */\n            const selector = createCssSelector(element.name, outputAttrs);\n            this.directiveMatcher.match(selector, (sel, staticType) => { this.directives.add(staticType); });\n        }\n        /** @type {?} */\n        const parameters = [\n            o.literal(elementIndex),\n            o.literal(elementName),\n        ];\n        /** @type {?} */\n        const i18nMessages = [];\n        /** @type {?} */\n        const attributes = [];\n        /** @type {?} */\n        const initialStyleDeclarations = [];\n        /** @type {?} */\n        const initialClassDeclarations = [];\n        /** @type {?} */\n        const styleInputs = [];\n        /** @type {?} */\n        const classInputs = [];\n        /** @type {?} */\n        const allOtherInputs = [];\n        element.inputs.forEach((input) => {\n            switch (input.type) {\n                // [attr.style] or [attr.class] should not be treated as styling-based\n                // bindings since they are intended to be written directly to the attr\n                // and therefore will skip all style/class resolution that is present\n                // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n                // [class.prop]=\"\". [class]=\"\" assignments\n                case 0 /* Property */:\n                    if (input.name == 'style') {\n                        // this should always go first in the compilation (for [style])\n                        styleInputs.splice(0, 0, input);\n                    }\n                    else if (isClassBinding(input)) {\n                        // this should always go first in the compilation (for [class])\n                        classInputs.splice(0, 0, input);\n                    }\n                    else {\n                        allOtherInputs.push(input);\n                    }\n                    break;\n                case 3 /* Style */:\n                    styleInputs.push(input);\n                    break;\n                case 2 /* Class */:\n                    classInputs.push(input);\n                    break;\n                default:\n                    allOtherInputs.push(input);\n                    break;\n            }\n        });\n        /** @type {?} */\n        let currStyleIndex = 0;\n        /** @type {?} */\n        let currClassIndex = 0;\n        /** @type {?} */\n        let staticStylesMap = null;\n        /** @type {?} */\n        let staticClassesMap = null;\n        /** @type {?} */\n        const stylesIndexMap = {};\n        /** @type {?} */\n        const classesIndexMap = {};\n        Object.getOwnPropertyNames(outputAttrs).forEach(name => {\n            /** @type {?} */\n            const value = outputAttrs[name];\n            if (name == 'style') {\n                staticStylesMap = parseStyle(value);\n                Object.keys(staticStylesMap).forEach(prop => { stylesIndexMap[prop] = currStyleIndex++; });\n            }\n            else if (name == 'class') {\n                staticClassesMap = {};\n                value.split(/\\s+/g).forEach(className => {\n                    classesIndexMap[className] = currClassIndex++; /** @type {?} */\n                    ((staticClassesMap))[className] = true;\n                });\n            }\n            else {\n                attributes.push(o.literal(name));\n                if (attrI18nMetas.hasOwnProperty(name)) {\n                    /** @type {?} */\n                    const meta = parseI18nMeta(attrI18nMetas[name]);\n                    /** @type {?} */\n                    const variable = this.constantPool.getTranslation(value, meta);\n                    attributes.push(variable);\n                }\n                else {\n                    attributes.push(o.literal(value));\n                }\n            }\n        });\n        /** @type {?} */\n        let hasMapBasedStyling = false;\n        for (let i = 0; i < styleInputs.length; i++) {\n            /** @type {?} */\n            const input = styleInputs[i];\n            /** @type {?} */\n            const isMapBasedStyleBinding = i === 0 && input.name === 'style';\n            if (isMapBasedStyleBinding) {\n                hasMapBasedStyling = true;\n            }\n            else if (!stylesIndexMap.hasOwnProperty(input.name)) {\n                stylesIndexMap[input.name] = currStyleIndex++;\n            }\n        }\n        for (let i = 0; i < classInputs.length; i++) {\n            /** @type {?} */\n            const input = classInputs[i];\n            /** @type {?} */\n            const isMapBasedClassBinding = i === 0 && isClassBinding(input);\n            if (!isMapBasedClassBinding && !stylesIndexMap.hasOwnProperty(input.name)) {\n                classesIndexMap[input.name] = currClassIndex++;\n            }\n        }\n        /** @type {?} */\n        let useDefaultStyleSanitizer = hasMapBasedStyling;\n        // this will build the instructions so that they fall into the following syntax\n        // => [prop1, prop2, prop3, 0, prop1, value1, prop2, value2]\n        Object.keys(stylesIndexMap).forEach(prop => {\n            useDefaultStyleSanitizer = useDefaultStyleSanitizer || isStyleSanitizable(prop);\n            initialStyleDeclarations.push(o.literal(prop));\n        });\n        if (staticStylesMap) {\n            initialStyleDeclarations.push(o.literal(1 /* VALUES_MODE */));\n            Object.keys(staticStylesMap).forEach(prop => {\n                initialStyleDeclarations.push(o.literal(prop));\n                /** @type {?} */\n                const value = /** @type {?} */ ((staticStylesMap))[prop];\n                initialStyleDeclarations.push(o.literal(value));\n            });\n        }\n        Object.keys(classesIndexMap).forEach(prop => {\n            initialClassDeclarations.push(o.literal(prop));\n        });\n        if (staticClassesMap) {\n            initialClassDeclarations.push(o.literal(1 /* VALUES_MODE */));\n            Object.keys(staticClassesMap).forEach(className => {\n                initialClassDeclarations.push(o.literal(className));\n                initialClassDeclarations.push(o.literal(true));\n            });\n        }\n        /** @type {?} */\n        const hasStylingInstructions = initialStyleDeclarations.length || styleInputs.length ||\n            initialClassDeclarations.length || classInputs.length;\n        /** @type {?} */\n        const attrArg = attributes.length > 0 ?\n            this.constantPool.getConstLiteral(o.literalArr(attributes), true) :\n            o.TYPED_NULL_EXPR;\n        parameters.push(attrArg);\n        if (element.references && element.references.length > 0) {\n            /** @type {?} */\n            const references = flatten(element.references.map(reference => {\n                /** @type {?} */\n                const slot = this.allocateDataSlot();\n                referenceDataSlots.set(reference.name, slot);\n                /** @type {?} */\n                const variableName = this._bindingScope.freshReferenceName();\n                this._variableCode.push(o.variable(variableName, o.INFERRED_TYPE)\n                    .set(o.importExpr(R3.load).callFn([o.literal(slot)]))\n                    .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n                this._bindingScope.set(reference.name, o.variable(variableName));\n                return [reference.name, reference.value];\n            }));\n            parameters.push(this.constantPool.getConstLiteral(asLiteral(references), true));\n        }\n        else {\n            parameters.push(o.TYPED_NULL_EXPR);\n        }\n        // Generate the instruction create element instruction\n        if (i18nMessages.length > 0) {\n            this._creationCode.push(...i18nMessages);\n        }\n        /** @type {?} */\n        const wasInNamespace = this._namespace;\n        /** @type {?} */\n        const currentNamespace = this.getNamespaceInstruction(namespaceKey);\n        // If the namespace is changing now, include an instruction to change it\n        // during element creation.\n        if (currentNamespace !== wasInNamespace) {\n            this.addNamespaceInstruction(currentNamespace, element);\n        }\n        /** @type {?} */\n        const implicit = o.variable(CONTEXT_NAME);\n        /** @type {?} */\n        const createSelfClosingInstruction = !hasStylingInstructions && element.children.length === 0 && element.outputs.length === 0;\n        if (createSelfClosingInstruction) {\n            this.instruction(this._creationCode, element.sourceSpan, R3.element, ...trimTrailingNulls(parameters));\n        }\n        else {\n            // Generate the instruction create element instruction\n            if (i18nMessages.length > 0) {\n                this._creationCode.push(...i18nMessages);\n            }\n            this.instruction(this._creationCode, element.sourceSpan, R3.elementStart, ...trimTrailingNulls(parameters));\n            // initial styling for static style=\"...\" attributes\n            if (hasStylingInstructions) {\n                /** @type {?} */\n                const paramsList = [];\n                if (initialClassDeclarations.length) {\n                    // the template compiler handles initial class styling (e.g. class=\"foo\") values\n                    // in a special command called `elementClass` so that the initial class\n                    // can be processed during runtime. These initial class values are bound to\n                    // a constant because the inital class values do not change (since they're static).\n                    paramsList.push(this.constantPool.getConstLiteral(o.literalArr(initialClassDeclarations), true));\n                }\n                else if (initialStyleDeclarations.length || useDefaultStyleSanitizer) {\n                    // no point in having an extra `null` value unless there are follow-up params\n                    paramsList.push(o.NULL_EXPR);\n                }\n                if (initialStyleDeclarations.length) {\n                    // the template compiler handles initial style (e.g. style=\"foo\") values\n                    // in a special command called `elementStyle` so that the initial styles\n                    // can be processed during runtime. These initial styles values are bound to\n                    // a constant because the inital style values do not change (since they're static).\n                    paramsList.push(this.constantPool.getConstLiteral(o.literalArr(initialStyleDeclarations), true));\n                }\n                else if (useDefaultStyleSanitizer) {\n                    // no point in having an extra `null` value unless there are follow-up params\n                    paramsList.push(o.NULL_EXPR);\n                }\n                if (useDefaultStyleSanitizer) {\n                    paramsList.push(o.importExpr(R3.defaultStyleSanitizer));\n                }\n                this._creationCode.push(o.importExpr(R3.elementStyling).callFn(paramsList).toStmt());\n            }\n            // Generate Listeners (outputs)\n            element.outputs.forEach((outputAst) => {\n                /** @type {?} */\n                const elName = sanitizeIdentifier(element.name);\n                /** @type {?} */\n                const evName = sanitizeIdentifier(outputAst.name);\n                /** @type {?} */\n                const functionName = `${this.templateName}_${elName}_${evName}_listener`;\n                /** @type {?} */\n                const localVars = [];\n                /** @type {?} */\n                const bindingScope = this._bindingScope.nestedScope((lhsVar, rhsExpression) => {\n                    localVars.push(lhsVar.set(rhsExpression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n                });\n                /** @type {?} */\n                const bindingExpr = convertActionBinding(bindingScope, implicit, outputAst.handler, 'b', () => error('Unexpected interpolation'));\n                /** @type {?} */\n                const handler = o.fn([new o.FnParam('$event', o.DYNAMIC_TYPE)], [...localVars, ...bindingExpr.render3Stmts], o.INFERRED_TYPE, null, functionName);\n                this.instruction(this._creationCode, outputAst.sourceSpan, R3.listener, o.literal(outputAst.name), handler);\n            });\n        }\n        if ((styleInputs.length || classInputs.length) && hasStylingInstructions) {\n            /** @type {?} */\n            const indexLiteral = o.literal(elementIndex);\n            /** @type {?} */\n            const firstStyle = styleInputs[0];\n            /** @type {?} */\n            const mapBasedStyleInput = firstStyle && firstStyle.name == 'style' ? firstStyle : null;\n            /** @type {?} */\n            const firstClass = classInputs[0];\n            /** @type {?} */\n            const mapBasedClassInput = firstClass && isClassBinding(firstClass) ? firstClass : null;\n            /** @type {?} */\n            const stylingInput = mapBasedStyleInput || mapBasedClassInput;\n            if (stylingInput) {\n                /** @type {?} */\n                const params = [];\n                if (mapBasedClassInput) {\n                    params.push(this.convertPropertyBinding(implicit, mapBasedClassInput.value, true));\n                }\n                else if (mapBasedStyleInput) {\n                    params.push(o.NULL_EXPR);\n                }\n                if (mapBasedStyleInput) {\n                    params.push(this.convertPropertyBinding(implicit, mapBasedStyleInput.value, true));\n                }\n                this.instruction(this._bindingCode, stylingInput.sourceSpan, R3.elementStylingMap, indexLiteral, ...params);\n            }\n            /** @type {?} */\n            let lastInputCommand = null;\n            if (styleInputs.length) {\n                /** @type {?} */\n                let i = mapBasedStyleInput ? 1 : 0;\n                for (i; i < styleInputs.length; i++) {\n                    /** @type {?} */\n                    const input = styleInputs[i];\n                    /** @type {?} */\n                    const convertedBinding = this.convertPropertyBinding(implicit, input.value, true);\n                    /** @type {?} */\n                    const params = [convertedBinding];\n                    /** @type {?} */\n                    const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                    if (sanitizationRef) {\n                        params.push(sanitizationRef);\n                    }\n                    /** @type {?} */\n                    const key = input.name;\n                    /** @type {?} */\n                    const styleIndex = /** @type {?} */ ((stylesIndexMap[key]));\n                    this.instruction(this._bindingCode, input.sourceSpan, R3.elementStyleProp, indexLiteral, o.literal(styleIndex), ...params);\n                }\n                lastInputCommand = styleInputs[styleInputs.length - 1];\n            }\n            if (classInputs.length) {\n                /** @type {?} */\n                let i = mapBasedClassInput ? 1 : 0;\n                for (i; i < classInputs.length; i++) {\n                    /** @type {?} */\n                    const input = classInputs[i];\n                    /** @type {?} */\n                    const convertedBinding = this.convertPropertyBinding(implicit, input.value, true);\n                    /** @type {?} */\n                    const params = [convertedBinding];\n                    /** @type {?} */\n                    const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                    if (sanitizationRef) {\n                        params.push(sanitizationRef);\n                    }\n                    /** @type {?} */\n                    const key = input.name;\n                    /** @type {?} */\n                    const classIndex = /** @type {?} */ ((classesIndexMap[key]));\n                    this.instruction(this._bindingCode, input.sourceSpan, R3.elementClassProp, indexLiteral, o.literal(classIndex), ...params);\n                }\n                lastInputCommand = classInputs[classInputs.length - 1];\n            }\n            this.instruction(this._bindingCode, /** @type {?} */ ((lastInputCommand)).sourceSpan, R3.elementStylingApply, indexLiteral);\n        }\n        // Generate element input bindings\n        allOtherInputs.forEach((input) => {\n            if (input.type === 4 /* Animation */) {\n                console.error('warning: animation bindings not yet supported');\n                return;\n            }\n            /** @type {?} */\n            const convertedBinding = this.convertPropertyBinding(implicit, input.value);\n            /** @type {?} */\n            const instruction = mapBindingToInstruction(input.type);\n            if (instruction) {\n                /** @type {?} */\n                const params = [convertedBinding];\n                /** @type {?} */\n                const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                if (sanitizationRef) {\n                    params.push(sanitizationRef);\n                }\n                // TODO(chuckj): runtime: security context?\n                this.instruction(this._bindingCode, input.sourceSpan, instruction, o.literal(elementIndex), o.literal(input.name), ...params);\n            }\n            else {\n                this._unsupported(`binding type ${input.type}`);\n            }\n        });\n        // Traverse element child nodes\n        if (this._inI18nSection && element.children.length == 1 &&\n            element.children[0] instanceof t.Text) {\n            /** @type {?} */\n            const text = /** @type {?} */ (element.children[0]);\n            this.visitSingleI18nTextChild(text, i18nMeta);\n        }\n        else {\n            t.visitAll(this, element.children);\n        }\n        if (!createSelfClosingInstruction) {\n            // Finish element construction mode.\n            this.instruction(this._creationCode, element.endSourceSpan || element.sourceSpan, R3.elementEnd);\n        }\n        // Restore the state before exiting this node\n        this._inI18nSection = wasInI18nSection;\n    }\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    visitTemplate(template) {\n        /** @type {?} */\n        const templateIndex = this.allocateDataSlot();\n        /** @type {?} */\n        let elName = '';\n        if (template.children.length === 1 && template.children[0] instanceof t.Element) {\n            // When the template as a single child, derive the context name from the tag\n            elName = sanitizeIdentifier((/** @type {?} */ (template.children[0])).name);\n        }\n        /** @type {?} */\n        const contextName = elName ? `${this.contextName}_${elName}` : '';\n        /** @type {?} */\n        const templateName = contextName ? `${contextName}_Template_${templateIndex}` : `Template_${templateIndex}`;\n        /** @type {?} */\n        const templateContext = `ctx${this.level}`;\n        /** @type {?} */\n        const parameters = [\n            o.literal(templateIndex),\n            o.variable(templateName),\n            o.TYPED_NULL_EXPR,\n        ];\n        /** @type {?} */\n        const attributeNames = [];\n        /** @type {?} */\n        const attributeMap = {};\n        template.attributes.forEach(a => {\n            attributeNames.push(asLiteral(a.name), asLiteral(''));\n            attributeMap[a.name] = a.value;\n        });\n        // Match directives on template attributes\n        if (this.directiveMatcher) {\n            /** @type {?} */\n            const selector = createCssSelector('ng-template', attributeMap);\n            this.directiveMatcher.match(selector, (cssSelector, staticType) => { this.directives.add(staticType); });\n        }\n        if (attributeNames.length) {\n            parameters.push(this.constantPool.getConstLiteral(o.literalArr(attributeNames), true));\n        }\n        // e.g. C(1, C1Template)\n        this.instruction(this._creationCode, template.sourceSpan, R3.containerCreate, ...trimTrailingNulls(parameters));\n        /** @type {?} */\n        const context = o.variable(CONTEXT_NAME);\n        template.inputs.forEach(input => {\n            /** @type {?} */\n            const convertedBinding = this.convertPropertyBinding(context, input.value);\n            this.instruction(this._bindingCode, template.sourceSpan, R3.elementProperty, o.literal(templateIndex), o.literal(input.name), convertedBinding);\n        });\n        /** @type {?} */\n        const templateVisitor = new TemplateDefinitionBuilder(this.constantPool, templateContext, this._bindingScope, this.level + 1, contextName, templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes, this._namespace);\n        /** @type {?} */\n        const templateFunctionExpr = templateVisitor.buildTemplateFunction(template.children, template.variables);\n        this._postfixCode.push(templateFunctionExpr.toDeclStmt(templateName, null));\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitBoundText(text) {\n        /** @type {?} */\n        const nodeIndex = this.allocateDataSlot();\n        this.instruction(this._creationCode, text.sourceSpan, R3.text, o.literal(nodeIndex));\n        this.instruction(this._bindingCode, text.sourceSpan, R3.textBinding, o.literal(nodeIndex), this.convertPropertyBinding(o.variable(CONTEXT_NAME), text.value));\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) {\n        this.instruction(this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()), o.literal(text.value));\n    }\n    /**\n     * @param {?} text\n     * @param {?} i18nMeta\n     * @return {?}\n     */\n    visitSingleI18nTextChild(text, i18nMeta) {\n        /** @type {?} */\n        const meta = parseI18nMeta(i18nMeta);\n        /** @type {?} */\n        const variable = this.constantPool.getTranslation(text.value, meta);\n        this.instruction(this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()), variable);\n    }\n    /**\n     * @return {?}\n     */\n    allocateDataSlot() { return this._dataIndex++; }\n    /**\n     * @return {?}\n     */\n    bindingContext() { return `${this._bindingContext++}`; }\n    /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    instruction(statements, span, reference, ...params) {\n        statements.push(o.importExpr(reference, null, span).callFn(params, span).toStmt());\n    }\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?=} skipBindFn\n     * @return {?}\n     */\n    convertPropertyBinding(implicit, value, skipBindFn) {\n        /** @type {?} */\n        const pipesConvertedValue = value.visit(this._valueConverter);\n        if (pipesConvertedValue instanceof Interpolation) {\n            /** @type {?} */\n            const convertedPropertyBinding = convertPropertyBinding(this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple, interpolate);\n            this._bindingCode.push(...convertedPropertyBinding.stmts);\n            return convertedPropertyBinding.currValExpr;\n        }\n        else {\n            /** @type {?} */\n            const convertedPropertyBinding = convertPropertyBinding(this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple, () => error('Unexpected interpolation'));\n            this._bindingCode.push(...convertedPropertyBinding.stmts);\n            /** @type {?} */\n            const valExpr = convertedPropertyBinding.currValExpr;\n            return skipBindFn ? valExpr : o.importExpr(R3.bind).callFn([valExpr]);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._dataIndex;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._bindingContext;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._prefixCode;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._creationCode;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._variableCode;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._bindingCode;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._postfixCode;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._valueConverter;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._unsupported;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._bindingScope;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._inI18nSection;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._i18nSectionIndex;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._phToNodeIdxes;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._pureFunctionSlots;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.visitReference;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.visitVariable;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.visitTextAttribute;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.visitBoundAttribute;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.visitBoundEvent;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.constantPool;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.contextParameter;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.level;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.contextName;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.templateName;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.viewQueries;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.directiveMatcher;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.directives;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.pipeTypeByName;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype.pipes;\n    /** @type {?} */\n    TemplateDefinitionBuilder.prototype._namespace;\n}\nclass ValueConverter extends AstMemoryEfficientTransformer {\n    /**\n     * @param {?} constantPool\n     * @param {?} allocateSlot\n     * @param {?} allocatePureFunctionSlots\n     * @param {?} definePipe\n     */\n    constructor(constantPool, allocateSlot, allocatePureFunctionSlots, definePipe) {\n        super();\n        this.constantPool = constantPool;\n        this.allocateSlot = allocateSlot;\n        this.allocatePureFunctionSlots = allocatePureFunctionSlots;\n        this.definePipe = definePipe;\n    }\n    /**\n     * @param {?} pipe\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(pipe, context) {\n        /** @type {?} */\n        const slot = this.allocateSlot();\n        /** @type {?} */\n        const slotPseudoLocal = `PIPE:${slot}`;\n        /** @type {?} */\n        const pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n        /** @type {?} */\n        const target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n        const { identifier, isVarLength } = pipeBindingCallInfo(pipe.args);\n        this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(identifier));\n        /** @type {?} */\n        const args = [pipe.exp, ...pipe.args];\n        /** @type {?} */\n        const convertedArgs = isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n        return new FunctionCall(pipe.span, target, [\n            new LiteralPrimitive(pipe.span, slot),\n            new LiteralPrimitive(pipe.span, pureFunctionSlot),\n            ...convertedArgs,\n        ]);\n    }\n    /**\n     * @param {?} array\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(array, context) {\n        return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), values => {\n            /** @type {?} */\n            const literal = o.literalArr(values);\n            return values.every(a => a.isConstant()) ?\n                this.constantPool.getConstLiteral(literal, true) :\n                getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n        });\n    }\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(map, context) {\n        return new BuiltinFunctionCall(map.span, this.visitAll(map.values), values => {\n            /** @type {?} */\n            const literal = o.literalMap(values.map((value, index) => ({ key: map.keys[index].key, value, quoted: map.keys[index].quoted })));\n            return values.every(a => a.isConstant()) ?\n                this.constantPool.getConstLiteral(literal, true) :\n                getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n        });\n    }\n}\nif (false) {\n    /** @type {?} */\n    ValueConverter.prototype.constantPool;\n    /** @type {?} */\n    ValueConverter.prototype.allocateSlot;\n    /** @type {?} */\n    ValueConverter.prototype.allocatePureFunctionSlots;\n    /** @type {?} */\n    ValueConverter.prototype.definePipe;\n}\n/** @type {?} */\nconst pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\n/**\n * @param {?} args\n * @return {?}\n */\nfunction pipeBindingCallInfo(args) {\n    /** @type {?} */\n    const identifier = pipeBindingIdentifiers[args.length];\n    return {\n        identifier: identifier || R3.pipeBindV,\n        isVarLength: !identifier,\n    };\n}\n/** @type {?} */\nconst pureFunctionIdentifiers = [\n    R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n    R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\n/**\n * @param {?} args\n * @return {?}\n */\nfunction pureFunctionCallInfo(args) {\n    /** @type {?} */\n    const identifier = pureFunctionIdentifiers[args.length];\n    return {\n        identifier: identifier || R3.pureFunctionV,\n        isVarLength: !identifier,\n    };\n}\n/**\n * @param {?} constantPool\n * @param {?} literal\n * @param {?} allocateSlots\n * @return {?}\n */\nfunction getLiteralFactory(constantPool, literal, allocateSlots) {\n    const { literalFactory, literalFactoryArguments } = constantPool.getLiteralFactory(literal);\n    /** @type {?} */\n    const startSlot = allocateSlots(1 + literalFactoryArguments.length);\n    literalFactoryArguments.length > 0 || error(`Expected arguments to a literal factory function`);\n    const { identifier, isVarLength } = pureFunctionCallInfo(literalFactoryArguments);\n    /** @type {?} */\n    const args = [\n        o.literal(startSlot),\n        literalFactory,\n    ];\n    if (isVarLength) {\n        args.push(o.literalArr(literalFactoryArguments));\n    }\n    else {\n        args.push(...literalFactoryArguments);\n    }\n    return o.importExpr(identifier).callFn(args);\n}\n/** @typedef {?} */\nvar DeclareLocalVarCallback;\nexport { DeclareLocalVarCallback };\nexport class BindingScope {\n    /**\n     * @param {?=} parent\n     * @param {?=} declareLocalVarCallback\n     */\n    constructor(parent = null, declareLocalVarCallback = noop) {\n        this.parent = parent;\n        this.declareLocalVarCallback = declareLocalVarCallback;\n        /**\n         * Keeps a map from local variables to their expressions.\n         *\n         * This is used when one refers to variable such as: 'let abc = a.b.c`.\n         * - key to the map is the string literal `\"abc\"`.\n         * - value `lhs` is the left hand side which is an AST representing `abc`.\n         * - value `rhs` is the right hand side which is an AST representing `a.b.c`.\n         * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope\n         * already.\n         */\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n    }\n    /**\n     * @return {?}\n     */\n    static get ROOT_SCOPE() {\n        if (!BindingScope._ROOT_SCOPE) {\n            BindingScope._ROOT_SCOPE = new BindingScope().set('$event', o.variable('$event'));\n        }\n        return BindingScope._ROOT_SCOPE;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    get(name) {\n        /** @type {?} */\n        let current = this;\n        while (current) {\n            /** @type {?} */\n            let value = current.map.get(name);\n            if (value != null) {\n                if (current !== this) {\n                    // make a local copy and reset the `declared` state.\n                    value = { lhs: value.lhs, rhs: value.rhs, declared: false };\n                    // Cache the value locally.\n                    this.map.set(name, value);\n                }\n                if (value.rhs && !value.declared) {\n                    // if it is first time we are referencing the variable in the scope\n                    // than invoke the callback to insert variable declaration.\n                    this.declareLocalVarCallback(value.lhs, value.rhs);\n                    value.declared = true;\n                }\n                return value.lhs;\n            }\n            current = current.parent;\n        }\n        return null;\n    }\n    /**\n     * Create a local variable for later reference.\n     *\n     * @param {?} name Name of the variable.\n     * @param {?} lhs AST representing the left hand side of the `let lhs = rhs;`.\n     * @param {?=} rhs AST representing the right hand side of the `let lhs = rhs;`. The `rhs` can be\n     * `undefined` for variable that are ambient such as `$event` and which don't have `rhs`\n     * declaration.\n     * @return {?}\n     */\n    set(name, lhs, rhs) {\n        !this.map.has(name) ||\n            error(`The name ${name} is already defined in scope to be ${this.map.get(name)}`);\n        this.map.set(name, { lhs: lhs, rhs: rhs, declared: false });\n        return this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) { return this.get(name); }\n    /**\n     * @param {?} declareCallback\n     * @return {?}\n     */\n    nestedScope(declareCallback) {\n        return new BindingScope(this, declareCallback);\n    }\n    /**\n     * @return {?}\n     */\n    freshReferenceName() {\n        /** @type {?} */\n        let current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        /** @type {?} */\n        const ref = `${REFERENCE_PREFIX}${current.referenceNameIndex++}`;\n        return ref;\n    }\n}\nif (false) {\n    /** @type {?} */\n    BindingScope._ROOT_SCOPE;\n    /**\n     * Keeps a map from local variables to their expressions.\n     *\n     * This is used when one refers to variable such as: 'let abc = a.b.c`.\n     * - key to the map is the string literal `\"abc\"`.\n     * - value `lhs` is the left hand side which is an AST representing `abc`.\n     * - value `rhs` is the right hand side which is an AST representing `a.b.c`.\n     * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope\n     * already.\n     * @type {?}\n     */\n    BindingScope.prototype.map;\n    /** @type {?} */\n    BindingScope.prototype.referenceNameIndex;\n    /** @type {?} */\n    BindingScope.prototype.parent;\n    /** @type {?} */\n    BindingScope.prototype.declareLocalVarCallback;\n}\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n * @param {?} tag\n * @param {?} attributes\n * @return {?}\n */\nfunction createCssSelector(tag, attributes) {\n    /** @type {?} */\n    const cssSelector = new CssSelector();\n    cssSelector.setElement(tag);\n    Object.getOwnPropertyNames(attributes).forEach((name) => {\n        /** @type {?} */\n        const value = attributes[name];\n        cssSelector.addAttribute(name, value);\n        if (name.toLowerCase() === 'class') {\n            /** @type {?} */\n            const classes = value.trim().split(/\\s+/g);\n            classes.forEach(className => cssSelector.addClassName(className));\n        }\n    });\n    return cssSelector;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction parseI18nMeta(i18n) {\n    /** @type {?} */\n    let meaning;\n    /** @type {?} */\n    let description;\n    /** @type {?} */\n    let id;\n    if (i18n) {\n        /** @type {?} */\n        const idIndex = i18n.indexOf(ID_SEPARATOR);\n        /** @type {?} */\n        const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n        /** @type {?} */\n        let meaningAndDesc;\n        [meaningAndDesc, id] =\n            (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n        [meaning, description] = (descIndex > -1) ?\n            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n            ['', meaningAndDesc];\n    }\n    return { description, id, meaning };\n}\n/**\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return o.importExpr(R3.interpolation1).callFn(args);\n        case 5:\n            return o.importExpr(R3.interpolation2).callFn(args);\n        case 7:\n            return o.importExpr(R3.interpolation3).callFn(args);\n        case 9:\n            return o.importExpr(R3.interpolation4).callFn(args);\n        case 11:\n            return o.importExpr(R3.interpolation5).callFn(args);\n        case 13:\n            return o.importExpr(R3.interpolation6).callFn(args);\n        case 15:\n            return o.importExpr(R3.interpolation7).callFn(args);\n        case 17:\n            return o.importExpr(R3.interpolation8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(`Invalid interpolation argument length ${args.length}`);\n    return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param {?} template text of the template to parse\n * @param {?} templateUrl URL to use for source mapping of the parsed template\n * @param {?=} options\n * @return {?}\n */\nexport function parseTemplate(template, templateUrl, options = {}) {\n    /** @type {?} */\n    const bindingParser = makeBindingParser();\n    /** @type {?} */\n    const htmlParser = new HtmlParser();\n    /** @type {?} */\n    const parseResult = htmlParser.parse(template, templateUrl);\n    if (parseResult.errors && parseResult.errors.length > 0) {\n        return { errors: parseResult.errors, nodes: [], hasNgContent: false, ngContentSelectors: [] };\n    }\n    /** @type {?} */\n    let rootNodes = parseResult.rootNodes;\n    if (!options.preserveWhitespaces) {\n        rootNodes = html.visitAll(new WhitespaceVisitor(), rootNodes);\n    }\n    const { nodes, hasNgContent, ngContentSelectors, errors } = htmlAstToRender3Ast(rootNodes, bindingParser);\n    if (errors && errors.length > 0) {\n        return { errors, nodes: [], hasNgContent: false, ngContentSelectors: [] };\n    }\n    return { nodes, hasNgContent, ngContentSelectors };\n}\n/**\n * Construct a `BindingParser` with a default configuration.\n * @return {?}\n */\nexport function makeBindingParser() {\n    return new BindingParser(new Parser(new Lexer()), DEFAULT_INTERPOLATION_CONFIG, new DomElementSchemaRegistry(), null, []);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isClassBinding(input) {\n    return input.name == 'className' || input.name == 'class';\n}\n/**\n * @param {?} input\n * @param {?} context\n * @return {?}\n */\nfunction resolveSanitizationFn(input, context) {\n    switch (context) {\n        case core.SecurityContext.HTML:\n            return o.importExpr(R3.sanitizeHtml);\n        case core.SecurityContext.SCRIPT:\n            return o.importExpr(R3.sanitizeScript);\n        case core.SecurityContext.STYLE:\n            // the compiler does not fill in an instruction for [style.prop?] binding\n            // values because the style algorithm knows internally what props are subject\n            // to sanitization (only [attr.style] values are explicitly sanitized)\n            return input.type === 1 /* Attribute */ ? o.importExpr(R3.sanitizeStyle) : null;\n        case core.SecurityContext.URL:\n            return o.importExpr(R3.sanitizeUrl);\n        case core.SecurityContext.RESOURCE_URL:\n            return o.importExpr(R3.sanitizeResourceUrl);\n        default:\n            return null;\n    }\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction isStyleSanitizable(prop) {\n    switch (prop) {\n        case 'background-image':\n        case 'background':\n        case 'border-image':\n        case 'filter':\n        case 'list-style':\n        case 'list-style-image':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=template.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName, sanitizeIdentifier } from '../../compile_metadata';\nimport { BindingForm, convertActionBinding, convertPropertyBinding } from '../../compiler_util/expression_converter';\nimport * as core from '../../core';\nimport { LifecycleHooks } from '../../lifecycle_reflector';\nimport * as o from '../../output/output_ast';\nimport { typeSourceSpan } from '../../parse_util';\nimport { CssSelector, SelectorMatcher } from '../../selector';\nimport { error } from '../../util';\nimport { compileFactoryFunction, dependenciesFromGlobalMetadata } from '../r3_factory';\nimport { Identifiers as R3 } from '../r3_identifiers';\nimport { typeWithParameters } from '../util';\nimport { BindingScope, TemplateDefinitionBuilder, renderFlagCheckIfStmt } from './template';\nimport { CONTEXT_NAME, DefinitionMap, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, conditionallyCreateMapObjectLiteral, getQueryPredicate, temporaryAllocator } from './util';\n/**\n * @param {?} meta\n * @param {?} constantPool\n * @param {?} bindingParser\n * @return {?}\n */\nfunction baseDirectiveFields(meta, constantPool, bindingParser) {\n    /** @type {?} */\n    const definitionMap = new DefinitionMap();\n    // e.g. `type: MyDirective`\n    definitionMap.set('type', meta.type);\n    // e.g. `selectors: [['', 'someDir', '']]`\n    definitionMap.set('selectors', createDirectiveSelector(/** @type {?} */ ((meta.selector))));\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    definitionMap.set('factory', compileFactoryFunction({\n        name: meta.name,\n        fnOrClass: meta.type,\n        deps: meta.deps,\n        useNew: true,\n        injectFn: R3.directiveInject,\n    }));\n    definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n    definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n    // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n    definitionMap.set('hostBindings', createHostBindingsFunction(meta, bindingParser));\n    // e.g. `attributes: ['role', 'listbox']`\n    definitionMap.set('attributes', createHostAttributesArray(meta));\n    // e.g 'inputs: {a: 'a'}`\n    definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs));\n    // e.g 'outputs: {a: 'a'}`\n    definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n    /** @type {?} */\n    const features = [];\n    if (meta.usesInheritance) {\n        features.push(o.importExpr(R3.InheritDefinitionFeature));\n    }\n    if (meta.lifecycle.usesOnChanges) {\n        features.push(o.importExpr(R3.NgOnChangesFeature));\n    }\n    if (features.length) {\n        definitionMap.set('features', o.literalArr(features));\n    }\n    return definitionMap;\n}\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n * @param {?} meta\n * @param {?} constantPool\n * @param {?} bindingParser\n * @return {?}\n */\nexport function compileDirectiveFromMetadata(meta, constantPool, bindingParser) {\n    /** @type {?} */\n    const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n    /** @type {?} */\n    const expression = o.importExpr(R3.defineDirective).callFn([definitionMap.toLiteralMap()]);\n    /** @type {?} */\n    const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    /** @type {?} */\n    const type = new o.ExpressionType(o.importExpr(R3.DirectiveDef, [\n        typeWithParameters(meta.type, meta.typeArgumentCount),\n        new o.ExpressionType(o.literal(selectorForType))\n    ]));\n    return { expression, type };\n}\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n * @param {?} meta\n * @param {?} constantPool\n * @param {?} bindingParser\n * @return {?}\n */\nexport function compileComponentFromMetadata(meta, constantPool, bindingParser) {\n    /** @type {?} */\n    const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n    /** @type {?} */\n    const selector = meta.selector && CssSelector.parse(meta.selector);\n    /** @type {?} */\n    const firstSelector = selector && selector[0];\n    // e.g. `attr: [\"class\", \".my.app\"]`\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        /** @type {?} */\n        const selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMap.set('attrs', constantPool.getConstLiteral(o.literalArr(selectorAttributes.map(value => value != null ? o.literal(value) : o.literal(undefined))), /* forceShared */ true));\n        }\n    }\n    /** @type {?} */\n    let directiveMatcher = null;\n    if (meta.directives.size) {\n        /** @type {?} */\n        const matcher = new SelectorMatcher();\n        meta.directives.forEach((expression, selector) => {\n            matcher.addSelectables(CssSelector.parse(selector), expression);\n        });\n        directiveMatcher = matcher;\n    }\n    if (meta.viewQueries.length) {\n        definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n    }\n    /** @type {?} */\n    const templateTypeName = meta.name;\n    /** @type {?} */\n    const templateName = templateTypeName ? `${templateTypeName}_Template` : null;\n    /** @type {?} */\n    const directivesUsed = new Set();\n    /** @type {?} */\n    const pipesUsed = new Set();\n    /** @type {?} */\n    const template = meta.template;\n    /** @type {?} */\n    const templateFunctionExpression = new TemplateDefinitionBuilder(constantPool, CONTEXT_NAME, BindingScope.ROOT_SCOPE, 0, templateTypeName, templateName, meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed, R3.namespaceHTML)\n        .buildTemplateFunction(template.nodes, [], template.hasNgContent, template.ngContentSelectors);\n    definitionMap.set('template', templateFunctionExpression);\n    // e.g. `directives: [MyDirective]`\n    if (directivesUsed.size) {\n        definitionMap.set('directives', o.literalArr(Array.from(directivesUsed)));\n    }\n    // e.g. `pipes: [MyPipe]`\n    if (pipesUsed.size) {\n        definitionMap.set('pipes', o.literalArr(Array.from(pipesUsed)));\n    }\n    /** @type {?} */\n    const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    /** @type {?} */\n    const expression = o.importExpr(R3.defineComponent).callFn([definitionMap.toLiteralMap()]);\n    /** @type {?} */\n    const type = new o.ExpressionType(o.importExpr(R3.ComponentDef, [\n        typeWithParameters(meta.type, meta.typeArgumentCount),\n        new o.ExpressionType(o.literal(selectorForType))\n    ]));\n    return { expression, type };\n}\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n * @param {?} outputCtx\n * @param {?} directive\n * @param {?} reflector\n * @param {?} bindingParser\n * @return {?}\n */\nexport function compileDirectiveFromRender2(outputCtx, directive, reflector, bindingParser) {\n    /** @type {?} */\n    const name = /** @type {?} */ ((identifierName(directive.type)));\n    name || error(`Cannot resolver the name of ${directive.type}`);\n    /** @type {?} */\n    const definitionField = outputCtx.constantPool.propertyNameOf(1 /* Directive */);\n    /** @type {?} */\n    const meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n    /** @type {?} */\n    const res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(name, null, [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)], [], new o.ClassMethod(null, [], []), []));\n}\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} render3Ast\n * @param {?} reflector\n * @param {?} bindingParser\n * @param {?} directiveTypeBySel\n * @param {?} pipeTypeByName\n * @return {?}\n */\nexport function compileComponentFromRender2(outputCtx, component, render3Ast, reflector, bindingParser, directiveTypeBySel, pipeTypeByName) {\n    /** @type {?} */\n    const name = /** @type {?} */ ((identifierName(component.type)));\n    name || error(`Cannot resolver the name of ${component.type}`);\n    /** @type {?} */\n    const definitionField = outputCtx.constantPool.propertyNameOf(2 /* Component */);\n    /** @type {?} */\n    const summary = component.toSummary();\n    /** @type {?} */\n    const meta = Object.assign({}, directiveMetadataFromGlobalMetadata(component, outputCtx, reflector), { selector: component.selector, template: {\n            nodes: render3Ast.nodes,\n            hasNgContent: render3Ast.hasNgContent,\n            ngContentSelectors: render3Ast.ngContentSelectors,\n        }, directives: typeMapToExpressionMap(directiveTypeBySel, outputCtx), pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx), viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx) });\n    /** @type {?} */\n    const res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(name, null, [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)], [], new o.ClassMethod(null, [], []), []));\n}\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n * @param {?} directive\n * @param {?} outputCtx\n * @param {?} reflector\n * @return {?}\n */\nfunction directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector) {\n    /** @type {?} */\n    const summary = directive.toSummary();\n    /** @type {?} */\n    const name = /** @type {?} */ ((identifierName(directive.type)));\n    name || error(`Cannot resolver the name of ${directive.type}`);\n    return {\n        name,\n        type: outputCtx.importExpr(directive.type.reference),\n        typeArgumentCount: 0,\n        typeSourceSpan: typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n        selector: directive.selector,\n        deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n        queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n        lifecycle: {\n            usesOnChanges: directive.type.lifecycleHooks.some(lifecycle => lifecycle == LifecycleHooks.OnChanges),\n        },\n        host: {\n            attributes: directive.hostAttributes,\n            listeners: summary.hostListeners,\n            properties: summary.hostProperties,\n        },\n        inputs: directive.inputs,\n        outputs: directive.outputs,\n        usesInheritance: false,\n    };\n}\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n * @param {?} queries\n * @param {?} outputCtx\n * @return {?}\n */\nfunction queriesFromGlobalMetadata(queries, outputCtx) {\n    return queries.map(query => {\n        /** @type {?} */\n        let read = null;\n        if (query.read && query.read.identifier) {\n            read = outputCtx.importExpr(query.read.identifier.reference);\n        }\n        return {\n            propertyName: query.propertyName,\n            first: query.first,\n            predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n            descendants: query.descendants, read,\n        };\n    });\n}\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n * @param {?} selectors\n * @param {?} outputCtx\n * @return {?}\n */\nfunction selectorsFromGlobalMetadata(selectors, outputCtx) {\n    if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n        /** @type {?} */\n        const selectorStrings = selectors.map(value => /** @type {?} */ (value.value));\n        selectorStrings.some(value => !value) &&\n            error('Found a type among the string selectors expected');\n        return outputCtx.constantPool.getConstLiteral(o.literalArr(selectorStrings.map(value => o.literal(value))));\n    }\n    if (selectors.length == 1) {\n        /** @type {?} */\n        const first = selectors[0];\n        if (first.identifier) {\n            return outputCtx.importExpr(first.identifier.reference);\n        }\n    }\n    error('Unexpected query form');\n    return o.NULL_EXPR;\n}\n/**\n * @param {?} query\n * @param {?} constantPool\n * @param {?} idx\n * @return {?}\n */\nfunction createQueryDefinition(query, constantPool, idx) {\n    /** @type {?} */\n    const predicate = getQueryPredicate(query, constantPool);\n    /** @type {?} */\n    const parameters = [\n        o.literal(idx, o.INFERRED_TYPE),\n        predicate,\n        o.literal(query.descendants),\n    ];\n    if (query.read) {\n        parameters.push(query.read);\n    }\n    return o.importExpr(R3.query).callFn(parameters);\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction createDirectiveSelector(selector) {\n    return asLiteral(core.parseSelectorToR3Selector(selector));\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction createHostAttributesArray(meta) {\n    /** @type {?} */\n    const values = [];\n    /** @type {?} */\n    const attributes = meta.host.attributes;\n    for (let key of Object.getOwnPropertyNames(attributes)) {\n        /** @type {?} */\n        const value = attributes[key];\n        values.push(o.literal(key), o.literal(value));\n    }\n    if (values.length > 0) {\n        return o.literalArr(values);\n    }\n    return null;\n}\n/**\n * @param {?} meta\n * @param {?} constantPool\n * @return {?}\n */\nfunction createContentQueriesFunction(meta, constantPool) {\n    if (meta.queries.length) {\n        /** @type {?} */\n        const statements = meta.queries.map((query) => {\n            /** @type {?} */\n            const queryDefinition = createQueryDefinition(query, constantPool, null);\n            return o.importExpr(R3.registerContentQuery).callFn([queryDefinition]).toStmt();\n        });\n        /** @type {?} */\n        const typeName = meta.name;\n        return o.fn([], statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_ContentQueries` : null);\n    }\n    return null;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction createContentQueriesRefreshFunction(meta) {\n    if (meta.queries.length > 0) {\n        /** @type {?} */\n        const statements = [];\n        /** @type {?} */\n        const typeName = meta.name;\n        /** @type {?} */\n        const parameters = [\n            new o.FnParam('dirIndex', o.NUMBER_TYPE),\n            new o.FnParam('queryStartIndex', o.NUMBER_TYPE),\n        ];\n        /** @type {?} */\n        const directiveInstanceVar = o.variable('instance');\n        /** @type {?} */\n        const temporary = temporaryAllocator(statements, TEMPORARY_NAME);\n        // const $instance$ = $r3$.ɵd(dirIndex);\n        statements.push(directiveInstanceVar.set(o.importExpr(R3.loadDirective).callFn([o.variable('dirIndex')]))\n            .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        meta.queries.forEach((query, idx) => {\n            /** @type {?} */\n            const loadQLArg = o.variable('queryStartIndex');\n            /** @type {?} */\n            const getQueryList = o.importExpr(R3.loadQueryList).callFn([\n                idx > 0 ? loadQLArg.plus(o.literal(idx)) : loadQLArg\n            ]);\n            /** @type {?} */\n            const assignToTemporary = temporary().set(getQueryList);\n            /** @type {?} */\n            const callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n            /** @type {?} */\n            const updateDirective = directiveInstanceVar.prop(query.propertyName)\n                .set(query.first ? temporary().prop('first') : temporary());\n            /** @type {?} */\n            const refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n            statements.push(refreshQueryAndUpdateDirective.toStmt());\n        });\n        return o.fn(parameters, statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_ContentQueriesRefresh` : null);\n    }\n    return null;\n}\n/**\n * @param {?} meta\n * @param {?} constantPool\n * @return {?}\n */\nfunction createViewQueriesFunction(meta, constantPool) {\n    /** @type {?} */\n    const createStatements = [];\n    /** @type {?} */\n    const updateStatements = [];\n    /** @type {?} */\n    const tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n    for (let i = 0; i < meta.viewQueries.length; i++) {\n        /** @type {?} */\n        const query = meta.viewQueries[i];\n        /** @type {?} */\n        const queryDefinition = createQueryDefinition(query, constantPool, i);\n        createStatements.push(queryDefinition.toStmt());\n        /** @type {?} */\n        const temporary = tempAllocator();\n        /** @type {?} */\n        const getQueryList = o.importExpr(R3.load).callFn([o.literal(i)]);\n        /** @type {?} */\n        const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n        /** @type {?} */\n        const updateDirective = o.variable(CONTEXT_NAME)\n            .prop(query.propertyName)\n            .set(query.first ? temporary.prop('first') : temporary);\n        updateStatements.push(refresh.and(updateDirective).toStmt());\n    }\n    /** @type {?} */\n    const viewQueryFnName = meta.name ? `${meta.name}_Query` : null;\n    return o.fn([new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)], [\n        renderFlagCheckIfStmt(1 /* Create */, createStatements),\n        renderFlagCheckIfStmt(2 /* Update */, updateStatements)\n    ], o.INFERRED_TYPE, null, viewQueryFnName);\n}\n/**\n * @param {?} meta\n * @param {?} bindingParser\n * @return {?}\n */\nfunction createHostBindingsFunction(meta, bindingParser) {\n    /** @type {?} */\n    const statements = [];\n    /** @type {?} */\n    const hostBindingSourceSpan = meta.typeSourceSpan;\n    /** @type {?} */\n    const directiveSummary = metadataAsSummary(meta);\n    /** @type {?} */\n    const bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n    /** @type {?} */\n    const bindingContext = o.importExpr(R3.loadDirective).callFn([o.variable('dirIndex')]);\n    if (bindings) {\n        for (const binding of bindings) {\n            /** @type {?} */\n            const bindingExpr = convertPropertyBinding(null, bindingContext, binding.expression, 'b', BindingForm.TrySimple, () => error('Unexpected interpolation'));\n            statements.push(...bindingExpr.stmts);\n            statements.push(o.importExpr(R3.elementProperty)\n                .callFn([\n                o.variable('elIndex'),\n                o.literal(binding.name),\n                o.importExpr(R3.bind).callFn([bindingExpr.currValExpr]),\n            ])\n                .toStmt());\n        }\n    }\n    /** @type {?} */\n    const eventBindings = bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n    if (eventBindings) {\n        for (const binding of eventBindings) {\n            /** @type {?} */\n            const bindingExpr = convertActionBinding(null, bindingContext, binding.handler, 'b', () => error('Unexpected interpolation'));\n            /** @type {?} */\n            const bindingName = binding.name && sanitizeIdentifier(binding.name);\n            /** @type {?} */\n            const typeName = meta.name;\n            /** @type {?} */\n            const functionName = typeName && bindingName ? `${typeName}_${bindingName}_HostBindingHandler` : null;\n            /** @type {?} */\n            const handler = o.fn([new o.FnParam('$event', o.DYNAMIC_TYPE)], [...bindingExpr.stmts, new o.ReturnStatement(bindingExpr.allowDefault)], o.INFERRED_TYPE, null, functionName);\n            statements.push(o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt());\n        }\n    }\n    if (statements.length > 0) {\n        /** @type {?} */\n        const typeName = meta.name;\n        return o.fn([\n            new o.FnParam('dirIndex', o.NUMBER_TYPE),\n            new o.FnParam('elIndex', o.NUMBER_TYPE),\n        ], statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_HostBindings` : null);\n    }\n    return null;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction metadataAsSummary(meta) {\n    // clang-format off\n    return /** @type {?} */ ({\n        hostAttributes: meta.host.attributes,\n        hostListeners: meta.host.listeners,\n        hostProperties: meta.host.properties,\n    });\n    // clang-format on\n}\n/**\n * @param {?} map\n * @param {?} outputCtx\n * @return {?}\n */\nfunction typeMapToExpressionMap(map, outputCtx) {\n    /** @type {?} */\n    const entries = Array.from(map).map(([key, type]) => [key, outputCtx.importExpr(type)]);\n    return new Map(entries);\n}\n/** @type {?} */\nconst HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/** @enum {number} */\nconst HostBindingGroup = {\n    // group 1: \"prop\" from \"[prop]\"\n    Property: 1,\n    // group 2: \"event\" from \"(event)\"\n    Event: 2,\n    // group 3: \"@trigger\" from \"@trigger\"\n    Animation: 3,\n};\n/**\n * @param {?} host\n * @return {?}\n */\nexport function parseHostBindings(host) {\n    /** @type {?} */\n    const attributes = {};\n    /** @type {?} */\n    const listeners = {};\n    /** @type {?} */\n    const properties = {};\n    /** @type {?} */\n    const animations = {};\n    Object.keys(host).forEach(key => {\n        /** @type {?} */\n        const value = host[key];\n        /** @type {?} */\n        const matches = key.match(HOST_REG_EXP);\n        if (matches === null) {\n            attributes[key] = value;\n        }\n        else if (matches[1 /* Property */] != null) {\n            properties[matches[1 /* Property */]] = value;\n        }\n        else if (matches[2 /* Event */] != null) {\n            listeners[matches[2 /* Event */]] = value;\n        }\n        else if (matches[3 /* Animation */] != null) {\n            animations[matches[3 /* Animation */]] = value;\n        }\n    });\n    return { attributes, listeners, properties, animations };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { areAllEquivalent } from '../output/output_ast';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nexport class GeneratedFile {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    constructor(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    isEquivalent(other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    }\n}\nif (false) {\n    /** @type {?} */\n    GeneratedFile.prototype.source;\n    /** @type {?} */\n    GeneratedFile.prototype.stmts;\n    /** @type {?} */\n    GeneratedFile.prototype.srcFileUrl;\n    /** @type {?} */\n    GeneratedFile.prototype.genFileUrl;\n}\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nexport function toTypeScript(file, preamble = '') {\n    if (!file.stmts) {\n        throw new Error(`Illegal state: No stmts present on GeneratedFile ${file.genFileUrl}`);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n//# sourceMappingURL=generated_file.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { tokenReference } from '../compile_metadata';\n/**\n * @record\n */\nexport function LazyRoute() { }\n/** @type {?} */\nLazyRoute.prototype.module;\n/** @type {?} */\nLazyRoute.prototype.route;\n/** @type {?} */\nLazyRoute.prototype.referencedModule;\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nexport function listLazyRoutes(moduleMeta, reflector) {\n    /** @type {?} */\n    const allLazyRoutes = [];\n    for (const { provider, module } of moduleMeta.transitiveModule.providers) {\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            /** @type {?} */\n            const loadChildren = _collectLoadChildren(provider.useValue);\n            for (const route of loadChildren) {\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target = []) {\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (const route of routes) {\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nexport function parseLazyRoute(route, reflector, module) {\n    const [routePath, routeName] = route.split('#');\n    /** @type {?} */\n    const referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule };\n}\n//# sourceMappingURL=lazy_routes.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { isGeneratedFile, stripSummaryForJitFileSuffix, stripSummaryForJitNameSuffix, summaryForJitFileName, summaryForJitName } from './util';\n/** @type {?} */\nconst TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nexport class ResolvedStaticSymbol {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    constructor(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ResolvedStaticSymbol.prototype.symbol;\n    /** @type {?} */\n    ResolvedStaticSymbol.prototype.metadata;\n}\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\nexport function StaticSymbolResolverHost() { }\n/**\n * Return a ModuleMetadata for the given module.\n * Angular CLI will produce this metadata for a module whenever a .d.ts files is\n * produced and the module has exported variables or classes with decorators. Module metadata can\n * also be produced directly from TypeScript sources by using MetadataCollector in tools/metadata.\n *\n * \\@param modulePath is a string identifier for a module as an absolute path.\n * \\@return the metadata for the given module.\n * @type {?}\n */\nStaticSymbolResolverHost.prototype.getMetadataFor;\n/**\n * Converts a module name that is used in an `import` to a file path.\n * I.e.\n * `path/to/containingFile.ts` containing `import {...} from 'module-name'`.\n * @type {?}\n */\nStaticSymbolResolverHost.prototype.moduleNameToFileName;\n/**\n * Get a file suitable for display to the user that should be relative to the project directory\n * or the current directory.\n * @type {?}\n */\nStaticSymbolResolverHost.prototype.getOutputName;\n/** @type {?} */\nconst SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nexport class StaticSymbolResolver {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    constructor(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    resolveSymbol(staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        /** @type {?} */\n        const resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        /** @type {?} */\n        const resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    }\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    getImportAs(staticSymbol, useSummaries = true) {\n        if (staticSymbol.members.length) {\n            /** @type {?} */\n            const baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            /** @type {?} */\n            const baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        /** @type {?} */\n        const summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            /** @type {?} */\n            const summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            /** @type {?} */\n            const baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            /** @type {?} */\n            const baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        /** @type {?} */\n        let result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    }\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    getResourcePath(staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    }\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    getTypeArity(staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        /** @type {?} */\n        let resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getKnownModuleName(filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    }\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    recordImportAs(sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    }\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    recordModuleNameForFileName(fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    }\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    invalidateFile(fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        /** @type {?} */\n        const symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (const symbol of symbols) {\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    }\n    /**\n     * \\@internal\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    ignoreErrorsFor(cb) {\n        /** @type {?} */\n        const recorder = this.errorRecorder;\n        this.errorRecorder = () => { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    _resolveSymbolMembers(staticSymbol) {\n        /** @type {?} */\n        const members = staticSymbol.members;\n        /** @type {?} */\n        const baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        /** @type {?} */\n        let baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            /** @type {?} */\n            let value = baseMetadata;\n            for (let i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    _resolveSymbolFromSummary(staticSymbol) {\n        /** @type {?} */\n        const summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    }\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    getStaticSymbol(declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    }\n    /**\n     * hasDecorators checks a file's metadata for the presence of decorators without evaluating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    hasDecorators(filePath) {\n        /** @type {?} */\n        const metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some((metadataKey) => {\n                /** @type {?} */\n                const entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getSymbolsOf(filePath) {\n        /** @type {?} */\n        const summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        /** @type {?} */\n        const metadataSymbols = [];\n        this.resolvedSymbols.forEach((resolvedSymbol) => {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    _createSymbolsOf(filePath) {\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        /** @type {?} */\n        const resolvedSymbols = [];\n        /** @type {?} */\n        const metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            for (const moduleExport of metadata['exports']) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach((exportSymbol) => {\n                        /** @type {?} */\n                        let symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        /** @type {?} */\n                        let symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        /** @type {?} */\n                        const resolvedModule = this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            /** @type {?} */\n                            const targetSymbol = this.getStaticSymbol(resolvedModule, symName);\n                            /** @type {?} */\n                            const sourceSymbol = this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    /** @type {?} */\n                    const resolvedModule = this.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        /** @type {?} */\n                        const nestedExports = this.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach((targetSymbol) => {\n                            /** @type {?} */\n                            const sourceSymbol = this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there might be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            /** @type {?} */\n            const topLevelSymbolNames = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            /** @type {?} */\n            const origins = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach((metadataKey) => {\n                /** @type {?} */\n                const symbolMeta = metadata['metadata'][metadataKey];\n                /** @type {?} */\n                const name = unescapeIdentifier(metadataKey);\n                /** @type {?} */\n                const symbol = this.getStaticSymbol(filePath, name);\n                /** @type {?} */\n                const origin = origins.hasOwnProperty(metadataKey) && origins[metadataKey];\n                if (origin) {\n                    /** @type {?} */\n                    const originFilePath = this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        this.reportError(new Error(`Couldn't resolve original symbol for ${origin} from ${filePath}`));\n                    }\n                    else {\n                        this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach((resolvedSymbol) => this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol));\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(resolvedSymbol => resolvedSymbol.symbol));\n    }\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    createResolvedSymbol(sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        /** @type {?} */\n        const isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            /** @type {?} */\n            const transformedMeta = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n        }\n        /** @type {?} */\n        let _originalFileMemo;\n        /** @type {?} */\n        const getOriginalName = () => {\n            if (!_originalFileMemo) {\n                // Guess what the original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        /** @type {?} */\n        const self = this;\n        class ReferenceTransformer extends ValueTransformer {\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            visitStringMap(map, functionParams) {\n                /** @type {?} */\n                const symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    /** @type {?} */\n                    const oldLen = functionParams.length;\n                    functionParams.push(...(map['parameters'] || []));\n                    /** @type {?} */\n                    const result = super.visitStringMap(map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    /** @type {?} */\n                    const module = map['module'];\n                    /** @type {?} */\n                    const name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    /** @type {?} */\n                    let filePath;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: `Could not resolve ${module} relative to ${sourceSymbol.filePath}.`,\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return Object.assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return super.visitStringMap(map, functionParams);\n                }\n            }\n        }\n        /** @type {?} */\n        const transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        /** @type {?} */\n        let unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    }\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    createExport(sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    }\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    reportError(error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    getModuleMetadata(module) {\n        /** @type {?} */\n        let moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            /** @type {?} */\n            const moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                /** @type {?} */\n                let maxVersion = -1;\n                moduleMetadatas.forEach((md) => {\n                    if (md && md['version'] > maxVersion) {\n                        maxVersion = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                /** @type {?} */\n                const errorMessage = moduleMetadata['version'] == 2 ?\n                    `Unsupported metadata version ${moduleMetadata['version']} for module ${module}. This module should be compiled with a newer version of ngc` :\n                    `Metadata version mismatch for module ${module}, found version ${moduleMetadata['version']}, expected ${SUPPORTED_SCHEMA_VERSION}`;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    }\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    getSymbolByModule(module, symbolName, containingFile) {\n        /** @type {?} */\n        const filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(`Could not resolve module ${module}${containingFile ? ' relative to ' +\n                containingFile : ''}`));\n            return this.getStaticSymbol(`ERROR:${module}`, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    }\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    resolveModule(module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(`Could not resolve module '${module}' relative to file ${containingFile}`);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StaticSymbolResolver.prototype.metadataCache;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.resolvedSymbols;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.resolvedFilePaths;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.importAs;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.symbolResourcePaths;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.symbolFromFile;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.knownFileNameToModuleNames;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.host;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.staticSymbolCache;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.summaryResolver;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.errorRecorder;\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nexport function unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nexport function unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n//# sourceMappingURL=static_symbol_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { CompileNgModuleMetadata, CompileSummaryKind } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { unwrapResolvedMetadata } from './static_symbol_resolver';\nimport { isLoweredSymbol, ngfactoryFilePath, summaryForJitFileName, summaryForJitName } from './util';\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nexport function serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    /** @type {?} */\n    const toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach((resolvedSymbol) => toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }));\n    // Add type summaries.\n    types.forEach(({ summary, metadata }) => {\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    const { json, exportAs } = toJsonSerializer.serialize();\n    if (forJitCtx) {\n        /** @type {?} */\n        const forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(({ summary, metadata }) => { forJitSerializer.addSourceType(summary, metadata); });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach((summary) => {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer.addLibType(summary.type);\n            }\n        });\n        forJitSerializer.serialize(exportAs);\n    }\n    return { json, exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nexport function deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    /** @type {?} */\n    const deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nexport function createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, o.NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    /** @type {?} */\n    const fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(o.fn([], [new o.ReturnStatement(value)], new o.ArrayType(o.DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        o.StmtModifier.Final, o.StmtModifier.Exported\n    ]));\n}\n/** @enum {number} */\nconst SerializationFlags = {\n    None: 0,\n    ResolveValue: 1,\n};\nclass ToJsonSerializer extends ValueTransformer {\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     * @param {?} srcFileName\n     */\n    constructor(symbolResolver, summaryResolver, srcFileName) {\n        super();\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.srcFileName = srcFileName;\n        this.symbols = [];\n        this.indexBySymbol = new Map();\n        this.reexportedBy = new Map();\n        this.processedSummaryBySymbol = new Map();\n        this.processedSummaries = [];\n        this.unprocessedSymbolSummariesBySymbol = new Map();\n        this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addSummary(summary) {\n        /** @type {?} */\n        let unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        /** @type {?} */\n        let processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            /** @type {?} */\n            let metadata = summary.metadata || {};\n            if (metadata.__symbolic === 'class') {\n                /** @type {?} */\n                const clone = {};\n                Object.keys(metadata).forEach((propName) => {\n                    if (propName !== 'decorators') {\n                        clone[propName] = metadata[propName];\n                    }\n                });\n                metadata = clone;\n            }\n            else if (isCall(metadata)) {\n                if (!isFunctionCall(metadata) && !isMethodCallOnVariable(metadata)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata;\n            processedSummary.metadata = this.processValue(metadata, 1 /* ResolveValue */);\n            if (metadata instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata.filePath)) {\n                /** @type {?} */\n                const declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                /** @type {?} */\n                const ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach((id) => {\n                    /** @type {?} */\n                    const symbol = id.reference;\n                    if (this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        /** @type {?} */\n                        const summary = this.summaryResolver.resolveSummary(symbol);\n                        if (summary) {\n                            this.addSummary(summary);\n                        }\n                    }\n                });\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    serialize() {\n        /** @type {?} */\n        const exportAs = [];\n        /** @type {?} */\n        const json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map((symbol, index) => {\n                symbol.assertNoMembers();\n                /** @type {?} */\n                let importAs = /** @type {?} */ ((undefined));\n                if (this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    /** @type {?} */\n                    const reexportSymbol = this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        /** @type {?} */\n                        const summary = this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = `${symbol.name}_${index}`;\n                            exportAs.push({ symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: this.summaryResolver.toSummaryFileName(symbol.filePath, this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json, exportAs };\n    }\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    processValue(value, flags) {\n        return visitValue(value, this, flags);\n    }\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    visitOther(value, context) {\n        if (value instanceof StaticSymbol) {\n            /** @type {?} */\n            let baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            /** @type {?} */\n            const index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    }\n    /**\n     * Strip line and character numbers from ngsummaries.\n     * Emitting them causes white spaces changes to retrigger upstream\n     * recompilations in bazel.\n     * TODO: find out a way to have line and character numbers in errors without\n     * excessive recompilation in bazel.\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    visitStringMap(map, context) {\n        if (map['__symbolic'] === 'resolved') {\n            return visitValue(map[\"symbol\"], this, context);\n        }\n        if (map['__symbolic'] === 'error') {\n            delete map['line'];\n            delete map['character'];\n        }\n        return super.visitStringMap(map, context);\n    }\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    visitStaticSymbol(baseSymbol, flags) {\n        /** @type {?} */\n        let index = this.indexBySymbol.get(baseSymbol);\n        /** @type {?} */\n        let summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    }\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    loadSummary(symbol) {\n        /** @type {?} */\n        let summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            /** @type {?} */\n            const resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ToJsonSerializer.prototype.symbols;\n    /** @type {?} */\n    ToJsonSerializer.prototype.indexBySymbol;\n    /** @type {?} */\n    ToJsonSerializer.prototype.reexportedBy;\n    /** @type {?} */\n    ToJsonSerializer.prototype.processedSummaryBySymbol;\n    /** @type {?} */\n    ToJsonSerializer.prototype.processedSummaries;\n    /** @type {?} */\n    ToJsonSerializer.prototype.moduleName;\n    /** @type {?} */\n    ToJsonSerializer.prototype.unprocessedSymbolSummariesBySymbol;\n    /** @type {?} */\n    ToJsonSerializer.prototype.symbolResolver;\n    /** @type {?} */\n    ToJsonSerializer.prototype.summaryResolver;\n    /** @type {?} */\n    ToJsonSerializer.prototype.srcFileName;\n}\nclass ForJitSerializer {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    constructor(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    addSourceType(summary, metadata) {\n        this.data.push({ summary, metadata, isLibrary: false });\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addLibType(summary) {\n        this.data.push({ summary, metadata: null, isLibrary: true });\n    }\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    serialize(exportAsArr) {\n        /** @type {?} */\n        const exportAsBySymbol = new Map();\n        for (const { symbol, exportAs } of exportAsArr) {\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        /** @type {?} */\n        const ngModuleSymbols = new Set();\n        for (const { summary, metadata, isLibrary } of this.data) {\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                /** @type {?} */\n                const modSummary = /** @type {?} */ (summary);\n                for (const mod of modSummary.modules) {\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                /** @type {?} */\n                const fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach((ngModuleSymbol) => {\n            if (this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                /** @type {?} */\n                let exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                /** @type {?} */\n                const jitExportAsName = summaryForJitName(exportAs);\n                this.outputCtx.statements.push(o.variable(jitExportAsName)\n                    .set(this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [o.StmtModifier.Exported]));\n            }\n        });\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    serializeSummaryWithDeps(summary, metadata) {\n        /** @type {?} */\n        const expressions = [this.serializeSummary(summary)];\n        /** @type {?} */\n        let providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push(...\n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(type => type.reference)\n                // For modules,\n                // we also add the summaries for modules\n                // from libraries.\n                // This is ok as we produce reexports for all transitive modules.\n                .concat(metadata.transitiveModule.modules.map(type => type.reference)\n                .filter(ref => ref !== metadata.type.reference))\n                .map((ref) => this.serializeSummaryRef(ref)));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            /** @type {?} */\n            const dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push(...providers.filter(provider => !!provider.useClass).map(provider => this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        }))));\n        return o.literalArr(expressions);\n    }\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    serializeSummaryRef(typeSymbol) {\n        /** @type {?} */\n        const jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    serializeSummary(data) {\n        /** @type {?} */\n        const outputCtx = this.outputCtx;\n        class Transformer {\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            visitArray(arr, context) {\n                return o.literalArr(arr.map(entry => visitValue(entry, this, context)));\n            }\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            visitStringMap(map, context) {\n                return new o.LiteralMapExpr(Object.keys(map).map((key) => new o.LiteralMapEntry(key, visitValue(map[key], this, context), false)));\n            }\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            visitPrimitive(value, context) { return o.literal(value); }\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            visitOther(value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(`Illegal State: Encountered value ${value}`);\n                }\n            }\n        }\n        return visitValue(data, new Transformer(), null);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ForJitSerializer.prototype.data;\n    /** @type {?} */\n    ForJitSerializer.prototype.outputCtx;\n    /** @type {?} */\n    ForJitSerializer.prototype.symbolResolver;\n    /** @type {?} */\n    ForJitSerializer.prototype.summaryResolver;\n}\nclass FromJsonDeserializer extends ValueTransformer {\n    /**\n     * @param {?} symbolCache\n     * @param {?} summaryResolver\n     */\n    constructor(symbolCache, summaryResolver) {\n        super();\n        this.symbolCache = symbolCache;\n        this.summaryResolver = summaryResolver;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    deserialize(libraryFileName, json) {\n        /** @type {?} */\n        const data = JSON.parse(json);\n        /** @type {?} */\n        const allImportAs = [];\n        this.symbols = data.symbols.map((serializedSymbol) => this.symbolCache.get(this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name));\n        data.symbols.forEach((serializedSymbol, index) => {\n            /** @type {?} */\n            const symbol = this.symbols[index];\n            /** @type {?} */\n            const importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol, importAs: this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol, importAs: this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        /** @type {?} */\n        const summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries, importAs: allImportAs };\n    }\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    visitStringMap(map, context) {\n        if ('__symbol' in map) {\n            /** @type {?} */\n            const baseSymbol = this.symbols[map['__symbol']];\n            /** @type {?} */\n            const members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return super.visitStringMap(map, context);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FromJsonDeserializer.prototype.symbols;\n    /** @type {?} */\n    FromJsonDeserializer.prototype.symbolCache;\n    /** @type {?} */\n    FromJsonDeserializer.prototype.summaryResolver;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n//# sourceMappingURL=summary_serializer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { componentFactoryName, flatten, identifierName, templateSourceUrl } from '../compile_metadata';\nimport { ConstantPool } from '../constant_pool';\nimport { ViewEncapsulation } from '../core';\nimport { MessageBundle } from '../i18n/message_bundle';\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { removeWhitespaces } from '../ml_parser/html_whitespaces';\nimport { DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig } from '../ml_parser/interpolation_config';\nimport * as o from '../output/output_ast';\nimport { compileNgModuleFromRender2 as compileR3Module } from '../render3/r3_module_compiler';\nimport { compilePipeFromRender2 as compileR3Pipe } from '../render3/r3_pipe_compiler';\nimport { htmlAstToRender3Ast } from '../render3/r3_template_transform';\nimport { compileComponentFromRender2 as compileR3Component, compileDirectiveFromRender2 as compileR3Directive } from '../render3/view/compiler';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { BindingParser } from '../template_parser/binding_parser';\nimport { error, syntaxError, visitValue } from '../util';\nimport { GeneratedFile } from './generated_file';\nimport { listLazyRoutes, parseLazyRoute } from './lazy_routes';\nimport { StaticSymbol } from './static_symbol';\nimport { createForJitStub, serializeSummaries } from './summary_serializer';\nimport { ngfactoryFilePath, normalizeGenFileSuffix, splitTypescriptSuffix, summaryFileName, summaryForJitFileName } from './util';\n/** @enum {number} */\nconst StubEmitFlags = {\n    Basic: 1, TypeCheck: 2, All: 3,\n};\nexport class AotCompiler {\n    /**\n     * @param {?} _config\n     * @param {?} _options\n     * @param {?} _host\n     * @param {?} reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _typeCheckCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _injectableCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _symbolResolver\n     */\n    constructor(_config, _options, _host, reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this.reflector = reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() { this._metadataResolver.clearCache(); }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    analyzeModulesSync(rootFiles) {\n        /** @type {?} */\n        const analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true));\n        return analyzeResult;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    analyzeModulesAsync(rootFiles) {\n        /** @type {?} */\n        const analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false)))\n            .then(() => analyzeResult);\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    _analyzeFile(fileName) {\n        /** @type {?} */\n        let analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    _analyzeFileForInjectables(fileName) {\n        /** @type {?} */\n        let analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    findGeneratedFileNames(fileName) {\n        /** @type {?} */\n        const genFileNames = [];\n        /** @type {?} */\n        const file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        /** @type {?} */\n        const fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach((dirSymbol) => {\n            /** @type {?} */\n            const compMeta = /** @type {?} */ ((this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach((styleUrl) => {\n                /** @type {?} */\n                const normalizedUrl = this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(`Couldn't resolve resource ${styleUrl} relative to ${file.fileName}`);\n                }\n                /** @type {?} */\n                const needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    }\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    emitBasicStub(genFileName, originalFileName) {\n        /** @type {?} */\n        const outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(`Assertion error: require the original file for .ngfactory.ts stubs. File: ${genFileName}`);\n            }\n            /** @type {?} */\n            const originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, 1 /* Basic */);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(`Assertion error: require the original file for .ngsummary.ts stubs. File: ${genFileName}`);\n                }\n                /** @type {?} */\n                const originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(ngModule => {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as later on in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    }\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    emitTypeCheckStub(genFileName, originalFileName) {\n        /** @type {?} */\n        const originalFile = this._analyzeFile(originalFileName);\n        /** @type {?} */\n        const outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, 2 /* TypeCheck */);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    }\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    loadFilesAsync(fileNames, tsFiles) {\n        /** @type {?} */\n        const files = fileNames.map(fileName => this._analyzeFile(fileName));\n        /** @type {?} */\n        const loadingPromises = [];\n        files.forEach(file => file.ngModules.forEach(ngModule => loadingPromises.push(this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false))));\n        /** @type {?} */\n        const analyzedInjectables = tsFiles.map(tsFile => this._analyzeFileForInjectables(tsFile));\n        return Promise.all(loadingPromises).then(_ => ({\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        }));\n    }\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    loadFilesSync(fileNames, tsFiles) {\n        /** @type {?} */\n        const files = fileNames.map(fileName => this._analyzeFile(fileName));\n        files.forEach(file => file.ngModules.forEach(ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true)));\n        /** @type {?} */\n        const analyzedInjectables = tsFiles.map(tsFile => this._analyzeFileForInjectables(tsFile));\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    _createNgFactoryStub(outputCtx, file, emitFlags) {\n        /** @type {?} */\n        let componentId = 0;\n        file.ngModules.forEach((ngModuleMeta, ngModuleIndex) => {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the type-check block.\n            // create exports that user code can reference\n            this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            /** @type {?} */\n            const externalReferences = [\n                // Add references that are available from all the modules and imports.\n                ...ngModuleMeta.transitiveModule.directives.map(d => d.reference),\n                ...ngModuleMeta.transitiveModule.pipes.map(d => d.reference),\n                ...ngModuleMeta.importedModules.map(m => m.type.reference),\n                ...ngModuleMeta.exportedModules.map(m => m.type.reference),\n                // Add references that might be inserted by the template compiler.\n                ...this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]),\n            ];\n            /** @type {?} */\n            const externalReferenceVars = new Map();\n            externalReferences.forEach((ref, typeIndex) => {\n                externalReferenceVars.set(ref, `_decl${ngModuleIndex}_${typeIndex}`);\n            });\n            externalReferenceVars.forEach((varName, reference) => {\n                outputCtx.statements.push(o.variable(varName)\n                    .set(o.NULL_EXPR.cast(o.DYNAMIC_TYPE))\n                    .toDeclStmt(o.expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ /* useSummaries */ false))));\n            });\n            if (emitFlags & 2 /* TypeCheck */) {\n                // add the type-check block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach((dirId) => {\n                    /** @type {?} */\n                    const compMeta = this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    this._createTypeCheckBlock(outputCtx, `${compMeta.type.reference.name}_Host_${componentId}`, ngModuleMeta, this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    this._createTypeCheckBlock(outputCtx, `${compMeta.type.reference.name}_${componentId}`, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    }\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    _externalIdentifierReferences(references) {\n        /** @type {?} */\n        const result = [];\n        for (let reference of references) {\n            /** @type {?} */\n            const token = createTokenForExternalReference(this.reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    _createTypeCheckBlock(ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        const { template: parsedTemplate, pipes: usedPipes } = this._parseTemplate(compMeta, moduleMeta, directives);\n        ctx.statements.push(...this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n    }\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    emitMessageBundle(analyzeResult, locale) {\n        /** @type {?} */\n        const errors = [];\n        /** @type {?} */\n        const htmlParser = new HtmlParser();\n        /** @type {?} */\n        const messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(file => {\n            /** @type {?} */\n            const compMetas = [];\n            file.directives.forEach(directiveType => {\n                /** @type {?} */\n                const dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(compMeta => {\n                /** @type {?} */\n                const html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                /** @type {?} */\n                const templateUrl = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).templateUrl));\n                /** @type {?} */\n                const interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push(.../** @type {?} */ ((messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(e => e.toString()).join('\\n'));\n        }\n        return messageBundle;\n    }\n    /**\n     * @param {?} __0\n     * @param {?} r3Files\n     * @return {?}\n     */\n    emitAllPartialModules({ ngModuleByPipeOrDirective, files }, r3Files) {\n        /** @type {?} */\n        const contextMap = new Map();\n        /** @type {?} */\n        const getContext = (fileName) => {\n            if (!contextMap.has(fileName)) {\n                contextMap.set(fileName, this._createOutputContext(fileName));\n            }\n            return /** @type {?} */ ((contextMap.get(fileName)));\n        };\n        files.forEach(file => this._compilePartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables, getContext(file.fileName)));\n        r3Files.forEach(file => this._compileShallowModules(file.fileName, file.shallowModules, getContext(file.fileName)));\n        return Array.from(contextMap.values())\n            .map(context => ({\n            fileName: context.genFilePath,\n            statements: [...context.constantPool.statements, ...context.statements],\n        }));\n    }\n    /**\n     * @param {?} fileName\n     * @param {?} shallowModules\n     * @param {?} context\n     * @return {?}\n     */\n    _compileShallowModules(fileName, shallowModules, context) {\n        shallowModules.forEach(module => compileR3Module(context, module, this._injectableCompiler));\n    }\n    /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} context\n     * @return {?}\n     */\n    _compilePartialModule(fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables, context) {\n        /** @type {?} */\n        const errors = [];\n        /** @type {?} */\n        const schemaRegistry = new DomElementSchemaRegistry();\n        /** @type {?} */\n        const hostBindingParser = new BindingParser(this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n        // Process all components and directives\n        directives.forEach(directiveType => {\n            /** @type {?} */\n            const directiveMetadata = this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                /** @type {?} */\n                const module = /** @type {?} */ ((ngModuleByPipeOrDirective.get(directiveType)));\n                module ||\n                    error(`Cannot determine the module for component '${identifierName(directiveMetadata.type)}'`);\n                /** @type {?} */\n                let htmlAst = /** @type {?} */ ((/** @type {?} */ ((directiveMetadata.template)).htmlAst));\n                /** @type {?} */\n                const preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((directiveMetadata)).template)).preserveWhitespaces;\n                if (!preserveWhitespaces) {\n                    htmlAst = removeWhitespaces(htmlAst);\n                }\n                /** @type {?} */\n                const render3Ast = htmlAstToRender3Ast(htmlAst.rootNodes, hostBindingParser);\n                /** @type {?} */\n                const directiveTypeBySel = new Map();\n                /** @type {?} */\n                const directives = module.transitiveModule.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n                directives.forEach(directive => {\n                    if (directive.selector) {\n                        directiveTypeBySel.set(directive.selector, directive.type.reference);\n                    }\n                });\n                /** @type {?} */\n                const pipeTypeByName = new Map();\n                /** @type {?} */\n                const pipes = module.transitiveModule.pipes.map(pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n                pipes.forEach(pipe => { pipeTypeByName.set(pipe.name, pipe.type.reference); });\n                compileR3Component(context, directiveMetadata, render3Ast, this.reflector, hostBindingParser, directiveTypeBySel, pipeTypeByName);\n            }\n            else {\n                compileR3Directive(context, directiveMetadata, this.reflector, hostBindingParser);\n            }\n        });\n        pipes.forEach(pipeType => {\n            /** @type {?} */\n            const pipeMetadata = this._metadataResolver.getPipeMetadata(pipeType);\n            if (pipeMetadata) {\n                compileR3Pipe(context, pipeMetadata, this.reflector);\n            }\n        });\n        injectables.forEach(injectable => this._injectableCompiler.compile(injectable, context));\n    }\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    emitAllPartialModules2(files) {\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce((r, file) => {\n            r.push(...this._emitPartialModule2(file.fileName, file.injectables));\n            return r;\n        }, []);\n    }\n    /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    _emitPartialModule2(fileName, injectables) {\n        /** @type {?} */\n        const context = this._createOutputContext(fileName);\n        injectables.forEach(injectable => this._injectableCompiler.compile(injectable, context));\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName, statements: [...context.constantPool.statements, ...context.statements] }];\n        }\n        return [];\n    }\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    emitAllImpls(analyzeResult) {\n        const { ngModuleByPipeOrDirective, files } = analyzeResult;\n        /** @type {?} */\n        const sourceModules = files.map(file => this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n        return flatten(sourceModules);\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    _compileImplFile(srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        /** @type {?} */\n        const fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        /** @type {?} */\n        const generatedFiles = [];\n        /** @type {?} */\n        const outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push(...this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach((ngModuleMeta) => this._compileModule(outputCtx, ngModuleMeta));\n        // compile components\n        directives.forEach((dirType) => {\n            /** @type {?} */\n            const compMeta = this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            /** @type {?} */\n            const ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(`Internal Error: cannot determine the module for component ${identifierName(compMeta.type)}!`);\n            }\n            /** @type {?} */\n            const componentStylesheet = this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n                /** @type {?} */\n                const shim = this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            /** @type {?} */\n            const compViewVars = this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            /** @type {?} */\n            const srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    }\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    _createSummary(srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        /** @type {?} */\n        const symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(symbol => this._symbolResolver.resolveSymbol(symbol));\n        /** @type {?} */\n        const typeData = [\n            ...ngModules.map(meta => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            })),\n            ...directives.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getDirectiveMetadata(ref)))\n            })),\n            ...pipes.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getPipeMetadata(ref)))\n            })),\n            ...injectables.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getInjectableSummary(ref.symbol))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getInjectableSummary(ref.symbol))).type\n            }))\n        ];\n        /** @type {?} */\n        const forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        const { json, exportAs } = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData);\n        exportAs.forEach((entry) => {\n            ngFactoryCtx.statements.push(o.variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                o.StmtModifier.Exported\n            ]));\n        });\n        /** @type {?} */\n        const summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        /** @type {?} */\n        const result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    _compileModule(outputCtx, ngModule) {\n        /** @type {?} */\n        const providers = [];\n        if (this._options.locale) {\n            /** @type {?} */\n            const normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    _compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix) {\n        /** @type {?} */\n        const hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        /** @type {?} */\n        const hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        /** @type {?} */\n        const compFactoryVar = componentFactoryName(compMeta.type.reference);\n        /** @type {?} */\n        const inputsExprs = [];\n        for (let propName in compMeta.inputs) {\n            /** @type {?} */\n            const templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        /** @type {?} */\n        const outputsExprs = [];\n        for (let propName in compMeta.outputs) {\n            /** @type {?} */\n            const templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        outputCtx.statements.push(o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.createComponentFactory).callFn([\n            o.literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            o.variable(hostViewFactoryVar), new o.LiteralMapExpr(inputsExprs),\n            new o.LiteralMapExpr(outputsExprs),\n            o.literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(selector => o.literal(selector)))\n        ]))\n            .toDeclStmt(o.importType(Identifiers.ComponentFactory, [/** @type {?} */ ((o.expressionType(outputCtx.importExpr(compMeta.type.reference))))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    _compileComponent(outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        const { template: parsedTemplate, pipes: usedPipes } = this._parseTemplate(compMeta, ngModule, directiveIdentifiers);\n        /** @type {?} */\n        const stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n        /** @type {?} */\n        const viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    }\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    _parseTemplate(compMeta, ngModule, directiveIdentifiers) {\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        /** @type {?} */\n        const preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        /** @type {?} */\n        const directives = directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n        /** @type {?} */\n        const pipes = ngModule.transitiveModule.pipes.map(pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n        /** @type {?} */\n        const result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    }\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    _createOutputContext(genFilePath) {\n        /** @type {?} */\n        const importExpr = (symbol, typeParams = null, useSummaries = true) => {\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(`Internal error: unknown identifier ${JSON.stringify(symbol)}`);\n            }\n            /** @type {?} */\n            const arity = this._symbolResolver.getTypeArity(symbol) || 0;\n            const { filePath, name, members } = this._symbolResolver.getImportAs(symbol, useSummaries) || symbol;\n            /** @type {?} */\n            const importModule = this._fileNameToModuleName(filePath, genFilePath);\n            /** @type {?} */\n            const selfReference = this._fileNameToModuleName(genFilePath, genFilePath);\n            /** @type {?} */\n            const moduleName = importModule === selfReference ? null : importModule;\n            /** @type {?} */\n            const suppliedTypeParams = typeParams || [];\n            /** @type {?} */\n            const missingTypeParamsCount = arity - suppliedTypeParams.length;\n            /** @type {?} */\n            const allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(o.DYNAMIC_TYPE));\n            return members.reduce((expr, memberName) => expr.prop(memberName), /** @type {?} */ (o.importExpr(new o.ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath, importExpr, constantPool: new ConstantPool() };\n    }\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    _fileNameToModuleName(importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    _codegenStyles(srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        /** @type {?} */\n        const outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        /** @type {?} */\n        const compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    _codegenSourceModule(srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    }\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    listLazyRoutes(entryRoute, analyzedModules) {\n        /** @type {?} */\n        const self = this;\n        if (entryRoute) {\n            /** @type {?} */\n            const symbol = parseLazyRoute(entryRoute, this.reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            /** @type {?} */\n            const allLazyRoutes = [];\n            for (const ngModule of analyzedModules.ngModules) {\n                /** @type {?} */\n                const lazyRoutes = listLazyRoutes(ngModule, this.reflector);\n                for (const lazyRoute of lazyRoutes) {\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(`Either route or analyzedModules has to be specified!`);\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes = new Set(), allLazyRoutes = []) {\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            /** @type {?} */\n            const lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self.reflector);\n            for (const lazyRoute of lazyRoutes) {\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    AotCompiler.prototype._templateAstCache;\n    /** @type {?} */\n    AotCompiler.prototype._analyzedFiles;\n    /** @type {?} */\n    AotCompiler.prototype._analyzedFilesForInjectables;\n    /** @type {?} */\n    AotCompiler.prototype._config;\n    /** @type {?} */\n    AotCompiler.prototype._options;\n    /** @type {?} */\n    AotCompiler.prototype._host;\n    /** @type {?} */\n    AotCompiler.prototype.reflector;\n    /** @type {?} */\n    AotCompiler.prototype._metadataResolver;\n    /** @type {?} */\n    AotCompiler.prototype._templateParser;\n    /** @type {?} */\n    AotCompiler.prototype._styleCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._viewCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._typeCheckCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._ngModuleCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._injectableCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._outputEmitter;\n    /** @type {?} */\n    AotCompiler.prototype._summaryResolver;\n    /** @type {?} */\n    AotCompiler.prototype._symbolResolver;\n}\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(o.importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach((dep) => {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return `${stylesheetUrl}${shim ? '.shim' : ''}.ngstyle${suffix}`;\n}\n/**\n * @record\n */\nexport function NgAnalyzedModules() { }\n/** @type {?} */\nNgAnalyzedModules.prototype.ngModules;\n/** @type {?} */\nNgAnalyzedModules.prototype.ngModuleByPipeOrDirective;\n/** @type {?} */\nNgAnalyzedModules.prototype.files;\n/** @type {?|undefined} */\nNgAnalyzedModules.prototype.symbolsMissingModule;\n/**\n * @record\n */\nexport function NgAnalyzedFileWithInjectables() { }\n/** @type {?} */\nNgAnalyzedFileWithInjectables.prototype.fileName;\n/** @type {?} */\nNgAnalyzedFileWithInjectables.prototype.injectables;\n/** @type {?} */\nNgAnalyzedFileWithInjectables.prototype.shallowModules;\n/**\n * @record\n */\nexport function NgAnalyzedFile() { }\n/** @type {?} */\nNgAnalyzedFile.prototype.fileName;\n/** @type {?} */\nNgAnalyzedFile.prototype.directives;\n/** @type {?} */\nNgAnalyzedFile.prototype.pipes;\n/** @type {?} */\nNgAnalyzedFile.prototype.ngModules;\n/** @type {?} */\nNgAnalyzedFile.prototype.injectables;\n/** @type {?} */\nNgAnalyzedFile.prototype.exportsNonSourceFiles;\n/**\n * @record\n */\nexport function NgAnalyzeModulesHost() { }\n/** @type {?} */\nNgAnalyzeModulesHost.prototype.isSourceFile;\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    /** @type {?} */\n    const files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        /** @type {?} */\n        const messages = analyzedModules.symbolsMissingModule.map(s => `Cannot determine the module for class ${s.name} in ${s.filePath}! Add ${s.name} to the NgModule to fix it.`);\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    /** @type {?} */\n    const seenFiles = new Set();\n    /** @type {?} */\n    const files = [];\n    /** @type {?} */\n    const visitFile = (fileName) => {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        /** @type {?} */\n        const analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(ngModule => {\n            ngModule.transitiveModule.modules.forEach(modMeta => visitFile(modMeta.reference.filePath));\n        });\n    };\n    fileNames.forEach((fileName) => visitFile(fileName));\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nexport function analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    /** @type {?} */\n    const directives = [];\n    /** @type {?} */\n    const pipes = [];\n    /** @type {?} */\n    const injectables = [];\n    /** @type {?} */\n    const ngModules = [];\n    /** @type {?} */\n    const hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    /** @type {?} */\n    let exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach((symbol) => {\n            /** @type {?} */\n            const resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            /** @type {?} */\n            const symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            /** @type {?} */\n            let isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    /** @type {?} */\n                    const ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    /** @type {?} */\n                    const injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName, directives, pipes, ngModules, injectables, exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nexport function analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    /** @type {?} */\n    const injectables = [];\n    /** @type {?} */\n    const shallowModules = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach((symbol) => {\n            /** @type {?} */\n            const resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            /** @type {?} */\n            const symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    /** @type {?} */\n                    const injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    /** @type {?} */\n                    const module = metadataResolver.getShallowModuleMetadata(symbol);\n                    if (module) {\n                        shallowModules.push(module);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName, injectables, shallowModules };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    /** @type {?} */\n    let exportsNonSourceFiles = false;\n    class Visitor {\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        visitArray(arr, context) { arr.forEach(v => visitValue(v, this, context)); }\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        visitStringMap(map, context) {\n            Object.keys(map).forEach((key) => visitValue(map[key], this, context));\n        }\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        visitPrimitive(value, context) { }\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        visitOther(value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        }\n    }\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nexport function mergeAnalyzedFiles(analyzedFiles) {\n    /** @type {?} */\n    const allNgModules = [];\n    /** @type {?} */\n    const ngModuleByPipeOrDirective = new Map();\n    /** @type {?} */\n    const allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(af => {\n        af.ngModules.forEach(ngModule => {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(d => ngModuleByPipeOrDirective.set(d.reference, ngModule));\n            ngModule.declaredPipes.forEach(p => ngModuleByPipeOrDirective.set(p.reference, ngModule));\n        });\n        af.directives.forEach(d => allPipesAndDirectives.add(d));\n        af.pipes.forEach(p => allPipesAndDirectives.add(p));\n    });\n    /** @type {?} */\n    const symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(ref => {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective,\n        symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { syntaxError } from '../util';\n/**\n * @record\n */\nexport function Position() { }\n/** @type {?} */\nPosition.prototype.fileName;\n/** @type {?} */\nPosition.prototype.line;\n/** @type {?} */\nPosition.prototype.column;\n/**\n * @record\n */\nexport function FormattedMessageChain() { }\n/** @type {?} */\nFormattedMessageChain.prototype.message;\n/** @type {?|undefined} */\nFormattedMessageChain.prototype.position;\n/** @type {?|undefined} */\nFormattedMessageChain.prototype.next;\n/** @typedef {?} */\nvar FormattedError;\nexport { FormattedError };\n/** @type {?} */\nconst FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    /** @type {?} */\n    const half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent = 0) {\n    if (!chain)\n        return '';\n    /** @type {?} */\n    const position = chain.position ?\n        `${chain.position.fileName}(${chain.position.line + 1},${chain.position.column + 1})` :\n        '';\n    /** @type {?} */\n    const prefix = position && indent === 0 ? `${position}: ` : '';\n    /** @type {?} */\n    const postfix = position && indent !== 0 ? ` at ${position}` : '';\n    /** @type {?} */\n    const message = `${prefix}${chain.message}${postfix}`;\n    return `${indentStr(indent)}${message}${(chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || ''}`;\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nexport function formattedError(chain) {\n    /** @type {?} */\n    const message = formatChain(chain) + '.';\n    /** @type {?} */\n    const error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[FORMATTED_MESSAGE] = true;\n    error.chain = chain;\n    error.position = chain.position;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function isFormattedError(error) {\n    return !!(/** @type {?} */ (error))[FORMATTED_MESSAGE];\n}\n//# sourceMappingURL=formatted_error.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileSummaryKind } from '../compile_metadata';\nimport { createAttribute, createComponent, createContentChild, createContentChildren, createDirective, createHost, createHostBinding, createHostListener, createInject, createInjectable, createInput, createNgModule, createOptional, createOutput, createPipe, createSelf, createSkipSelf, createViewChild, createViewChildren } from '../core';\nimport { syntaxError } from '../util';\nimport { formattedError } from './formatted_error';\nimport { StaticSymbol } from './static_symbol';\n/** @type {?} */\nconst ANGULAR_CORE = '@angular/core';\n/** @type {?} */\nconst ANGULAR_ROUTER = '@angular/router';\n/** @type {?} */\nconst HIDDEN_KEY = /^\\$.*\\$$/;\n/** @type {?} */\nconst IGNORE = {\n    __symbolic: 'ignore'\n};\n/** @type {?} */\nconst USE_VALUE = 'useValue';\n/** @type {?} */\nconst PROVIDE = 'provide';\n/** @type {?} */\nconst REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data', 'id', 'loadChildren']);\n/** @type {?} */\nconst TYPEGUARD_POSTFIX = 'TypeGuard';\n/** @type {?} */\nconst USE_IF = 'UseIf';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    constructor(summaryResolver, symbolResolver, knownMetadataClasses = [], knownMetadataFunctions = [], errorRecorder) {\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.shallowAnnotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach((kc) => this._registerDecoratorOrConstructor(this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n        knownMetadataFunctions.forEach((kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    componentModuleUrl(typeOrFunc) {\n        /** @type {?} */\n        const staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    }\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    resolveExternalReference(ref, containingFile) {\n        /** @type {?} */\n        let key = undefined;\n        if (!containingFile) {\n            key = `${ref.moduleName}:${ref.name}`;\n            /** @type {?} */\n            const declarationSymbol = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol)\n                return declarationSymbol;\n        }\n        /** @type {?} */\n        const refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        /** @type {?} */\n        const declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    }\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    findDeclaration(moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    }\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    tryFindDeclaration(moduleUrl, name, containingFile) {\n        return this.symbolResolver.ignoreErrorsFor(() => this.findDeclaration(moduleUrl, name, containingFile));\n    }\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    findSymbolDeclaration(symbol) {\n        /** @type {?} */\n        const resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            /** @type {?} */\n            let resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    tryAnnotations(type) {\n        /** @type {?} */\n        const originalRecorder = this.errorRecorder;\n        this.errorRecorder = (error, fileName) => { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    annotations(type) {\n        return this._annotations(type, (type, decorators) => this.simplify(type, decorators), this.annotationCache);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    shallowAnnotations(type) {\n        return this._annotations(type, (type, decorators) => this.simplify(type, decorators, true), this.shallowAnnotationCache);\n    }\n    /**\n     * @param {?} type\n     * @param {?} simplify\n     * @param {?} annotationCache\n     * @return {?}\n     */\n    _annotations(type, simplify, annotationCache) {\n        /** @type {?} */\n        let annotations = annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            /** @type {?} */\n            const classMetadata = this.getTypeMetadata(type);\n            /** @type {?} */\n            const parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                /** @type {?} */\n                const parentAnnotations = this.annotations(parentType);\n                annotations.push(...parentAnnotations);\n            }\n            /** @type {?} */\n            let ownAnnotations = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations = simplify(type, classMetadata['decorators']);\n                if (ownAnnotations) {\n                    annotations.push(...ownAnnotations);\n                }\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                /** @type {?} */\n                const summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    /** @type {?} */\n                    const requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    /** @type {?} */\n                    const typeHasRequiredAnnotation = requiredAnnotationTypes.some((requiredType) => ownAnnotations.some(ann => requiredType.isTypeOf(ann)));\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(`Class ${type.name} in ${type.filePath} extends from a ${CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))]} in another compilation unit without duplicating the decorator`, undefined, `Please add a ${requiredAnnotationTypes.map((type) => type.ngMetadataName).join(' or ')} decorator to the class`), type), type);\n                    }\n                }\n            }\n            annotationCache.set(type, annotations.filter(ann => !!ann));\n        }\n        return annotations;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    propMetadata(type) {\n        /** @type {?} */\n        let propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            /** @type {?} */\n            const classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            /** @type {?} */\n            const parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                /** @type {?} */\n                const parentPropMetadata = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata).forEach((parentProp) => {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata[parentProp];\n                });\n            }\n            /** @type {?} */\n            const members = classMetadata['members'] || {};\n            Object.keys(members).forEach((propName) => {\n                /** @type {?} */\n                const propData = members[propName];\n                /** @type {?} */\n                const prop = (/** @type {?} */ (propData))\n                    .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n                /** @type {?} */\n                const decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push(.../** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push(...this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    parameters(type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n            return [];\n        }\n        try {\n            /** @type {?} */\n            let parameters = this.parameterCache.get(type);\n            if (!parameters) {\n                /** @type {?} */\n                const classMetadata = this.getTypeMetadata(type);\n                /** @type {?} */\n                const parentType = this.findParentType(type, classMetadata);\n                /** @type {?} */\n                const members = classMetadata ? classMetadata['members'] : null;\n                /** @type {?} */\n                const ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    /** @type {?} */\n                    const ctor = (/** @type {?} */ (ctorData)).find(a => a['__symbolic'] == 'constructor');\n                    /** @type {?} */\n                    const rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    /** @type {?} */\n                    const parameterDecorators = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters = [];\n                    rawParameterTypes.forEach((rawParamType, index) => {\n                        /** @type {?} */\n                        const nestedResult = [];\n                        /** @type {?} */\n                        const paramType = this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        /** @type {?} */\n                        const decorators = parameterDecorators ? parameterDecorators[index] : null;\n                        if (decorators) {\n                            nestedResult.push(...decorators);\n                        } /** @type {?} */\n                        ((parameters)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters = this.parameters(parentType);\n                }\n                if (!parameters) {\n                    parameters = [];\n                }\n                this.parameterCache.set(type, parameters);\n            }\n            return parameters;\n        }\n        catch (e) {\n            console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n            throw e;\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _methodNames(type) {\n        /** @type {?} */\n        let methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            /** @type {?} */\n            const classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            /** @type {?} */\n            const parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                /** @type {?} */\n                const parentMethodNames = this._methodNames(parentType);\n                Object.keys(parentMethodNames).forEach((parentProp) => {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames[parentProp];\n                });\n            }\n            /** @type {?} */\n            const members = classMetadata['members'] || {};\n            Object.keys(members).forEach((propName) => {\n                /** @type {?} */\n                const propData = members[propName];\n                /** @type {?} */\n                const isMethod = (/** @type {?} */ (propData)).some(a => a['__symbolic'] == 'method'); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _staticMembers(type) {\n        /** @type {?} */\n        let staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            /** @type {?} */\n            const classMetadata = this.getTypeMetadata(type);\n            /** @type {?} */\n            const staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    }\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    findParentType(type, classMetadata) {\n        /** @type {?} */\n        const parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(`hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n            throw e;\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    guards(type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(`guards received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n            return {};\n        }\n        /** @type {?} */\n        const staticMembers = this._staticMembers(type);\n        /** @type {?} */\n        const result = {};\n        for (let name of staticMembers) {\n            if (name.endsWith(TYPEGUARD_POSTFIX)) {\n                /** @type {?} */\n                let property = name.substr(0, name.length - TYPEGUARD_POSTFIX.length);\n                /** @type {?} */\n                let value;\n                if (property.endsWith(USE_IF)) {\n                    property = name.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    _registerDecoratorOrConstructor(type, ctor) {\n        this.conversionMap.set(type, (context, args) => new ctor(...args));\n    }\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    _registerFunction(type, fn) {\n        this.conversionMap.set(type, (context, args) => fn.apply(undefined, args));\n    }\n    /**\n     * @return {?}\n     */\n    initializeConversionMap() {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    }\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    getStaticSymbol(declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    }\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    trySimplify(context, value) {\n        /** @type {?} */\n        const originalRecorder = this.errorRecorder;\n        this.errorRecorder = (error, fileName) => { };\n        /** @type {?} */\n        const result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    }\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @param {?=} lazy\n     * @return {?}\n     */\n    simplify(context, value, lazy = false) {\n        /** @type {?} */\n        const self = this;\n        /** @type {?} */\n        let scope = BindingScope.empty;\n        /** @type {?} */\n        const calling = new Map();\n        /** @type {?} */\n        const rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                /** @type {?} */\n                const resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (e) {\n                    if (isMetadataError(e)) {\n                        /** @type {?} */\n                        const summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        /** @type {?} */\n                        const summary = `'${nestedContext.name}' ${summaryMsg}`;\n                        /** @type {?} */\n                        const chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: `called '${functionSymbol.name}' recursively`,\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        /** @type {?} */\n                        const value = targetFunction['value'];\n                        if (value && (depth != 0 || value.__symbolic != 'error')) {\n                            /** @type {?} */\n                            const parameters = targetFunction['parameters'];\n                            /** @type {?} */\n                            const defaults = targetFunction.defaults;\n                            args = args.map(arg => simplifyNested(context, arg))\n                                .map(arg => shouldIgnore(arg) ? undefined : arg);\n                            if (defaults && defaults.length > args.length) {\n                                args.push(...defaults.slice(args.length).map((value) => simplify(value)));\n                            }\n                            calling.set(functionSymbol, true);\n                            /** @type {?} */\n                            const functionScope = BindingScope.build();\n                            for (let i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            /** @type {?} */\n                            const oldScope = scope;\n                            /** @type {?} */\n                            let result;\n                            try {\n                                scope = functionScope.done();\n                                result = simplifyNested(functionSymbol, value);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                /** @type {?} */\n                let position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    /** @type {?} */\n                    const line = targetExpression.line;\n                    /** @type {?} */\n                    const character = targetExpression.character;\n                    /** @type {?} */\n                    const fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName, line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    /** @type {?} */\n                    const result = [];\n                    for (const item of (/** @type {?} */ (expression))) {\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            /** @type {?} */\n                            const spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (const spreadItem of spreadArray) {\n                                    result.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        /** @type {?} */\n                        const value = simplify(item);\n                        if (shouldIgnore(value)) {\n                            continue;\n                        }\n                        result.push(value);\n                    }\n                    return result;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        /** @type {?} */\n                        const staticSymbol = expression;\n                        /** @type {?} */\n                        const declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        /** @type {?} */\n                        let staticSymbol;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                /** @type {?} */\n                                let left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                /** @type {?} */\n                                let right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                /** @type {?} */\n                                let condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                /** @type {?} */\n                                let operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                /** @type {?} */\n                                let indexTarget = simplifyEagerly(expression['expression']);\n                                /** @type {?} */\n                                let index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                /** @type {?} */\n                                const member = expression['member'];\n                                /** @type {?} */\n                                let selectContext = context;\n                                /** @type {?} */\n                                let selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    /** @type {?} */\n                                    const members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    /** @type {?} */\n                                    const declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                /** @type {?} */\n                                const name = expression['name'];\n                                /** @type {?} */\n                                const localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    /** @type {?} */\n                                    const argExpressions = expression['arguments'] || [];\n                                    /** @type {?} */\n                                    let converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        /** @type {?} */\n                                        const args = argExpressions.map(arg => simplifyNested(context, arg))\n                                            .map(arg => shouldIgnore(arg) ? undefined : arg);\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        /** @type {?} */\n                                        const targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                /** @type {?} */\n                                let message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, (value, name) => {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                /** @type {?} */\n                                const provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        /** @type {?} */\n        let result;\n        try {\n            result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n        }\n        catch (e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getTypeMetadata(type) {\n        /** @type {?} */\n        const resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    }\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    reportError(error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    error({ message, summary, advise, position, context, value, symbol, chain }, reportingContext) {\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    }\n}\nif (false) {\n    /** @type {?} */\n    StaticReflector.prototype.annotationCache;\n    /** @type {?} */\n    StaticReflector.prototype.shallowAnnotationCache;\n    /** @type {?} */\n    StaticReflector.prototype.propertyCache;\n    /** @type {?} */\n    StaticReflector.prototype.parameterCache;\n    /** @type {?} */\n    StaticReflector.prototype.methodCache;\n    /** @type {?} */\n    StaticReflector.prototype.staticCache;\n    /** @type {?} */\n    StaticReflector.prototype.conversionMap;\n    /** @type {?} */\n    StaticReflector.prototype.resolvedExternalReferences;\n    /** @type {?} */\n    StaticReflector.prototype.injectionToken;\n    /** @type {?} */\n    StaticReflector.prototype.opaqueToken;\n    /** @type {?} */\n    StaticReflector.prototype.ROUTES;\n    /** @type {?} */\n    StaticReflector.prototype.ANALYZE_FOR_ENTRY_COMPONENTS;\n    /** @type {?} */\n    StaticReflector.prototype.annotationForParentClassWithSummaryKind;\n    /** @type {?} */\n    StaticReflector.prototype.summaryResolver;\n    /** @type {?} */\n    StaticReflector.prototype.symbolResolver;\n    /** @type {?} */\n    StaticReflector.prototype.errorRecorder;\n}\n/**\n * @record\n */\nfunction Position() { }\n/** @type {?} */\nPosition.prototype.fileName;\n/** @type {?} */\nPosition.prototype.line;\n/** @type {?} */\nPosition.prototype.column;\n/**\n * @record\n */\nfunction MetadataMessageChain() { }\n/** @type {?} */\nMetadataMessageChain.prototype.message;\n/** @type {?|undefined} */\nMetadataMessageChain.prototype.summary;\n/** @type {?|undefined} */\nMetadataMessageChain.prototype.position;\n/** @type {?|undefined} */\nMetadataMessageChain.prototype.context;\n/** @type {?|undefined} */\nMetadataMessageChain.prototype.symbol;\n/** @type {?|undefined} */\nMetadataMessageChain.prototype.next;\n/** @typedef {?} */\nvar MetadataError;\n/** @type {?} */\nconst METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    /** @type {?} */\n    const error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[METADATA_ERROR] = true;\n    if (advise)\n        error.advise = advise;\n    if (position)\n        error.position = position;\n    if (summary)\n        error.summary = summary;\n    if (context)\n        error.context = context;\n    if (chain)\n        error.chain = chain;\n    if (symbol)\n        error.symbol = symbol;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error) {\n    return !!(/** @type {?} */ (error))[METADATA_ERROR];\n}\n/** @type {?} */\nconst REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\n/** @type {?} */\nconst VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\n/** @type {?} */\nconst DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\n/** @type {?} */\nconst COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\n/** @type {?} */\nconst FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\n/** @type {?} */\nconst REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\n/** @type {?} */\nconst LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return `References to a non-exported class are not supported in decorators but ${context.className} was referenced.`;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return `Could not resolve type ${context.typeName}`;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return `Function calls are not supported in decorators but '${context.name}' was called`;\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return `Reference to a local (non-exported) symbols are not supported in decorators but '${context.name}' was referenced`;\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return `Function expressions are not supported in decorators`;\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return `Consider exporting '${context.className}'`;\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return `Consider exporting '${context.name}'`;\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return `Consider changing the function expression into an exported function`;\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error) {\n    if (error.summary) {\n        return error.summary;\n    }\n    switch (error.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error.context && error.context.className) {\n                return `references non-exported class ${error.context.className}`;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error.context && error.context.name) {\n                return `calls '${error.context.name}'`;\n            }\n            return `calls a function`;\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error.context && error.context.name) {\n                return `references local variable ${error.context.name}`;\n            }\n            return `references a local variable`;\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    /** @type {?} */\n    const result = {};\n    Object.keys(input).forEach((key) => {\n        /** @type {?} */\n        const value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @record\n */\nfunction BindingScopeBuilder() { }\n/** @type {?} */\nBindingScopeBuilder.prototype.define;\n/** @type {?} */\nBindingScopeBuilder.prototype.done;\n/**\n * @abstract\n */\nclass BindingScope {\n    /**\n     * @return {?}\n     */\n    static build() {\n        /** @type {?} */\n        const current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    }\n}\nBindingScope.missing = {};\nBindingScope.empty = { resolve: name => BindingScope.missing };\nif (false) {\n    /** @type {?} */\n    BindingScope.missing;\n    /** @type {?} */\n    BindingScope.empty;\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n}\nclass PopulatedScope extends BindingScope {\n    /**\n     * @param {?} bindings\n     */\n    constructor(bindings) {\n        super();\n        this.bindings = bindings;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    resolve(name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    }\n}\nif (false) {\n    /** @type {?} */\n    PopulatedScope.prototype.bindings;\n}\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    /** @type {?} */\n    const expanded = expandedMessage(chain.message, chain.context);\n    /** @type {?} */\n    const nesting = chain.symbol ? ` in '${chain.symbol.name}'` : '';\n    /** @type {?} */\n    const message = `${expanded}${nesting}`;\n    /** @type {?} */\n    const position = chain.position;\n    /** @type {?} */\n    const next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message, position, next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        /** @type {?} */\n        const position = e.position;\n        /** @type {?} */\n        const chain = {\n            message: `Error during template compile of '${context.name}'`,\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        /** @type {?} */\n        const advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n//# sourceMappingURL=static_reflector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { deserializeSummaries } from './summary_serializer';\nimport { stripGeneratedFileSuffix, summaryFileName } from './util';\n/**\n * @record\n */\nexport function AotSummaryResolverHost() { }\n/**\n * Loads an NgModule/Directive/Pipe summary file\n * @type {?}\n */\nAotSummaryResolverHost.prototype.loadSummary;\n/**\n * Returns whether a file is a source file or not.\n * @type {?}\n */\nAotSummaryResolverHost.prototype.isSourceFile;\n/**\n * Converts a file name into a representation that should be stored in a summary file.\n * This has to include changing the suffix as well.\n * E.g.\n * `some_file.ts` -> `some_file.d.ts`\n *\n * \\@param referringSrcFileName the soure file that refers to fileName\n * @type {?}\n */\nAotSummaryResolverHost.prototype.toSummaryFileName;\n/**\n * Converts a fileName that was processed by `toSummaryFileName` back into a real fileName\n * given the fileName of the library that is referrig to it.\n * @type {?}\n */\nAotSummaryResolverHost.prototype.fromSummaryFileName;\nexport class AotSummaryResolver {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    constructor(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    isLibraryFile(filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    }\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    toSummaryFileName(filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    }\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    fromSummaryFileName(fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    resolveSummary(staticSymbol) {\n        /** @type {?} */\n        const rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        /** @type {?} */\n        let summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getSymbolsOf(filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter((symbol) => symbol.filePath === filePath);\n        }\n        return null;\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    getImportAs(staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    }\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    getKnownModuleName(importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addSummary(summary) { this.summaryCache.set(summary.symbol, summary); }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    _loadSummaryFile(filePath) {\n        /** @type {?} */\n        let hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        /** @type {?} */\n        let json = null;\n        if (this.isLibraryFile(filePath)) {\n            /** @type {?} */\n            const summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(`Error loading summary file ${summaryFilePath}`);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            const { moduleName, summaries, importAs } = deserializeSummaries(this.staticSymbolCache, this, filePath, json);\n            summaries.forEach((summary) => this.summaryCache.set(summary.symbol, summary));\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach((importAs) => { this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    }\n}\nif (false) {\n    /** @type {?} */\n    AotSummaryResolver.prototype.summaryCache;\n    /** @type {?} */\n    AotSummaryResolver.prototype.loadedFilePaths;\n    /** @type {?} */\n    AotSummaryResolver.prototype.importAs;\n    /** @type {?} */\n    AotSummaryResolver.prototype.knownFileNameToModuleNames;\n    /** @type {?} */\n    AotSummaryResolver.prototype.host;\n    /** @type {?} */\n    AotSummaryResolver.prototype.staticSymbolCache;\n}\n//# sourceMappingURL=summary_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompilerConfig } from '../config';\nimport { ViewEncapsulation } from '../core';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { Lexer } from '../expression_parser/lexer';\nimport { Parser } from '../expression_parser/parser';\nimport { I18NHtmlParser } from '../i18n/i18n_html_parser';\nimport { InjectableCompiler } from '../injectable_compiler';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { NgModuleCompiler } from '../ng_module_compiler';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { StyleCompiler } from '../style_compiler';\nimport { TemplateParser } from '../template_parser/template_parser';\nimport { syntaxError } from '../util';\nimport { TypeCheckCompiler } from '../view_compiler/type_check_compiler';\nimport { ViewCompiler } from '../view_compiler/view_compiler';\nimport { AotCompiler } from './compiler';\nimport { StaticReflector } from './static_reflector';\nimport { StaticSymbolCache } from './static_symbol';\nimport { StaticSymbolResolver } from './static_symbol_resolver';\nimport { AotSummaryResolver } from './summary_resolver';\n/**\n * @param {?} host\n * @return {?}\n */\nexport function createAotUrlResolver(host) {\n    return {\n        resolve: (basePath, url) => {\n            /** @type {?} */\n            const filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(`Couldn't resolve resource ${url} from ${basePath}`);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nexport function createAotCompiler(compilerHost, options, errorCollector) {\n    /** @type {?} */\n    let translations = options.translations || '';\n    /** @type {?} */\n    const urlResolver = createAotUrlResolver(compilerHost);\n    /** @type {?} */\n    const symbolCache = new StaticSymbolCache();\n    /** @type {?} */\n    const summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    /** @type {?} */\n    const symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    /** @type {?} */\n    const staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    /** @type {?} */\n    let htmlParser;\n    if (!!options.enableIvy) {\n        // Ivy handles i18n at the compiler level so we must use a regular parser\n        htmlParser = /** @type {?} */ (new HtmlParser());\n    }\n    else {\n        htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    }\n    /** @type {?} */\n    const config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    /** @type {?} */\n    const normalizer = new DirectiveNormalizer({ get: (url) => compilerHost.loadResource(url) }, urlResolver, htmlParser, config);\n    /** @type {?} */\n    const expressionParser = new Parser(new Lexer());\n    /** @type {?} */\n    const elementSchemaRegistry = new DomElementSchemaRegistry();\n    /** @type {?} */\n    const tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    /** @type {?} */\n    const resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    /** @type {?} */\n    const viewCompiler = new ViewCompiler(staticReflector);\n    /** @type {?} */\n    const typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    /** @type {?} */\n    const compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector, !!options.enableIvy), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler, reflector: staticReflector };\n}\n//# sourceMappingURL=compiler_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nexport function Summary() { }\n/** @type {?} */\nSummary.prototype.symbol;\n/** @type {?} */\nSummary.prototype.metadata;\n/** @type {?|undefined} */\nSummary.prototype.type;\n/**\n * @abstract\n * @template T\n */\nexport class SummaryResolver {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.toSummaryFileName = function (fileName, referringSrcFileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.fromSummaryFileName = function (fileName, referringLibFileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getKnownModuleName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n}\nexport class JitSummaryResolver {\n    constructor() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    isLibraryFile() { return false; }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    toSummaryFileName(fileName) { return fileName; }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    fromSummaryFileName(fileName) { return fileName; }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    resolveSummary(reference) {\n        return this._summaries.get(reference) || null;\n    }\n    /**\n     * @return {?}\n     */\n    getSymbolsOf() { return []; }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    getImportAs(reference) { return reference; }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    getKnownModuleName(fileName) { return null; }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addSummary(summary) { this._summaries.set(summary.symbol, summary); }\n}\nif (false) {\n    /** @type {?} */\n    JitSummaryResolver.prototype._summaries;\n}\n//# sourceMappingURL=summary_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { debugOutputAstAsTypeScript } from './ts_emitter';\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nexport function interpretStatements(statements, reflector) {\n    /** @type {?} */\n    const ctx = new _ExecutionContext(null, null, null, new Map());\n    /** @type {?} */\n    const visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    /** @type {?} */\n    const result = {};\n    ctx.exports.forEach((exportName) => { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    /** @type {?} */\n    const childCtx = ctx.createChildWihtLocalVars();\n    for (let i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    /** @type {?} */\n    const result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nclass _ExecutionContext {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    constructor(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    createChildWihtLocalVars() {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    }\n}\nif (false) {\n    /** @type {?} */\n    _ExecutionContext.prototype.exports;\n    /** @type {?} */\n    _ExecutionContext.prototype.parent;\n    /** @type {?} */\n    _ExecutionContext.prototype.instance;\n    /** @type {?} */\n    _ExecutionContext.prototype.className;\n    /** @type {?} */\n    _ExecutionContext.prototype.vars;\n}\nclass ReturnValue {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReturnValue.prototype.value;\n}\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    /** @type {?} */\n    const propertyDescriptors = {};\n    _classStmt.getters.forEach((getter) => {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                /** @type {?} */\n                const instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        /** @type {?} */\n        const paramNames = method.params.map(param => param.name);\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function (...args) {\n                /** @type {?} */\n                const instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    /** @type {?} */\n    const ctorParamNames = _classStmt.constructorMethod.params.map(param => param.name);\n    /** @type {?} */\n    const ctor = function (...args) {\n        /** @type {?} */\n        const instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach((field) => { this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    /** @type {?} */\n    const superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nclass StatementInterpreter {\n    /**\n     * @param {?} reflector\n     */\n    constructor(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    debugAst(ast) { return debugOutputAstAsTypeScript(ast); }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        /** @type {?} */\n        const initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n        ctx.vars.set(stmt.name, initialValue);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, ctx) {\n        /** @type {?} */\n        const value = expr.value.visitExpression(this, ctx);\n        /** @type {?} */\n        let currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(`Not declared variable ${expr.name}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, ctx) {\n        throw new Error('Cannot interpret a WrappedNodeExpr.');\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTypeofExpr(ast, ctx) {\n        throw new Error('Cannot interpret a TypeofExpr');\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadVarExpr(ast, ctx) {\n        /** @type {?} */\n        let varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case o.BuiltinVar.This:\n                    return ctx.instance;\n                case o.BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR;\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR;\n                    break;\n                default:\n                    throw new Error(`Unknown builtin variable ${ast.builtin}`);\n            }\n        }\n        /** @type {?} */\n        let currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(`Not declared variable ${varName}`);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, ctx) {\n        /** @type {?} */\n        const receiver = expr.receiver.visitExpression(this, ctx);\n        /** @type {?} */\n        const index = expr.index.visitExpression(this, ctx);\n        /** @type {?} */\n        const value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWritePropExpr(expr, ctx) {\n        /** @type {?} */\n        const receiver = expr.receiver.visitExpression(this, ctx);\n        /** @type {?} */\n        const value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeMethodExpr(expr, ctx) {\n        /** @type {?} */\n        const receiver = expr.receiver.visitExpression(this, ctx);\n        /** @type {?} */\n        const args = this.visitAllExpressions(expr.args, ctx);\n        /** @type {?} */\n        let result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case o.BuiltinMethod.ConcatArray:\n                    result = receiver.concat(...args);\n                    break;\n                case o.BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case o.BuiltinMethod.Bind:\n                    result = receiver.bind(...args);\n                    break;\n                default:\n                    throw new Error(`Unknown builtin method ${expr.builtin}`);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(stmt, ctx) {\n        /** @type {?} */\n        const args = this.visitAllExpressions(stmt.args, ctx);\n        /** @type {?} */\n        const fnExpr = stmt.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            /** @type {?} */\n            const fn = stmt.fn.visitExpression(this, ctx);\n            return fn.apply(null, args);\n        }\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReturnStmt(stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        /** @type {?} */\n        const clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitIfStmt(stmt, ctx) {\n        /** @type {?} */\n        const condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            /** @type {?} */\n            const childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR, e);\n            childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitThrowStmt(stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    visitCommentStmt(stmt, context) { return null; }\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    visitJSDocCommentStmt(stmt, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, ctx) {\n        /** @type {?} */\n        const args = this.visitAllExpressions(ast.args, ctx);\n        /** @type {?} */\n        const clazz = ast.classExpr.visitExpression(this, ctx);\n        return new clazz(...args);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralExpr(ast, ctx) { return ast.value; }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitConditionalExpr(ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitNotExpr(ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCastExpr(ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) {\n        /** @type {?} */\n        const paramNames = ast.params.map((param) => param.name);\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        /** @type {?} */\n        const paramNames = stmt.params.map((param) => param.name);\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, ctx) {\n        /** @type {?} */\n        const lhs = () => ast.lhs.visitExpression(this, ctx);\n        /** @type {?} */\n        const rhs = () => ast.rhs.visitExpression(this, ctx);\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                return lhs() == rhs();\n            case o.BinaryOperator.Identical:\n                return lhs() === rhs();\n            case o.BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case o.BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case o.BinaryOperator.And:\n                return lhs() && rhs();\n            case o.BinaryOperator.Or:\n                return lhs() || rhs();\n            case o.BinaryOperator.Plus:\n                return lhs() + rhs();\n            case o.BinaryOperator.Minus:\n                return lhs() - rhs();\n            case o.BinaryOperator.Divide:\n                return lhs() / rhs();\n            case o.BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case o.BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case o.BinaryOperator.Lower:\n                return lhs() < rhs();\n            case o.BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case o.BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case o.BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(`Unknown operator ${ast.operator}`);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadPropExpr(ast, ctx) {\n        /** @type {?} */\n        let result;\n        /** @type {?} */\n        const receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, ctx) {\n        /** @type {?} */\n        const receiver = ast.receiver.visitExpression(this, ctx);\n        /** @type {?} */\n        const prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, ctx) {\n        /** @type {?} */\n        const result = {};\n        ast.entries.forEach(entry => result[entry.key] = entry.value.visitExpression(this, ctx));\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommaExpr(ast, context) {\n        /** @type {?} */\n        const values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    }\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAllExpressions(expressions, ctx) {\n        return expressions.map((expr) => expr.visitExpression(this, ctx));\n    }\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAllStatements(statements, ctx) {\n        for (let i = 0; i < statements.length; i++) {\n            /** @type {?} */\n            const stmt = statements[i];\n            /** @type {?} */\n            const val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StatementInterpreter.prototype.reflector;\n}\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return (...args) => _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n}\n/** @type {?} */\nconst CATCH_ERROR_VAR = 'error';\n/** @type {?} */\nconst CATCH_STACK_VAR = 'stack';\n//# sourceMappingURL=output_interpreter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR } from './abstract_emitter';\nimport * as o from './output_ast';\n/**\n * @abstract\n */\nexport class AbstractJsEmitterVisitor extends AbstractEmitterVisitor {\n    constructor() { super(false); }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, `${stmt.name}.prototype = Object.create(`);\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, `.prototype);`);\n        }\n        stmt.getters.forEach((getter) => this._visitClassGetter(stmt, getter, ctx));\n        stmt.methods.forEach((method) => this._visitClassMethod(stmt, method, ctx));\n        ctx.popClass();\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassConstructor(stmt, ctx) {\n        ctx.print(stmt, `function ${stmt.name}(`);\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, `var self = this;`);\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassGetter(stmt, getter, ctx) {\n        ctx.println(stmt, `Object.defineProperty(${stmt.name}.prototype, '${getter.name}', { get: function() {`);\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, `var self = this;`);\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, `}});`);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassMethod(stmt, method, ctx) {\n        ctx.print(stmt, `${stmt.name}.prototype.${method.name} = function(`);\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, `var self = this;`);\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, `};`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, ctx) {\n        throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadVarExpr(ast, ctx) {\n        if (ast.builtin === o.BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === o.BuiltinVar.Super) {\n            throw new Error(`'super' needs to be handled at a parent ast node, not at the variable level!`);\n        }\n        else {\n            super.visitReadVarExpr(ast, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        ctx.print(stmt, `var ${stmt.name}`);\n        if (stmt.value) {\n            ctx.print(stmt, ' = ');\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, `;`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCastExpr(ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(expr, ctx) {\n        /** @type {?} */\n        const fnExpr = expr.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, `.call(this`);\n            if (expr.args.length > 0) {\n                ctx.print(expr, `, `);\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, `)`);\n        }\n        else {\n            super.visitInvokeFunctionExpr(expr, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) {\n        ctx.print(ast, `function${ast.name ? ' ' + ast.name : ''}(`);\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, `) {`);\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        ctx.print(stmt, `function ${stmt.name}(`);\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) {\n        ctx.println(stmt, `try {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n        ctx.incIndent();\n        /** @type {?} */\n        const catchStmts = [/** @type {?} */ (CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitParams(params, ctx) {\n        this.visitAllObjects(param => ctx.print(null, param.name), params, ctx, ',');\n    }\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    getBuiltinMethodName(method) {\n        /** @type {?} */\n        let name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(`Unknown builtin method: ${method}`);\n        }\n        return name;\n    }\n}\n//# sourceMappingURL=abstract_js_emitter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport { EmitterVisitorContext } from './abstract_emitter';\nimport { AbstractJsEmitterVisitor } from './abstract_js_emitter';\nimport * as o from './output_ast';\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    /** @type {?} */\n    let fnBody = `${ctx.toSource()}\\n//# sourceURL=${sourceUrl}`;\n    /** @type {?} */\n    const fnArgNames = [];\n    /** @type {?} */\n    const fnArgValues = [];\n    for (const argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        /** @type {?} */\n        const emptyFn = new Function(...fnArgNames.concat('return null;')).toString();\n        /** @type {?} */\n        const headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += `\\n${ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment()}`;\n    }\n    return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nexport function jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    /** @type {?} */\n    const converter = new JitEmitterVisitor(reflector);\n    /** @type {?} */\n    const ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nexport class JitEmitterVisitor extends AbstractJsEmitterVisitor {\n    /**\n     * @param {?} reflector\n     */\n    constructor(reflector) {\n        super();\n        this.reflector = reflector;\n        this._evalArgNames = [];\n        this._evalArgValues = [];\n        this._evalExportedVars = [];\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    createReturnStmt(ctx) {\n        /** @type {?} */\n        const stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(resultVar => new o.LiteralMapEntry(resultVar, o.variable(resultVar), false))));\n        stmt.visitStatement(this, ctx);\n    }\n    /**\n     * @return {?}\n     */\n    getArgs() {\n        /** @type {?} */\n        const result = {};\n        for (let i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) {\n        this._emitReferenceToExternal(ast, this.reflector.resolveExternalReference(ast.value), ctx);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWrappedNodeExpr(ast, ctx) {\n        this._emitReferenceToExternal(ast, ast.node, ctx);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return super.visitDeclareVarStmt(stmt, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return super.visitDeclareFunctionStmt(stmt, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return super.visitDeclareClassStmt(stmt, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} value\n     * @param {?} ctx\n     * @return {?}\n     */\n    _emitReferenceToExternal(ast, value, ctx) {\n        /** @type {?} */\n        let id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            /** @type {?} */\n            const name = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(`jit_${name}_${id}`);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n    }\n}\nif (false) {\n    /** @type {?} */\n    JitEmitterVisitor.prototype._evalArgNames;\n    /** @type {?} */\n    JitEmitterVisitor.prototype._evalArgValues;\n    /** @type {?} */\n    JitEmitterVisitor.prototype._evalExportedVars;\n    /** @type {?} */\n    JitEmitterVisitor.prototype.reflector;\n}\n//# sourceMappingURL=output_jit.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl } from '../compile_metadata';\nimport { ConstantPool } from '../constant_pool';\nimport * as ir from '../output/output_ast';\nimport { interpretStatements } from '../output/output_interpreter';\nimport { jitStatements } from '../output/output_jit';\nimport { SyncAsync, stringify } from '../util';\n/**\n * @record\n */\nexport function ModuleWithComponentFactories() { }\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class JitCompiler {\n    /**\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _reflector\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     * @param {?} getExtraNgModuleProviders\n     */\n    constructor(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    }\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    getComponentFactory(component) {\n        /** @type {?} */\n        const summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    }\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    loadAotSummaries(summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    _addAotSummaries(fn) {\n        if (this._addedAotSummaries.has(fn)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn);\n        /** @type {?} */\n        const summaries = fn();\n        for (let i = 0; i < summaries.length; i++) {\n            /** @type {?} */\n            const entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                /** @type {?} */\n                const summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    }\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    hasAotSummary(ref) { return !!this._summaryResolver.resolveSummary(ref); }\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    _filterJitIdentifiers(ids) {\n        return ids.map(mod => mod.reference).filter((ref) => !this.hasAotSummary(ref));\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    _compileModuleAndComponents(moduleType, isSync) {\n        return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n            this._compileComponents(moduleType, null);\n            return this._compileModule(moduleType);\n        });\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    _compileModuleAndAllComponents(moduleType, isSync) {\n        return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n            /** @type {?} */\n            const componentFactories = [];\n            this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    }\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    _loadModules(mainModule, isSync) {\n        /** @type {?} */\n        const loading = [];\n        /** @type {?} */\n        const mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach((nestedNgModule) => {\n            /** @type {?} */\n            const moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach((ref) => {\n                /** @type {?} */\n                const promise = this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach((ref) => this._metadataResolver.getOrLoadPipeMetadata(ref));\n        });\n        return SyncAsync.all(loading);\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    _compileModule(moduleType) {\n        /** @type {?} */\n        let ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            /** @type {?} */\n            const moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            /** @type {?} */\n            const extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            /** @type {?} */\n            const outputCtx = createOutputContext();\n            /** @type {?} */\n            const compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    }\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    _compileComponents(mainModule, allComponentFactories) {\n        /** @type {?} */\n        const ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        /** @type {?} */\n        const moduleByJitDirective = new Map();\n        /** @type {?} */\n        const templates = new Set();\n        /** @type {?} */\n        const transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach((localMod) => {\n            /** @type {?} */\n            const localModuleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(localMod)));\n            this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                /** @type {?} */\n                const dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        /** @type {?} */\n                        const template = this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach((localMod) => {\n            /** @type {?} */\n            const localModuleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(localMod)));\n            this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n                /** @type {?} */\n                const dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach((entryComponentType) => {\n                        /** @type {?} */\n                        const moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach((entryComponentType) => {\n                if (!this.hasAotSummary(entryComponentType.componentType)) {\n                    /** @type {?} */\n                    const moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach((template) => this._compileTemplate(template));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        /** @type {?} */\n        const compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    }\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    _createCompiledHostTemplate(compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(`Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n        }\n        /** @type {?} */\n        let compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            /** @type {?} */\n            const compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            /** @type {?} */\n            const hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    }\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    _createCompiledTemplate(compMeta, ngModule) {\n        /** @type {?} */\n        let compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    }\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    _compileTemplate(template) {\n        if (template.isCompiled) {\n            return;\n        }\n        /** @type {?} */\n        const compMeta = template.compMeta;\n        /** @type {?} */\n        const externalStylesheetsByModuleUrl = new Map();\n        /** @type {?} */\n        const outputContext = createOutputContext();\n        /** @type {?} */\n        const componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n            /** @type {?} */\n            const compiledStylesheet = this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        /** @type {?} */\n        const pipes = template.ngModule.transitiveModule.pipes.map(pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n        const { template: parsedTemplate, pipes: usedPipes } = this._parseTemplate(compMeta, template.ngModule, template.directives);\n        /** @type {?} */\n        const compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar), usedPipes);\n        /** @type {?} */\n        const evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        /** @type {?} */\n        const viewClass = evalResult[compileResult.viewClassVar];\n        /** @type {?} */\n        const rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    }\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    _parseTemplate(compMeta, ngModule, directiveIdentifiers) {\n        /** @type {?} */\n        const preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        /** @type {?} */\n        const directives = directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n        /** @type {?} */\n        const pipes = ngModule.transitiveModule.pipes.map(pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    }\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    _resolveStylesCompileResult(result, externalStylesheetsByModuleUrl) {\n        result.dependencies.forEach((dep, i) => {\n            /** @type {?} */\n            const nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            /** @type {?} */\n            const nestedStylesArr = this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    }\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    _resolveAndEvalStylesCompileResult(result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    }\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    _interpretOrJit(sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    JitCompiler.prototype._compiledTemplateCache;\n    /** @type {?} */\n    JitCompiler.prototype._compiledHostTemplateCache;\n    /** @type {?} */\n    JitCompiler.prototype._compiledDirectiveWrapperCache;\n    /** @type {?} */\n    JitCompiler.prototype._compiledNgModuleCache;\n    /** @type {?} */\n    JitCompiler.prototype._sharedStylesheetCount;\n    /** @type {?} */\n    JitCompiler.prototype._addedAotSummaries;\n    /** @type {?} */\n    JitCompiler.prototype._metadataResolver;\n    /** @type {?} */\n    JitCompiler.prototype._templateParser;\n    /** @type {?} */\n    JitCompiler.prototype._styleCompiler;\n    /** @type {?} */\n    JitCompiler.prototype._viewCompiler;\n    /** @type {?} */\n    JitCompiler.prototype._ngModuleCompiler;\n    /** @type {?} */\n    JitCompiler.prototype._summaryResolver;\n    /** @type {?} */\n    JitCompiler.prototype._reflector;\n    /** @type {?} */\n    JitCompiler.prototype._compilerConfig;\n    /** @type {?} */\n    JitCompiler.prototype._console;\n    /** @type {?} */\n    JitCompiler.prototype.getExtraNgModuleProviders;\n}\nclass CompiledTemplate {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    constructor(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    compiled(viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (let prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    CompiledTemplate.prototype._viewClass;\n    /** @type {?} */\n    CompiledTemplate.prototype.isCompiled;\n    /** @type {?} */\n    CompiledTemplate.prototype.isHost;\n    /** @type {?} */\n    CompiledTemplate.prototype.compType;\n    /** @type {?} */\n    CompiledTemplate.prototype.compMeta;\n    /** @type {?} */\n    CompiledTemplate.prototype.ngModule;\n    /** @type {?} */\n    CompiledTemplate.prototype.directives;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(`Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    /** @type {?} */\n    const importExpr = (symbol) => ir.importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    return { statements: [], genFilePath: '', importExpr, constantPool: new ConstantPool() };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nexport class CompileReflector {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.parameters = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.annotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.shallowAnnotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.tryAnnotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.propMetadata = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    CompileReflector.prototype.hasLifecycleHook = function (type, lcProperty) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.guards = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    CompileReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { };\n    /**\n     * @abstract\n     * @param {?} ref\n     * @return {?}\n     */\n    CompileReflector.prototype.resolveExternalReference = function (ref) { };\n}\n//# sourceMappingURL=compile_reflector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nexport function createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nexport function createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\nexport function UrlResolverCtor() { }\n/** @type {?} */\nexport const UrlResolver = class UrlResolverImpl {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    constructor(_packagePrefix = null) {\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    resolve(baseUrl, url) {\n        /** @type {?} */\n        let resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        /** @type {?} */\n        const resolvedParts = _split(resolvedUrl);\n        /** @type {?} */\n        let prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            /** @type {?} */\n            let path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return `${prefix}/${path}`;\n        }\n        return resolvedUrl;\n    }\n};\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nexport function getUrlScheme(url) {\n    /** @type {?} */\n    const match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    /** @type {?} */\n    const out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/** *\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n  @type {?} */\nconst _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nconst _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = 'Scheme';\n_ComponentIndex[_ComponentIndex.UserInfo] = 'UserInfo';\n_ComponentIndex[_ComponentIndex.Domain] = 'Domain';\n_ComponentIndex[_ComponentIndex.Port] = 'Port';\n_ComponentIndex[_ComponentIndex.Path] = 'Path';\n_ComponentIndex[_ComponentIndex.QueryData] = 'QueryData';\n_ComponentIndex[_ComponentIndex.Fragment] = 'Fragment';\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    /** @type {?} */\n    const leadingSlash = path[0] == '/' ? '/' : '';\n    /** @type {?} */\n    const trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    /** @type {?} */\n    const segments = path.split('/');\n    /** @type {?} */\n    const out = [];\n    /** @type {?} */\n    let up = 0;\n    for (let pos = 0; pos < segments.length; pos++) {\n        /** @type {?} */\n        const segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    /** @type {?} */\n    let path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    /** @type {?} */\n    const parts = _split(encodeURI(url));\n    /** @type {?} */\n    const baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (let i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    /** @type {?} */\n    let path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    /** @type {?} */\n    const index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n//# sourceMappingURL=url_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nexport class ResourceLoader {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get(url) { return ''; }\n}\n//# sourceMappingURL=resource_loader.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { analyzeAndValidateNgModules } from '../aot/compiler';\nimport { createAotUrlResolver } from '../aot/compiler_factory';\nimport { StaticReflector } from '../aot/static_reflector';\nimport { StaticSymbolCache } from '../aot/static_symbol';\nimport { StaticSymbolResolver } from '../aot/static_symbol_resolver';\nimport { AotSummaryResolver } from '../aot/summary_resolver';\nimport { CompilerConfig } from '../config';\nimport { ViewEncapsulation } from '../core';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { MessageBundle } from './message_bundle';\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nexport function ExtractorHost() { }\n/**\n * Converts a path that refers to a resource into an absolute filePath\n * that can be lateron used for loading the resource via `loadResource.\n * @type {?}\n */\nExtractorHost.prototype.resourceNameToFileName;\n/**\n * Loads a resource (e.g. html / css)\n * @type {?}\n */\nExtractorHost.prototype.loadResource;\nexport class Extractor {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    constructor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    extract(rootFiles) {\n        const { files, ngModules } = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver);\n        return Promise\n            .all(ngModules.map(ngModule => this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false)))\n            .then(() => {\n            /** @type {?} */\n            const errors = [];\n            files.forEach(file => {\n                /** @type {?} */\n                const compMetas = [];\n                file.directives.forEach(directiveType => {\n                    /** @type {?} */\n                    const dirMeta = this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(compMeta => {\n                    /** @type {?} */\n                    const html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    /** @type {?} */\n                    const templateUrl = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).templateUrl));\n                    /** @type {?} */\n                    const interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push(.../** @type {?} */ ((this.messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(e => e.toString()).join('\\n'));\n            }\n            return this.messageBundle;\n        });\n    }\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    static create(host, locale) {\n        /** @type {?} */\n        const htmlParser = new HtmlParser();\n        /** @type {?} */\n        const urlResolver = createAotUrlResolver(host);\n        /** @type {?} */\n        const symbolCache = new StaticSymbolCache();\n        /** @type {?} */\n        const summaryResolver = new AotSummaryResolver(host, symbolCache);\n        /** @type {?} */\n        const staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        /** @type {?} */\n        const staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        /** @type {?} */\n        const config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        /** @type {?} */\n        const normalizer = new DirectiveNormalizer({ get: (url) => host.loadResource(url) }, urlResolver, htmlParser, config);\n        /** @type {?} */\n        const elementSchemaRegistry = new DomElementSchemaRegistry();\n        /** @type {?} */\n        const resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        /** @type {?} */\n        const messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        /** @type {?} */\n        const extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor, staticReflector };\n    }\n}\nif (false) {\n    /** @type {?} */\n    Extractor.prototype.host;\n    /** @type {?} */\n    Extractor.prototype.staticSymbolResolver;\n    /** @type {?} */\n    Extractor.prototype.messageBundle;\n    /** @type {?} */\n    Extractor.prototype.metadataResolver;\n}\n//# sourceMappingURL=extractor.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { Extractor } from './extractor';\nexport { I18NHtmlParser } from './i18n_html_parser';\nexport { MessageBundle } from './message_bundle';\nexport { Serializer } from './serializers/serializer';\nexport { Xliff } from './serializers/xliff';\nexport { Xliff2 } from './serializers/xliff2';\nexport { Xmb } from './serializers/xmb';\nexport { Xtb } from './serializers/xtb';\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { compileFactoryFunction } from './render3/r3_factory';\nimport { mapToMapExpression } from './render3/util';\n/**\n * @record\n */\nexport function InjectableDef() { }\n/** @type {?} */\nInjectableDef.prototype.expression;\n/** @type {?} */\nInjectableDef.prototype.type;\n/**\n * @record\n */\nexport function R3InjectableMetadata() { }\n/** @type {?} */\nR3InjectableMetadata.prototype.name;\n/** @type {?} */\nR3InjectableMetadata.prototype.type;\n/** @type {?} */\nR3InjectableMetadata.prototype.providedIn;\n/** @type {?|undefined} */\nR3InjectableMetadata.prototype.useClass;\n/** @type {?|undefined} */\nR3InjectableMetadata.prototype.useFactory;\n/** @type {?|undefined} */\nR3InjectableMetadata.prototype.useExisting;\n/** @type {?|undefined} */\nR3InjectableMetadata.prototype.useValue;\n/** @type {?|undefined} */\nR3InjectableMetadata.prototype.deps;\n/**\n * @param {?} meta\n * @return {?}\n */\nexport function compileInjectable(meta) {\n    /** @type {?} */\n    let factory = o.NULL_EXPR;\n    /**\n     * @param {?} ret\n     * @return {?}\n     */\n    function makeFn(ret) {\n        return o.fn([], [new o.ReturnStatement(ret)], undefined, undefined, `${meta.name}_Factory`);\n    }\n    if (meta.useClass !== undefined || meta.useFactory !== undefined) {\n        // First, handle useClass and useFactory together, since both involve a similar call to\n        // `compileFactoryFunction`. Either dependencies are explicitly specified, in which case\n        // a factory function call is generated, or they're not specified and the calls are special-\n        // cased.\n        if (meta.deps !== undefined) {\n            /** @type {?} */\n            const fnOrClass = meta.useClass || /** @type {?} */ ((meta.useFactory));\n            /** @type {?} */\n            const useNew = meta.useClass !== undefined;\n            factory = compileFactoryFunction({\n                name: meta.name,\n                fnOrClass,\n                useNew,\n                injectFn: Identifiers.inject,\n                deps: meta.deps,\n            });\n        }\n        else if (meta.useClass !== undefined) {\n            // Special case for useClass where the factory from the class's ngInjectableDef is used.\n            if (meta.useClass.isEquivalent(meta.type)) {\n                // For the injectable compiler, useClass represents a foreign type that should be\n                // instantiated to satisfy construction of the given type. It's not valid to specify\n                // useClass === type, since the useClass type is expected to already be compiled.\n                throw new Error(`useClass is the same as the type, but no deps specified, which is invalid.`);\n            }\n            factory =\n                makeFn(new o.ReadPropExpr(new o.ReadPropExpr(meta.useClass, 'ngInjectableDef'), 'factory')\n                    .callFn([]));\n        }\n        else if (meta.useFactory !== undefined) {\n            // Special case for useFactory where no arguments are passed.\n            factory = meta.useFactory.callFn([]);\n        }\n        else {\n            // Can't happen - outer conditional guards against both useClass and useFactory being\n            // undefined.\n            throw new Error('Reached unreachable block in injectable compiler.');\n        }\n    }\n    else if (meta.useValue !== undefined) {\n        // Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for\n        // client code because meta.useValue is an Expression which will be defined even if the actual\n        // value is undefined.\n        factory = makeFn(meta.useValue);\n    }\n    else if (meta.useExisting !== undefined) {\n        // useExisting is an `inject` call on the existing token.\n        factory = makeFn(o.importExpr(Identifiers.inject).callFn([meta.useExisting]));\n    }\n    else {\n        // A strict type is compiled according to useClass semantics, except the dependencies are\n        // required.\n        if (meta.deps === undefined) {\n            throw new Error(`Type compilation of an injectable requires dependencies.`);\n        }\n        factory = compileFactoryFunction({\n            name: meta.name,\n            fnOrClass: meta.type,\n            useNew: true,\n            injectFn: Identifiers.inject,\n            deps: meta.deps,\n        });\n    }\n    /** @type {?} */\n    const token = meta.type;\n    /** @type {?} */\n    const providedIn = meta.providedIn;\n    /** @type {?} */\n    const expression = o.importExpr(Identifiers.defineInjectable).callFn([mapToMapExpression({ token, factory, providedIn })]);\n    /** @type {?} */\n    const type = new o.ExpressionType(o.importExpr(Identifiers.InjectableDef, [new o.ExpressionType(meta.type)]));\n    return {\n        expression, type,\n    };\n}\n//# sourceMappingURL=injectable_compiler_2.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from '../output/output_ast';\nimport { jitStatements } from '../output/output_jit';\n/**\n * Implementation of `CompileReflector` which resolves references to \\@angular/core\n * symbols at runtime, according to a consumer-provided mapping.\n *\n * Only supports `resolveExternalReference`, all other methods throw.\n */\nclass R3JitReflector {\n    /**\n     * @param {?} context\n     */\n    constructor(context) {\n        this.context = context;\n    }\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    resolveExternalReference(ref) {\n        // This reflector only handles @angular/core imports.\n        if (ref.moduleName !== '@angular/core') {\n            throw new Error(`Cannot resolve external reference to ${ref.moduleName}, only references to @angular/core are supported.`);\n        }\n        if (!this.context.hasOwnProperty(/** @type {?} */ ((ref.name)))) {\n            throw new Error(`No value provided for @angular/core symbol '${(/** @type {?} */ ((ref.name)))}'.`);\n        }\n        return this.context[/** @type {?} */ ((ref.name))];\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    parameters(typeOrFunc) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    shallowAnnotations(typeOrFunc) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    tryAnnotations(typeOrFunc) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    guards(typeOrFunc) { throw new Error('Not implemented.'); }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    componentModuleUrl(type, cmpMetadata) { throw new Error('Not implemented.'); }\n}\nif (false) {\n    /** @type {?} */\n    R3JitReflector.prototype.context;\n}\n/**\n * JIT compiles an expression and returns the result of executing that expression.\n *\n * @param {?} def the definition which will be compiled and executed to get the value to patch\n * @param {?} context an object map of \\@angular/core symbol names to symbols which will be available in\n * the context of the compiled expression\n * @param {?} sourceUrl a URL to use for the source map of the compiled expression\n * @param {?=} constantPool an optional `ConstantPool` which contains constants used in the expression\n * @return {?}\n */\nexport function jitExpression(def, context, sourceUrl, constantPool) {\n    /** @type {?} */\n    const statements = [\n        ...(constantPool !== undefined ? constantPool.statements : []),\n        new o.DeclareVarStmt('$def', def, undefined, [o.StmtModifier.Exported]),\n    ];\n    /** @type {?} */\n    const res = jitStatements(sourceUrl, statements, new R3JitReflector(context), false);\n    return res['$def'];\n}\n//# sourceMappingURL=r3_jit.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as core from './core';\nexport { core };\nexport { VERSION } from './version';\nexport { templateVisitAll, TextAst, BoundTextAst, AttrAst, BoundElementPropertyAst, BoundEventAst, ReferenceAst, VariableAst, ElementAst, EmbeddedTemplateAst, BoundDirectivePropertyAst, DirectiveAst, ProviderAst, ProviderAstType, NgContentAst, NullTemplateVisitor, RecursiveTemplateAstVisitor } from './template_parser/template_ast';\nexport { CompilerConfig, preserveWhitespacesDefault } from './config';\nexport { sanitizeIdentifier, identifierName, identifierModuleUrl, viewClassName, rendererTypeName, hostViewClassName, componentFactoryName, tokenName, tokenReference, flatten, templateSourceUrl, sharedStylesheetJitUrl, ngModuleJitUrl, templateJitUrl, CompileSummaryKind, CompileStylesheetMetadata, CompileTemplateMetadata, CompileDirectiveMetadata, CompilePipeMetadata, CompileShallowModuleMetadata, CompileNgModuleMetadata, TransitiveCompileNgModuleMetadata, ProviderMeta } from './compile_metadata';\nexport { createAotUrlResolver, createAotCompiler } from './aot/compiler_factory';\nexport { analyzeNgModules, analyzeAndValidateNgModules, analyzeFile, analyzeFileForInjectables, mergeAnalyzedFiles, AotCompiler } from './aot/compiler';\nexport { toTypeScript, GeneratedFile } from './aot/generated_file';\nexport { formattedError, isFormattedError } from './aot/formatted_error';\nexport { StaticReflector } from './aot/static_reflector';\nexport { StaticSymbol, StaticSymbolCache } from './aot/static_symbol';\nexport { unescapeIdentifier, unwrapResolvedMetadata, ResolvedStaticSymbol, StaticSymbolResolver } from './aot/static_symbol_resolver';\nexport { AotSummaryResolver } from './aot/summary_resolver';\nexport { isLoweredSymbol, createLoweredSymbol } from './aot/util';\nexport { AstPath } from './ast_path';\nexport { SummaryResolver, JitSummaryResolver } from './summary_resolver';\nexport { Identifiers } from './identifiers';\nexport { JitCompiler } from './jit/compiler';\nexport { CompileReflector } from './compile_reflector';\nexport { createUrlResolverWithoutPackagePrefix, createOfflineCompileUrlResolver, getUrlScheme, UrlResolver } from './url_resolver';\nexport { ResourceLoader } from './resource_loader';\nexport { ConstantPool } from './constant_pool';\nexport { DirectiveResolver } from './directive_resolver';\nexport { PipeResolver } from './pipe_resolver';\nexport { NgModuleResolver } from './ng_module_resolver';\nexport { DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig } from './ml_parser/interpolation_config';\nexport { ElementSchemaRegistry } from './schema/element_schema_registry';\nexport { Extractor, I18NHtmlParser, MessageBundle, Serializer, Xliff, Xliff2, Xmb, Xtb } from './i18n/index';\nexport { DirectiveNormalizer } from './directive_normalizer';\nexport { visitAstChildren, ParserError, ParseSpan, AST, Quote, EmptyExpr, ImplicitReceiver, Chain, Conditional, PropertyRead, PropertyWrite, SafePropertyRead, KeyedRead, KeyedWrite, BindingPipe, LiteralPrimitive, LiteralArray, LiteralMap, Interpolation, Binary, PrefixNot, NonNullAssert, MethodCall, SafeMethodCall, FunctionCall, ASTWithSource, TemplateBinding, NullAstVisitor, RecursiveAstVisitor, AstTransformer, AstMemoryEfficientTransformer, ParsedProperty, ParsedPropertyType, ParsedEvent, ParsedVariable, BoundElementProperty } from './expression_parser/ast';\nexport { isIdentifier, isQuote, TokenType, Lexer, Token, EOF } from './expression_parser/lexer';\nexport { SplitInterpolation, TemplateBindingParseResult, Parser, _ParseAST } from './expression_parser/parser';\nexport { ERROR_COMPONENT_TYPE, CompileMetadataResolver } from './metadata_resolver';\nexport { visitAll, findNode, Text, Expansion, ExpansionCase, Attribute, Element, Comment, RecursiveVisitor } from './ml_parser/ast';\nexport { ParseTreeResult, TreeError, HtmlParser } from './ml_parser/html_parser';\nexport { getHtmlTagDefinition, HtmlTagDefinition } from './ml_parser/html_tags';\nexport { splitNsName, isNgContainer, isNgContent, isNgTemplate, getNsPrefix, mergeNsAndName, TagContentType, NAMED_ENTITIES, NGSP_UNICODE } from './ml_parser/tags';\nexport { NgModuleCompiler } from './ng_module_compiler';\nexport { ArrayType, AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinType, BuiltinTypeName, BuiltinVar, CastExpr, ClassField, ClassMethod, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, Expression, ExpressionStatement, ExpressionType, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, JSDocCommentStmt, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, MapType, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, ThrowStmt, TryCatchStmt, Type, WrappedNodeExpr, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement, TypeofExpr, collectExternalReferences } from './output/output_ast';\nexport { EmitterVisitorContext } from './output/abstract_emitter';\nexport { debugOutputAstAsTypeScript, TypeScriptEmitter } from './output/ts_emitter';\nexport { typeSourceSpan, ParseLocation, ParseSourceFile, ParseSourceSpan, ParseErrorLevel, ParseError } from './parse_util';\nexport { DomElementSchemaRegistry } from './schema/dom_element_schema_registry';\nexport { CssSelector, SelectorMatcher, SelectorListContext, SelectorContext } from './selector';\nexport { StylesCompileDependency, CompiledStylesheet, StyleCompiler } from './style_compiler';\nexport { splitClasses, createElementCssSelector, removeSummaryDuplicates, TemplateParseError, TemplateParseResult, TemplateParser } from './template_parser/template_parser';\nexport { ViewCompiler } from './view_compiler/view_compiler';\nexport { getParseErrors, isSyntaxError, syntaxError, Version } from './util';\nexport { compileInjectable } from './injectable_compiler_2';\nexport { jitExpression } from './render3/r3_jit';\nexport { R3ResolvedDependencyType } from './render3/r3_factory';\nexport { compileInjector, compileNgModule } from './render3/r3_module_compiler';\nexport { compilePipeFromMetadata } from './render3/r3_pipe_compiler';\nexport { makeBindingParser, parseTemplate } from './render3/view/template';\nexport { compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings } from './render3/view/compiler';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport { core, CompilerConfig, preserveWhitespacesDefault, isLoweredSymbol, createLoweredSymbol, Identifiers, JitCompiler, ConstantPool, DirectiveResolver, PipeResolver, NgModuleResolver, DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig, NgModuleCompiler, ArrayType, AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinType, BuiltinTypeName, BuiltinVar, CastExpr, ClassField, ClassMethod, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, Expression, ExpressionStatement, ExpressionType, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, JSDocCommentStmt, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, MapType, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, ThrowStmt, TryCatchStmt, Type, WrappedNodeExpr, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement, TypeofExpr, collectExternalReferences, EmitterVisitorContext, ViewCompiler, getParseErrors, isSyntaxError, syntaxError, Version, jitExpression, R3ResolvedDependencyType, compileInjector, compileNgModule, compilePipeFromMetadata, makeBindingParser, parseTemplate, compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings, VERSION, templateVisitAll, TextAst, BoundTextAst, AttrAst, BoundElementPropertyAst, BoundEventAst, ReferenceAst, VariableAst, ElementAst, EmbeddedTemplateAst, BoundDirectivePropertyAst, DirectiveAst, ProviderAst, ProviderAstType, NgContentAst, NullTemplateVisitor, RecursiveTemplateAstVisitor, sanitizeIdentifier, identifierName, identifierModuleUrl, viewClassName, rendererTypeName, hostViewClassName, componentFactoryName, tokenName, tokenReference, flatten, templateSourceUrl, sharedStylesheetJitUrl, ngModuleJitUrl, templateJitUrl, CompileSummaryKind, CompileStylesheetMetadata, CompileTemplateMetadata, CompileDirectiveMetadata, CompilePipeMetadata, CompileShallowModuleMetadata, CompileNgModuleMetadata, TransitiveCompileNgModuleMetadata, ProviderMeta, createAotUrlResolver, createAotCompiler, analyzeNgModules, analyzeAndValidateNgModules, analyzeFile, analyzeFileForInjectables, mergeAnalyzedFiles, AotCompiler, toTypeScript, GeneratedFile, formattedError, isFormattedError, StaticReflector, StaticSymbol, StaticSymbolCache, unescapeIdentifier, unwrapResolvedMetadata, ResolvedStaticSymbol, StaticSymbolResolver, AotSummaryResolver, AstPath, SummaryResolver, JitSummaryResolver, CompileReflector, createUrlResolverWithoutPackagePrefix, createOfflineCompileUrlResolver, getUrlScheme, UrlResolver, ResourceLoader, ElementSchemaRegistry, Extractor, I18NHtmlParser, MessageBundle, Serializer, Xliff, Xliff2, Xmb, Xtb, DirectiveNormalizer, visitAstChildren, ParserError, ParseSpan, AST, Quote, EmptyExpr, ImplicitReceiver, Chain, Conditional, PropertyRead, PropertyWrite, SafePropertyRead, KeyedRead, KeyedWrite, BindingPipe, LiteralPrimitive, LiteralArray, LiteralMap, Interpolation, Binary, PrefixNot, NonNullAssert, MethodCall, SafeMethodCall, FunctionCall, ASTWithSource, TemplateBinding, NullAstVisitor, RecursiveAstVisitor, AstTransformer, AstMemoryEfficientTransformer, ParsedProperty, ParsedPropertyType, ParsedEvent, ParsedVariable, BoundElementProperty, isIdentifier, isQuote, TokenType, Lexer, Token, EOF, SplitInterpolation, TemplateBindingParseResult, Parser, _ParseAST, ERROR_COMPONENT_TYPE, CompileMetadataResolver, visitAll, findNode, Text, Expansion, ExpansionCase, Attribute, Element, Comment, RecursiveVisitor, ParseTreeResult, TreeError, HtmlParser, getHtmlTagDefinition, HtmlTagDefinition, splitNsName, isNgContainer, isNgContent, isNgTemplate, getNsPrefix, mergeNsAndName, TagContentType, NAMED_ENTITIES, NGSP_UNICODE, debugOutputAstAsTypeScript, TypeScriptEmitter, typeSourceSpan, ParseLocation, ParseSourceFile, ParseSourceSpan, ParseErrorLevel, ParseError, DomElementSchemaRegistry, CssSelector, SelectorMatcher, SelectorListContext, SelectorContext, StylesCompileDependency, CompiledStylesheet, StyleCompiler, splitClasses, createElementCssSelector, removeSummaryDuplicates, TemplateParseError, TemplateParseResult, TemplateParser, compileInjectable } from './src/compiler';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\nexport { core, CompilerConfig, preserveWhitespacesDefault, isLoweredSymbol, createLoweredSymbol, Identifiers, JitCompiler, ConstantPool, DirectiveResolver, PipeResolver, NgModuleResolver, DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig, NgModuleCompiler, ArrayType, AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinType, BuiltinTypeName, BuiltinVar, CastExpr, ClassField, ClassMethod, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, Expression, ExpressionStatement, ExpressionType, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, JSDocCommentStmt, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, MapType, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, ThrowStmt, TryCatchStmt, Type, WrappedNodeExpr, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement, TypeofExpr, collectExternalReferences, EmitterVisitorContext, ViewCompiler, getParseErrors, isSyntaxError, syntaxError, Version, jitExpression, R3ResolvedDependencyType, compileInjector, compileNgModule, compilePipeFromMetadata, makeBindingParser, parseTemplate, compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings, VERSION, templateVisitAll, TextAst, BoundTextAst, AttrAst, BoundElementPropertyAst, BoundEventAst, ReferenceAst, VariableAst, ElementAst, EmbeddedTemplateAst, BoundDirectivePropertyAst, DirectiveAst, ProviderAst, ProviderAstType, NgContentAst, NullTemplateVisitor, RecursiveTemplateAstVisitor, sanitizeIdentifier, identifierName, identifierModuleUrl, viewClassName, rendererTypeName, hostViewClassName, componentFactoryName, tokenName, tokenReference, flatten, templateSourceUrl, sharedStylesheetJitUrl, ngModuleJitUrl, templateJitUrl, CompileSummaryKind, CompileStylesheetMetadata, CompileTemplateMetadata, CompileDirectiveMetadata, CompilePipeMetadata, CompileShallowModuleMetadata, CompileNgModuleMetadata, TransitiveCompileNgModuleMetadata, ProviderMeta, createAotUrlResolver, createAotCompiler, analyzeNgModules, analyzeAndValidateNgModules, analyzeFile, analyzeFileForInjectables, mergeAnalyzedFiles, AotCompiler, toTypeScript, GeneratedFile, formattedError, isFormattedError, StaticReflector, StaticSymbol, StaticSymbolCache, unescapeIdentifier, unwrapResolvedMetadata, ResolvedStaticSymbol, StaticSymbolResolver, AotSummaryResolver, AstPath, SummaryResolver, JitSummaryResolver, CompileReflector, createUrlResolverWithoutPackagePrefix, createOfflineCompileUrlResolver, getUrlScheme, UrlResolver, ResourceLoader, ElementSchemaRegistry, Extractor, I18NHtmlParser, MessageBundle, Serializer, Xliff, Xliff2, Xmb, Xtb, DirectiveNormalizer, visitAstChildren, ParserError, ParseSpan, AST, Quote, EmptyExpr, ImplicitReceiver, Chain, Conditional, PropertyRead, PropertyWrite, SafePropertyRead, KeyedRead, KeyedWrite, BindingPipe, LiteralPrimitive, LiteralArray, LiteralMap, Interpolation, Binary, PrefixNot, NonNullAssert, MethodCall, SafeMethodCall, FunctionCall, ASTWithSource, TemplateBinding, NullAstVisitor, RecursiveAstVisitor, AstTransformer, AstMemoryEfficientTransformer, ParsedProperty, ParsedPropertyType, ParsedEvent, ParsedVariable, BoundElementProperty, isIdentifier, isQuote, TokenType, Lexer, Token, EOF, SplitInterpolation, TemplateBindingParseResult, Parser, _ParseAST, ERROR_COMPONENT_TYPE, CompileMetadataResolver, visitAll, findNode, Text, Expansion, ExpansionCase, Attribute, Element, Comment, RecursiveVisitor, ParseTreeResult, TreeError, HtmlParser, getHtmlTagDefinition, HtmlTagDefinition, splitNsName, isNgContainer, isNgContent, isNgTemplate, getNsPrefix, mergeNsAndName, TagContentType, NAMED_ENTITIES, NGSP_UNICODE, debugOutputAstAsTypeScript, TypeScriptEmitter, typeSourceSpan, ParseLocation, ParseSourceFile, ParseSourceSpan, ParseErrorLevel, ParseError, DomElementSchemaRegistry, CssSelector, SelectorMatcher, SelectorListContext, SelectorContext, StylesCompileDependency, CompiledStylesheet, StyleCompiler, splitClasses, createElementCssSelector, removeSummaryDuplicates, TemplateParseError, TemplateParseResult, TemplateParser, compileInjectable } from './public_api';\n//# sourceMappingURL=compiler.js.map"],"names":["Attribute","html.visitAll","html.Text","chars.$EOF","chars.$SPACE","chars.isDigit","chars.$PERIOD","chars.$LPAREN","chars.$RPAREN","chars.$LBRACE","chars.$RBRACE","chars.$LBRACKET","chars.$RBRACKET","chars.$COMMA","chars.$COLON","chars.$SEMICOLON","chars.$SQ","chars.$DQ","chars.$HASH","chars.$PLUS","chars.$MINUS","chars.$STAR","chars.$SLASH","chars.$PERCENT","chars.$CARET","chars.$QUESTION","chars.$LT","chars.$EQ","chars.$GT","chars.$BANG","chars.$AMPERSAND","chars.$BAR","chars.isWhitespace","chars.$NBSP","chars.$BACKSLASH","chars.$u","chars.$a","chars.$z","chars.$A","chars.$Z","chars.$_","chars.$$","chars.isAsciiLetter","chars.$e","chars.$E","chars.$BT","chars.$LF","chars.$n","chars.$FF","chars.$f","chars.$CR","chars.$r","chars.$TAB","chars.$t","chars.$VTAB","chars.$v","TokenType","Token","chars.$x","chars.$X","chars.$0","chars.$9","chars.isAsciiHexDigit","Parser","lex.tokenize","lex.TokenType","html.Comment","html.Expansion","lex.Token","html.ExpansionCase","html.Element","html.Attribute","Text","ExpressionParser","ExpressionLexer","i18n.Message","i18n.TagPlaceholder","i18n.Icu","i18n.Container","i18n.IcuPlaceholder","i18n.Text","i18n.Placeholder","i18n.RecurseVisitor","_Visitor","xml.Tag","xml.CR","xml.Text","xml.serialize","xml.Declaration","ml.visitAll","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_MARKER_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_WriteVisitor","XmlToI18n","xml.Doctype","digest","Type","AstTransformer","RecursiveAstVisitor","o.literalArr","o.LiteralMapEntry","o.LiteralMapExpr","o.literal","o.Expression","o.importExpr","o.InstantiateExpr","o.fn","o.ReturnStatement","o.NULL_EXPR","o.literalMap","o.ClassStmt","o.ClassField","o.INFERRED_TYPE","o.StmtModifier","o.ClassMethod","cpl.viewClassName","cpl.hostViewClassName","cpl.identifierName","cpl.rendererTypeName","cpl.componentFactoryName","cpl.CompileDirectiveMetadata","cpl.CompileTemplateMetadata","cpl.CompileSummaryKind","cpl.CompileNgModuleMetadata","cpl.TransitiveCompileNgModuleMetadata","cpl.tokenReference","cpl.CompilePipeMetadata","cpl.ProviderMeta","error","o.FnParam","o.DYNAMIC_TYPE","o.variable","o.importType","o.expressionType","o.TypeModifier","VERSION","CATCH_ERROR_VAR","CATCH_STACK_VAR","o.BuiltinVar","o.BinaryOperator","o.Statement","o.Type","o.ExternalExpr","o.BuiltinTypeName","o.BuiltinMethod","o.ArrayType","t.templateVisitAll","t.BoundTextAst","t.TextAst","t.AttrAst","t.VariableAst","t.NgContentAst","t.EmbeddedTemplateAst","t.ElementAst","t.BoundEventAst","t.BoundElementPropertyAst","t.ReferenceAst","t.DirectiveAst","t.BoundDirectivePropertyAst","o.DeclareVarStmt","o.BinaryOperatorExpr","cdAst.AstTransformer","cdAst.ImplicitReceiver","o.not","o.assertNotNull","cdAst.SafeMethodCall","cdAst.MethodCall","cdAst.PropertyRead","o.ReadVarExpr","o.ExpressionStatement","cdAst.FunctionCall","o.applySourceSpanToStatementIfNeeded","o.IfStmt","o.DeclareFunctionStmt","CLASS_ATTR","ViewBuilder","LOG_VAR","o.findReadVarNames","o.CommaExpr","o.applySourceSpanToExpressionIfNeeded","o.BOOL_TYPE","literal","o.LiteralExpr","variable","o.LiteralArrayExpr","o.JSDocCommentStmt","i18n.CloneVisitor","MapEntry","MapLiteral","CORE","Identifiers","MEANING_SEPARATOR","ID_SEPARATOR","invalid","o.constructor.name","o.isNull","o.InvokeFunctionExpr","R3","o.ExpressionType","o.typeofExpr","o.NONE_TYPE","Element","visitAll","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR_PREFIX","t.Variable","NON_BINDABLE_VISITOR","t.TextAttribute","t.Content","t.Template","t.Element","t.BoundText","t.Text","t.BoundAttribute","t.Reference","NonBindableVisitor","t.BoundEvent","o.ifStmt","core.parseSelectorToR3Selector","t.visitAll","o.NUMBER_TYPE","o.TYPED_NULL_EXPR","core.SecurityContext","HOST_REG_EXP","compileR3Module","compileR3Component","compileR3Directive","compileR3Pipe","importExpr","o.ExternalReference","BindingScope","fn","ir.variable","ir.importExpr","o.ReadPropExpr"],"mappings":"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"}