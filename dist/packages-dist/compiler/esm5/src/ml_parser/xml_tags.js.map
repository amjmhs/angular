{"version":3,"file":"xml_tags.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/ml_parser/xml_tags.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAgB,MAAM,QAAQ,CAAC;AAErD,IAAA;;8BAC4B,KAAK;2BAOD,cAAc,CAAC,aAAa;sBACxC,KAAK;6BACE,KAAK;4BACN,IAAI;;;;;;IAE5B,6CAAkB;;;;IAAlB,UAAmB,aAAqB,IAAa,OAAO,KAAK,CAAC,EAAE;;;;;IAEpE,0CAAe;;;;IAAf,UAAgB,IAAY,IAAa,OAAO,KAAK,CAAC,EAAE;2BAzB1D;IA0BC,CAAA;AAhBD,4BAgBC;;;;;;;;;;;;;;;;;;;;AAED,IAAM,eAAe,GAAG,IAAI,gBAAgB,EAAE,CAAC;;;;;AAE/C,MAAM,8BAA8B,OAAe;IACjD,OAAO,eAAe,CAAC;CACxB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\n\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent: boolean = false;\n  // TODO(issue/24571): remove '!'.\n  requiredParents !: {[key: string]: boolean};\n  // TODO(issue/24571): remove '!'.\n  parentToAdd !: string;\n  // TODO(issue/24571): remove '!'.\n  implicitNamespacePrefix !: string;\n  contentType: TagContentType = TagContentType.PARSABLE_DATA;\n  isVoid: boolean = false;\n  ignoreFirstLf: boolean = false;\n  canSelfClose: boolean = true;\n\n  requireExtraParent(currentParent: string): boolean { return false; }\n\n  isClosedByChild(name: string): boolean { return false; }\n}\n\nconst _TAG_DEFINITION = new XmlTagDefinition();\n\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n"]}