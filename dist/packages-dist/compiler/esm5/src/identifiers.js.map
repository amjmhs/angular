{"version":3,"file":"identifiers.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/identifiers.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileTokenMetadata} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport * as o from './output/output_ast';\n\nconst CORE = '@angular/core';\n\nexport class Identifiers {\n  static ANALYZE_FOR_ENTRY_COMPONENTS: o.ExternalReference = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n\n  };\n  static ElementRef: o.ExternalReference = {name: 'ElementRef', moduleName: CORE};\n  static NgModuleRef: o.ExternalReference = {name: 'NgModuleRef', moduleName: CORE};\n  static ViewContainerRef: o.ExternalReference = {name: 'ViewContainerRef', moduleName: CORE};\n  static ChangeDetectorRef: o.ExternalReference = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n\n  };\n  static QueryList: o.ExternalReference = {name: 'QueryList', moduleName: CORE};\n  static TemplateRef: o.ExternalReference = {name: 'TemplateRef', moduleName: CORE};\n  static CodegenComponentFactoryResolver: o.ExternalReference = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleName: CORE,\n\n  };\n  static ComponentFactoryResolver: o.ExternalReference = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n\n  };\n  static ComponentFactory: o.ExternalReference = {name: 'ComponentFactory', moduleName: CORE};\n  static ComponentRef: o.ExternalReference = {name: 'ComponentRef', moduleName: CORE};\n  static NgModuleFactory: o.ExternalReference = {name: 'NgModuleFactory', moduleName: CORE};\n  static createModuleFactory: o.ExternalReference = {\n    name: 'ɵcmf',\n    moduleName: CORE,\n\n  };\n  static moduleDef: o.ExternalReference = {\n    name: 'ɵmod',\n    moduleName: CORE,\n\n  };\n  static moduleProviderDef: o.ExternalReference = {\n    name: 'ɵmpd',\n    moduleName: CORE,\n\n  };\n  static RegisterModuleFactoryFn: o.ExternalReference = {\n    name: 'ɵregisterModuleFactory',\n    moduleName: CORE,\n\n  };\n  static inject: o.ExternalReference = {name: 'inject', moduleName: CORE};\n  static INJECTOR: o.ExternalReference = {name: 'INJECTOR', moduleName: CORE};\n  static Injector: o.ExternalReference = {name: 'Injector', moduleName: CORE};\n  static defineInjectable: o.ExternalReference = {name: 'defineInjectable', moduleName: CORE};\n  static InjectableDef: o.ExternalReference = {name: 'ɵInjectableDef', moduleName: CORE};\n  static ViewEncapsulation: o.ExternalReference = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n\n  };\n  static ChangeDetectionStrategy: o.ExternalReference = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n\n  };\n  static SecurityContext: o.ExternalReference = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n\n  };\n  static LOCALE_ID: o.ExternalReference = {name: 'LOCALE_ID', moduleName: CORE};\n  static TRANSLATIONS_FORMAT: o.ExternalReference = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n\n  };\n  static inlineInterpolate: o.ExternalReference = {\n    name: 'ɵinlineInterpolate',\n    moduleName: CORE,\n  };\n  static interpolate: o.ExternalReference = {name: 'ɵinterpolate', moduleName: CORE};\n  static EMPTY_ARRAY: o.ExternalReference = {name: 'ɵEMPTY_ARRAY', moduleName: CORE};\n  static EMPTY_MAP: o.ExternalReference = {name: 'ɵEMPTY_MAP', moduleName: CORE};\n  static Renderer: o.ExternalReference = {name: 'Renderer', moduleName: CORE};\n  static viewDef: o.ExternalReference = {name: 'ɵvid', moduleName: CORE};\n  static elementDef: o.ExternalReference = {name: 'ɵeld', moduleName: CORE};\n  static anchorDef: o.ExternalReference = {name: 'ɵand', moduleName: CORE};\n  static textDef: o.ExternalReference = {name: 'ɵted', moduleName: CORE};\n  static directiveDef: o.ExternalReference = {name: 'ɵdid', moduleName: CORE};\n  static providerDef: o.ExternalReference = {name: 'ɵprd', moduleName: CORE};\n  static queryDef: o.ExternalReference = {name: 'ɵqud', moduleName: CORE};\n  static pureArrayDef: o.ExternalReference = {name: 'ɵpad', moduleName: CORE};\n  static pureObjectDef: o.ExternalReference = {name: 'ɵpod', moduleName: CORE};\n  static purePipeDef: o.ExternalReference = {name: 'ɵppd', moduleName: CORE};\n  static pipeDef: o.ExternalReference = {name: 'ɵpid', moduleName: CORE};\n  static nodeValue: o.ExternalReference = {name: 'ɵnov', moduleName: CORE};\n  static ngContentDef: o.ExternalReference = {name: 'ɵncd', moduleName: CORE};\n  static unwrapValue: o.ExternalReference = {name: 'ɵunv', moduleName: CORE};\n  static createRendererType2: o.ExternalReference = {name: 'ɵcrt', moduleName: CORE};\n  // type only\n  static RendererType2: o.ExternalReference = {\n    name: 'RendererType2',\n    moduleName: CORE,\n\n  };\n  // type only\n  static ViewDefinition: o.ExternalReference = {\n    name: 'ɵViewDefinition',\n    moduleName: CORE,\n  };\n  static createComponentFactory: o.ExternalReference = {name: 'ɵccf', moduleName: CORE};\n}\n\nexport function createTokenForReference(reference: any): CompileTokenMetadata {\n  return {identifier: {reference: reference}};\n}\n\nexport function createTokenForExternalReference(\n    reflector: CompileReflector, reference: o.ExternalReference): CompileTokenMetadata {\n  return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n"]}