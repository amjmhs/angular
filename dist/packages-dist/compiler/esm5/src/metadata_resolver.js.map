{"version":3,"file":"metadata_resolver.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {CompilerConfig} from './config';\nimport {ChangeDetectionStrategy, Component, Directive, Injectable, ModuleWithProviders, Provider, Query, SchemaMetadata, Type, ViewEncapsulation, createAttribute, createComponent, createHost, createInject, createInjectable, createInjectionToken, createNgModule, createOptional, createSelf, createSkipSelf} from './core';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver, findLast} from './directive_resolver';\nimport {Identifiers} from './identifiers';\nimport {getAllLifecycleHooks} from './lifecycle_reflector';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {CssSelector} from './selector';\nimport {SummaryResolver} from './summary_resolver';\nimport {Console, SyncAsync, ValueTransformer, isPromise, noUndefined, resolveForwardRef, stringify, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\n\nexport const ERROR_COMPONENT_TYPE = 'ngComponentType';\n\n// Design notes:\n// - don't lazily create metadata:\n//   For some metadata, we need to do async work sometimes,\n//   so the user has to kick off this loading.\n//   But we want to report errors even when the async work is\n//   not required to check that the user would have been able\n//   to wait correctly.\nexport class CompileMetadataResolver {\n  private _nonNormalizedDirectiveCache =\n      new Map<Type, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\n  private _directiveCache = new Map<Type, cpl.CompileDirectiveMetadata>();\n  private _summaryCache = new Map<Type, cpl.CompileTypeSummary|null>();\n  private _pipeCache = new Map<Type, cpl.CompilePipeMetadata>();\n  private _ngModuleCache = new Map<Type, cpl.CompileNgModuleMetadata>();\n  private _ngModuleOfTypes = new Map<Type, Type>();\n  private _shallowModuleCache = new Map<Type, cpl.CompileShallowModuleMetadata>();\n\n  constructor(\n      private _config: CompilerConfig, private _htmlParser: HtmlParser,\n      private _ngModuleResolver: NgModuleResolver, private _directiveResolver: DirectiveResolver,\n      private _pipeResolver: PipeResolver, private _summaryResolver: SummaryResolver<any>,\n      private _schemaRegistry: ElementSchemaRegistry,\n      private _directiveNormalizer: DirectiveNormalizer, private _console: Console,\n      private _staticSymbolCache: StaticSymbolCache, private _reflector: CompileReflector,\n      private _errorCollector?: ErrorCollector) {}\n\n  getReflector(): CompileReflector { return this._reflector; }\n\n  clearCacheFor(type: Type) {\n    const dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n\n  clearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n\n  private _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let delegate: any = null;\n    const proxyClass: cpl.ProxyClass = <any>function() {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    };\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      (<any>proxyClass).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    (<any>proxyClass).overriddenName = name;\n    return proxyClass;\n  }\n\n  private getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n\n  private getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n\n  getHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n\n  getHostComponentType(dirType: any): StaticSymbol|Type {\n    const name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    } else {\n      const HostClass = <any>function HostClass() {};\n      HostClass.overriddenName = name;\n\n      return HostClass;\n    }\n  }\n\n  private getRendererType(dirType: any): StaticSymbol|object {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n    } else {\n      // returning an object as proxy,\n      // that we fill later during runtime compilation.\n      return <any>{};\n    }\n  }\n\n  private getComponentFactory(\n      selector: string, dirType: any, inputs: {[key: string]: string}|null,\n      outputs: {[key: string]: string}): StaticSymbol|object {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const hostView = this.getHostComponentViewClass(dirType);\n      // Note: ngContentSelectors will be filled later once the template is\n      // loaded.\n      const createComponentFactory =\n          this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n      return createComponentFactory(selector, dirType, <any>hostView, inputs, outputs, []);\n    }\n  }\n\n  private initComponentFactory(factory: StaticSymbol|object, ngContentSelectors: string[]) {\n    if (!(factory instanceof StaticSymbol)) {\n      (factory as any).ngContentSelectors.push(...ngContentSelectors);\n    }\n  }\n\n  private _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary|null {\n    let typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary || null);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n\n  getHostComponentMetadata(\n      compMeta: cpl.CompileDirectiveMetadata,\n      hostViewType?: StaticSymbol|cpl.ProxyClass): cpl.CompileDirectiveMetadata {\n    const hostType = this.getHostComponentType(compMeta.type.reference);\n    if (!hostViewType) {\n      hostViewType = this.getHostComponentViewClass(hostType);\n    }\n    // Note: ! is ok here as this method should only be called with normalized directive\n    // metadata, which always fills in the selector.\n    const template = CssSelector.parse(compMeta.selector !)[0].getMatchingElementTemplate();\n    const templateUrl = '';\n    const htmlAst = this._htmlParser.parse(template, templateUrl);\n    return cpl.CompileDirectiveMetadata.create({\n      isHost: true,\n      type: {reference: hostType, diDeps: [], lifecycleHooks: []},\n      template: new cpl.CompileTemplateMetadata({\n        encapsulation: ViewEncapsulation.None,\n        template,\n        templateUrl,\n        htmlAst,\n        styles: [],\n        styleUrls: [],\n        ngContentSelectors: [],\n        animations: [],\n        isInline: true,\n        externalStylesheets: [],\n        interpolation: null,\n        preserveWhitespaces: false,\n      }),\n      exportAs: null,\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: [],\n      outputs: [],\n      host: {},\n      isComponent: true,\n      selector: '*',\n      providers: [],\n      viewProviders: [],\n      queries: [],\n      guards: {},\n      viewQueries: [],\n      componentViewType: hostViewType,\n      rendererType:\n          {id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {}} as object,\n      entryComponents: [],\n      componentFactory: null\n    });\n  }\n\n  loadDirectiveMetadata(ngModuleType: any, directiveType: any, isSync: boolean): SyncAsync<null> {\n    if (this._directiveCache.has(directiveType)) {\n      return null;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = this.getNonNormalizedDirectiveMetadata(directiveType) !;\n\n    const createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata | null) => {\n      const normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        isHost: false,\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        guards: metadata.guards,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        componentViewType: metadata.componentViewType,\n        rendererType: metadata.rendererType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      if (templateMetadata) {\n        this.initComponentFactory(metadata.componentFactory !, templateMetadata.ngContentSelectors);\n      }\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return null;\n    };\n\n    if (metadata.isComponent) {\n      const template = metadata.template !;\n      const templateMeta = this._directiveNormalizer.normalizeTemplate({\n        ngModuleType,\n        componentType: directiveType,\n        moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n        encapsulation: template.encapsulation,\n        template: template.template,\n        templateUrl: template.templateUrl,\n        styles: template.styles,\n        styleUrls: template.styleUrls,\n        animations: template.animations,\n        interpolation: template.interpolation,\n        preserveWhitespaces: template.preserveWhitespaces\n      });\n      if (isPromise(templateMeta) && isSync) {\n        this._reportError(componentStillLoadingError(directiveType), directiveType);\n        return null;\n      }\n      return SyncAsync.then(templateMeta, createDirectiveMetadata);\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n\n  getNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}|null {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata = undefined !;\n\n    if (createComponent.isTypeOf(dirMeta)) {\n      // component\n      const compMeta = dirMeta as Component;\n      assertArrayOfStrings('styles', compMeta.styles);\n      assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', compMeta.interpolation);\n\n      const animations = compMeta.animations;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: noUndefined(compMeta.encapsulation),\n        template: noUndefined(compMeta.template),\n        templateUrl: noUndefined(compMeta.templateUrl),\n        htmlAst: null,\n        styles: compMeta.styles || [],\n        styleUrls: compMeta.styleUrls || [],\n        animations: animations || [],\n        interpolation: noUndefined(compMeta.interpolation),\n        isInline: !!compMeta.template,\n        externalStylesheets: [],\n        ngContentSelectors: [],\n        preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n      });\n    }\n\n    let changeDetectionStrategy: ChangeDetectionStrategy = null !;\n    let viewProviders: cpl.CompileProviderMetadata[] = [];\n    let entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let selector = dirMeta.selector;\n\n    if (createComponent.isTypeOf(dirMeta)) {\n      // Component\n      const compMeta = dirMeta as Component;\n      changeDetectionStrategy = compMeta.changeDetection !;\n      if (compMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            compMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (compMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                                     .map((type) => this._getEntryComponentMetadata(type) !)\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let queries: cpl.CompileQueryMetadata[] = [];\n    let viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const metadata = cpl.CompileDirectiveMetadata.create({\n      isHost: false,\n      selector: selector,\n      exportAs: noUndefined(dirMeta.exportAs),\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs || [],\n      outputs: dirMeta.outputs || [],\n      host: dirMeta.host || {},\n      providers: providers || [],\n      viewProviders: viewProviders || [],\n      queries: queries || [],\n      guards: dirMeta.guards || {},\n      viewQueries: viewQueries || [],\n      entryComponents: entryComponentMetadata,\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         null,\n      rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n      componentFactory: null\n    });\n    if (nonNormalizedTemplateMetadata) {\n      metadata.componentFactory =\n          this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n    }\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n\n  /**\n   * Gets the metadata for the given directive.\n   * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n   */\n  getDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const dirMeta = this._directiveCache.get(directiveType) !;\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n\n  getDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const dirSummary =\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n\n  isDirective(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n        this._directiveResolver.isDirective(type);\n  }\n\n  isPipe(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n        this._pipeResolver.isPipe(type);\n  }\n\n  isNgModule(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n        this._ngModuleResolver.isNgModule(type);\n  }\n\n  getNgModuleSummary(moduleType: any, alreadyCollecting: Set<any>|null = null):\n      cpl.CompileNgModuleSummary|null {\n    let moduleSummary: cpl.CompileNgModuleSummary|null =\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule);\n    if (!moduleSummary) {\n      const moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n\n  /**\n   * Loads the declared directives and pipes of an NgModule.\n   */\n  loadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const promise = this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n\n  getShallowModuleMetadata(moduleType: any): cpl.CompileShallowModuleMetadata|null {\n    let compileMeta = this._shallowModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n\n    const ngModuleMeta =\n        findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n\n    compileMeta = {\n      type: this._getTypeMetadata(moduleType),\n      rawExports: ngModuleMeta.exports,\n      rawImports: ngModuleMeta.imports,\n      rawProviders: ngModuleMeta.providers,\n    };\n\n    this._shallowModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n\n  getNgModuleMetadata(\n      moduleType: any, throwIfNotFound = true,\n      alreadyCollecting: Set<any>|null = null): cpl.CompileNgModuleMetadata|null {\n    moduleType = resolveForwardRef(moduleType);\n    let compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const importedModules: cpl.CompileNgModuleSummary[] = [];\n    const exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const providers: cpl.CompileProviderMetadata[] = [];\n    const entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let importedModuleType: Type = undefined !;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          if (this._checkSelfImport(moduleType, importedModuleType)) return;\n          if (!alreadyCollecting) alreadyCollecting = new Set();\n          if (alreadyCollecting.has(importedModuleType)) {\n            this._reportError(\n                syntaxError(\n                    `${this._getTypeDescriptor(importedModuleType)} '${stringifyType(importedType)}' is imported recursively by the module '${stringifyType(moduleType)}'.`),\n                moduleType);\n            return;\n          }\n          alreadyCollecting.add(importedModuleType);\n          const importedModuleSummary =\n              this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n          alreadyCollecting.delete(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'. Please add a @NgModule annotation.`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        if (!alreadyCollecting) alreadyCollecting = new Set();\n        if (alreadyCollecting.has(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `${this._getTypeDescriptor(exportedType)} '${stringify(exportedType)}' is exported recursively by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        alreadyCollecting.add(exportedType);\n        const exportedModuleSummary = this.getNgModuleSummary(exportedType, alreadyCollecting);\n        alreadyCollecting.delete(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n        return;\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => this._getEntryComponentMetadata(type) !));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => this._getEntryComponentMetadata(type.reference) !));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id || null,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, compileMeta !.type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n\n  private _checkSelfImport(moduleType: Type, importedModuleType: Type): boolean {\n    if (moduleType === importedModuleType) {\n      this._reportError(\n          syntaxError(`'${stringifyType(moduleType)}' module can't import itself`), moduleType);\n      return true;\n    }\n    return false;\n  }\n\n  private _getTypeDescriptor(type: Type): string {\n    if (isValidType(type)) {\n      if (this.isDirective(type)) {\n        return 'directive';\n      }\n\n      if (this.isPipe(type)) {\n        return 'pipe';\n      }\n\n      if (this.isNgModule(type)) {\n        return 'module';\n      }\n    }\n\n    if ((type as any).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n\n\n  private _addTypeToModule(type: Type, moduleType: Type) {\n    const oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n      return;\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n\n  private _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const result = new cpl.TransitiveCompileNgModuleMetadata();\n    const modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const tokenRef = cpl.tokenReference(entry.provider.token);\n        let prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n\n  private _getIdentifierMetadata(type: Type): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n\n  isInjectable(type: any): boolean {\n    const annotations = this._reflector.tryAnnotations(type);\n    return annotations.some(ann => createInjectable.isTypeOf(ann));\n  }\n\n  getInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {\n      summaryKind: cpl.CompileSummaryKind.Injectable,\n      type: this._getTypeMetadata(type, null, false)\n    };\n  }\n\n  getInjectableMetadata(\n      type: any, dependencies: any[]|null = null,\n      throwOnUnknownDeps: boolean = true): cpl.CompileInjectableMetadata|null {\n    const typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    const typeMetadata = typeSummary ?\n        typeSummary.type :\n        this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n\n    const annotations: Injectable[] =\n        this._reflector.annotations(type).filter(ann => createInjectable.isTypeOf(ann));\n\n    if (annotations.length === 0) {\n      return null;\n    }\n\n    const meta = annotations[annotations.length - 1];\n    return {\n      symbol: type,\n      type: typeMetadata,\n      providedIn: meta.providedIn,\n      useValue: meta.useValue,\n      useClass: meta.useClass,\n      useExisting: meta.useExisting,\n      useFactory: meta.useFactory,\n      deps: meta.deps,\n    };\n  }\n\n  private _getTypeMetadata(type: Type, dependencies: any[]|null = null, throwOnUnknownDeps = true):\n      cpl.CompileTypeMetadata {\n    const identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n      lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n    };\n  }\n\n  private _getFactoryMetadata(factory: Function, dependencies: any[]|null = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n\n  /**\n   * Gets the metadata for the given pipe.\n   * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n   */\n  getPipeMetadata(pipeType: any): cpl.CompilePipeMetadata|null {\n    const pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta || null;\n  }\n\n  getPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const pipeSummary =\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe);\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n\n  getOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n\n  private _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const pipeAnnotation = this._pipeResolver.resolve(pipeType) !;\n\n    const pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: !!pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n\n  private _getDependenciesMetadata(\n      typeOrFunc: Type|Function, dependencies: any[]|null,\n      throwOnUnknownDeps = true): cpl.CompileDiDependencyMetadata[] {\n    let hasUnknownDeps = false;\n    const params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let isAttribute = false;\n      let isHost = false;\n      let isSelf = false;\n      let isSkipSelf = false;\n      let isOptional = false;\n      let token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (createHost.isTypeOf(paramEntry)) {\n            isHost = true;\n          } else if (createSelf.isTypeOf(paramEntry)) {\n            isSelf = true;\n          } else if (createSkipSelf.isTypeOf(paramEntry)) {\n            isSkipSelf = true;\n          } else if (createOptional.isTypeOf(paramEntry)) {\n            isOptional = true;\n          } else if (createAttribute.isTypeOf(paramEntry)) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (createInject.isTypeOf(paramEntry)) {\n            token = paramEntry.token;\n          } else if (\n              createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n            token = paramEntry;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return null !;\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n      const message =\n          `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`;\n      if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n        this._reportError(syntaxError(message), typeOrFunc);\n      } else {\n        this._console.warn(`Warning: ${message} This will become an error in Angular v6.x`);\n      }\n    }\n\n    return dependenciesMetadata;\n  }\n\n  private _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n\n  private _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let providerMeta: cpl.ProviderMeta = undefined !;\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.`));\n          return;\n        } else {\n          const providersInfo =\n              (<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n          return;\n        }\n        if (providerMeta.token ===\n            this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n\n  private _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n\n  private _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const components: cpl.CompileEntryComponentMetadata[] = [];\n    const collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const entry = this._getEntryComponentMetadata(identifier.reference, false);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n\n  private _getEntryComponentMetadata(dirType: any, throwIfNotFound = true):\n      cpl.CompileEntryComponentMetadata|null {\n    const dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta && dirMeta.metadata.isComponent) {\n      return {componentType: dirType, componentFactory: dirMeta.metadata.componentFactory !};\n    }\n    const dirSummary =\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n    if (dirSummary && dirSummary.isComponent) {\n      return {componentType: dirType, componentFactory: dirSummary.componentFactory !};\n    }\n    if (throwIfNotFound) {\n      throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n    }\n    return null;\n  }\n\n  private _getInjectableTypeMetadata(type: Type, dependencies: any[]|null = null):\n      cpl.CompileTypeMetadata {\n    const typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n\n  getProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let compileDeps: cpl.CompileDiDependencyMetadata[] = undefined !;\n    let compileTypeMetadata: cpl.CompileTypeMetadata = null !;\n    let compileFactoryMetadata: cpl.CompileFactoryMetadata = null !;\n    let token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata =\n          this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n\n  private _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type): cpl.CompileQueryMetadata[] {\n    const res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n\n  private _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n\n  private _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type|Function):\n      cpl.CompileQueryMetadata {\n    let selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n        selectors = [];\n      } else {\n        selectors = [this._getTokenMetadata(q.selector)];\n      }\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null !\n    };\n  }\n\n  private _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let i = 0; i < tree.length; i++) {\n      const item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\n\nclass _CompileValueConverter extends ValueTransformer {\n  visitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n */\nfunction componentStillLoadingError(compType: Type) {\n  const error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  (error as any)[ERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\n"]}