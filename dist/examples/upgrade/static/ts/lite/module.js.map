{"version":3,"file":"module.js","sourceRoot":"","sources":["../../../../../../packages/examples/upgrade/static/ts/lite/module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// #docplaster\nimport {Component, Directive, ElementRef, EventEmitter, Inject, Injectable, Injector, Input, NgModule, Output, StaticProvider} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n// #docregion basic-how-to\n// Alternatively, we could import and use an `NgModuleFactory` instead:\n// import {MyLazyAngularModuleNgFactory} from './my-lazy-angular-module.ngfactory';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n// #enddocregion\n/* tslint:disable: no-duplicate-imports */\nimport {UpgradeComponent} from '@angular/upgrade/static';\nimport {downgradeComponent} from '@angular/upgrade/static';\nimport {downgradeInjectable} from '@angular/upgrade/static';\n// #docregion basic-how-to\nimport {downgradeModule} from '@angular/upgrade/static';\n// #enddocregion\n/* tslint:enable: no-duplicate-imports */\n\n\ndeclare var angular: ng.IAngularStatic;\n\ninterface Hero {\n  name: string;\n  description: string;\n}\n\n\n// This Angular service will use an \"upgraded\" AngularJS service.\n@Injectable()\nclass HeroesService {\n  heroes: Hero[] = [\n    {name: 'superman', description: 'The man of steel'},\n    {name: 'wonder woman', description: 'Princess of the Amazons'},\n    {name: 'thor', description: 'The hammer-wielding god'}\n  ];\n\n  constructor(@Inject('titleCase') titleCase: (v: string) => string) {\n    // Change all the hero names to title case, using the \"upgraded\" AngularJS service.\n    this.heroes.forEach((hero: Hero) => hero.name = titleCase(hero.name));\n  }\n\n  addHero() {\n    const newHero: Hero = {name: 'Kamala Khan', description: 'Epic shape-shifting healer'};\n    this.heroes = this.heroes.concat([newHero]);\n    return newHero;\n  }\n\n  removeHero(hero: Hero) { this.heroes = this.heroes.filter((item: Hero) => item !== hero); }\n}\n\n\n// This Angular component will be \"downgraded\" to be used in AngularJS.\n@Component({\n  selector: 'ng2-heroes',\n  // This template uses the \"upgraded\" `ng1-hero` component\n  // (Note that because its element is compiled by Angular we must use camelCased attribute names.)\n  template: `\n    <div class=\"ng2-heroes\">\n      <header><ng-content selector=\"h1\"></ng-content></header>\n      <ng-content selector=\".extra\"></ng-content>\n      <div *ngFor=\"let hero of this.heroesService.heroes\">\n        <ng1-hero [hero]=\"hero\" (onRemove)=\"onRemoveHero(hero)\">\n          <strong>Super Hero</strong>\n        </ng1-hero>\n      </div>\n      <button (click)=\"onAddHero()\">Add Hero</button>\n    </div>\n  `,\n})\nclass Ng2HeroesComponent {\n  @Output() private addHero = new EventEmitter<Hero>();\n  @Output() private removeHero = new EventEmitter<Hero>();\n\n  constructor(\n      @Inject('$rootScope') private $rootScope: ng.IRootScopeService,\n      public heroesService: HeroesService) {}\n\n  onAddHero() {\n    const newHero = this.heroesService.addHero();\n    this.addHero.emit(newHero);\n\n    // When a new instance of an \"upgraded\" component - such as `ng1Hero` - is created, we want to\n    // run a `$digest` to initialize its bindings. Here, the component will be created by `ngFor`\n    // asynchronously, thus we have to schedule the `$digest` to also happen asynchronously.\n    this.$rootScope.$applyAsync();\n  }\n\n  onRemoveHero(hero: Hero) {\n    this.heroesService.removeHero(hero);\n    this.removeHero.emit(hero);\n  }\n}\n\n\n// This Angular directive will act as an interface to the \"upgraded\" AngularJS component.\n@Directive({selector: 'ng1-hero'})\nclass Ng1HeroComponentWrapper extends UpgradeComponent {\n  // The names of the input and output properties here must match the names of the\n  // `<` and `&` bindings in the AngularJS component that is being wrapped.\n  @Input() hero !: Hero;\n  @Output() onRemove !: EventEmitter<void>;\n\n  constructor(elementRef: ElementRef, injector: Injector) {\n    // We must pass the name of the directive as used by AngularJS to the super.\n    super('ng1Hero', elementRef, injector);\n  }\n}\n\n\n// This Angular module represents the Angular pieces of the application.\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [Ng2HeroesComponent, Ng1HeroComponentWrapper],\n  providers: [\n    HeroesService,\n    // Register an Angular provider whose value is the \"upgraded\" AngularJS service.\n    {provide: 'titleCase', useFactory: (i: any) => i.get('titleCase'), deps: ['$injector']}\n  ],\n  // All components that are to be \"downgraded\" must be declared as `entryComponents`.\n  entryComponents: [Ng2HeroesComponent]\n  // Note that there are no `bootstrap` components, since the \"downgraded\" component\n  // will be instantiated by ngUpgrade.\n})\nclass MyLazyAngularModule {\n  // Empty placeholder method to prevent the `Compiler` from complaining.\n  ngDoBootstrap() {}\n}\n\n\n// #docregion basic-how-to\n\n\n// The function that will bootstrap the Angular module (when/if necessary).\n// (This would be omitted if we provided an `NgModuleFactory` directly.)\nconst ng2BootstrapFn = (extraProviders: StaticProvider[]) =>\n    platformBrowserDynamic(extraProviders).bootstrapModule(MyLazyAngularModule);\n// #enddocregion\n// (We are using the dynamic browser platform, as this example has not been compiled AoT.)\n\n\n// #docregion basic-how-to\n\n\n// This AngularJS module represents the AngularJS pieces of the application.\nconst myMainAngularJsModule = angular.module('myMainAngularJsModule', [\n  // We declare a dependency on the \"downgraded\" Angular module.\n  downgradeModule(ng2BootstrapFn)\n  // or\n  // downgradeModule(MyLazyAngularModuleFactory)\n]);\n// #enddocregion\n\n\n// This AngularJS component will be \"upgraded\" to be used in Angular.\nmyMainAngularJsModule.component('ng1Hero', {\n  bindings: {hero: '<', onRemove: '&'},\n  transclude: true,\n  template: `\n    <div class=\"ng1-hero\">\n      <div class=\"title\" ng-transclude></div>\n      <h2>{{ $ctrl.hero.name }}</h2>\n      <p>{{ $ctrl.hero.description }}</p>\n      <button ng-click=\"$ctrl.onRemove()\">Remove</button>\n    </div>\n  `\n});\n\n\n// This AngularJS service will be \"upgraded\" to be used in Angular.\nmyMainAngularJsModule.factory(\n    'titleCase', () => (value: string) => value.replace(/(^|\\s)[a-z]/g, m => m.toUpperCase()));\n\n\n// This directive will act as the interface to the \"downgraded\" Angular component.\nmyMainAngularJsModule.directive(\n    'ng2Heroes', downgradeComponent({\n      component: Ng2HeroesComponent,\n      // Optionally, disable `$digest` propagation to avoid unnecessary change detection.\n      // (Change detection is still run when the inputs of a \"downgraded\" component change.)\n      propagateDigest: false\n    }));\n\n\n// This is our top level application component.\nmyMainAngularJsModule.component('exampleApp', {\n  // This template makes use of the \"downgraded\" `ng2-heroes` component,\n  // but loads it lazily only when/if the user clicks the button.\n  // (Note that because its element is compiled by AngularJS,\n  //  we must use kebab-case attributes for inputs and outputs.)\n  template: `\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <button ng-click=\"$ctrl.toggleHeroes()\">{{ $ctrl.toggleBtnText() }}</button>\n    <ng2-heroes\n        ng-if=\"$ctrl.showHeroes\"\n        (add-hero)=\"$ctrl.setStatusMessage('Added hero ' + $event.name)\"\n        (remove-hero)=\"$ctrl.setStatusMessage('Removed hero ' + $event.name)\">\n      <h1>Heroes</h1>\n      <p class=\"extra\">Status: {{ $ctrl.statusMessage }}</p>\n    </ng2-heroes>\n  `,\n  controller: function() {\n    this.showHeroes = false;\n    this.statusMessage = 'Ready';\n\n    this.setStatusMessage = (msg: string) => this.statusMessage = msg;\n    this.toggleHeroes = () => this.showHeroes = !this.showHeroes;\n    this.toggleBtnText = () => `${this.showHeroes ? 'Hide' : 'Show'} heroes`;\n  }\n});\n\n\n// We bootstrap the Angular module as we would do in a normal Angular app.\nangular.bootstrap(document.body, [myMainAngularJsModule.name]);\n"]}