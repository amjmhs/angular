{"version":3,"file":"change-detection.js","sourceRoot":"","sources":["../../../../../packages/examples/core/ts/change_detect/change-detection.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;GAMG;AACH,gCAAgC;AAChC,wCAA+F;AAG/F,4BAA4B;AAO5B,IAAM,YAAY,GAAlB;IAGE,YAAoB,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;QAF1C,kBAAa,GAAG,CAAC,CAAC;QAGhB,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,6BAA6B;YAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CACF,CAAA;AAVK,YAAY;IANjB,gBAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,oCAAoC;QAC9C,eAAe,EAAE,8BAAuB,CAAC,MAAM;KAChD,CAAC;qCAKyB,wBAAiB;GAHtC,YAAY,CAUjB;AACD,+BAA+B;AAE/B,oBAAoB;AACpB;IACE,uEAAuE;IACvE,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACvC;AAQD,IAAM,SAAS,GAAf;IACE,YAAoB,GAAsB,EAAU,YAA8B;QAA9D,QAAG,GAAH,GAAG,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAkB;QAChF,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;CACF,CAAA;AALK,SAAS;IANd,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE;;KAEP;KACJ,CAAC;qCAEyB,wBAAiB,EAAwB,gBAAgB;GAD9E,SAAS,CAKd;AASD,IAAM,GAAG,GAAT;CACC,CAAA;AADK,GAAG;IAPR,gBAAS,CAAC;QACT,QAAQ,EAAE,KAAK;QACf,SAAS,EAAE,CAAC,gBAAgB,CAAC;QAC7B,QAAQ,EAAE;;KAEP;KACJ,CAAC;GACI,GAAG,CACR;AACD,uBAAuB;AAEvB,sBAAsB;AACtB;IAEE;QADA,SAAI,GAAG,CAAC,CAAC;QAEP,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;CACF;AAID,IAAM,QAAQ,GAAd;IACE,YAAoB,GAAsB,EAAU,YAA0B;QAA1D,QAAG,GAAH,GAAG,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElF,IAAI,IAAI,CAAC,KAAc;QACrB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACnB;IACH,CAAC;CACF,CAAA;AAVK,QAAQ;IADb,gBAAS,CAAC,EAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,6BAA6B,EAAC,CAAC;qCAEnE,wBAAiB,EAAwB,YAAY;GAD1E,QAAQ,CAUb;AAWD,IAAM,IAAI,GAAV;IATA;QAUE,SAAI,GAAG,IAAI,CAAC;IACd,CAAC;CAAA,CAAA;AAFK,IAAI;IATT,gBAAS,CAAC;QACT,QAAQ,EAAE,KAAK;QACf,SAAS,EAAE,CAAC,YAAY,CAAC;QACzB,QAAQ,EAAE;;;MAGN;KACL,CAAC;GAEI,IAAI,CAET;AACD,yBAAyB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/* tslint:disable:no-console  */\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive} from '@angular/core';\n\n\n// #docregion mark-for-check\n@Component({\n  selector: 'my-app',\n  template: `Number of ticks: {{numberOfTicks}}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nclass AppComponent {\n  numberOfTicks = 0;\n\n  constructor(private ref: ChangeDetectorRef) {\n    setInterval(() => {\n      this.numberOfTicks++;\n      // require view to be updated\n      this.ref.markForCheck();\n    }, 1000);\n  }\n}\n// #enddocregion mark-for-check\n\n// #docregion detach\nclass DataListProvider {\n  // in a real application the returned data will be different every time\n  get data() { return [1, 2, 3, 4, 5]; }\n}\n\n@Component({\n  selector: 'giant-list',\n  template: `\n      <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n    `,\n})\nclass GiantList {\n  constructor(private ref: ChangeDetectorRef, private dataProvider: DataListProvider) {\n    ref.detach();\n    setInterval(() => { this.ref.detectChanges(); }, 5000);\n  }\n}\n\n@Component({\n  selector: 'app',\n  providers: [DataListProvider],\n  template: `\n      <giant-list><giant-list>\n    `,\n})\nclass App {\n}\n// #enddocregion detach\n\n// #docregion reattach\nclass DataProvider {\n  data = 1;\n  constructor() {\n    setInterval(() => { this.data = 2; }, 500);\n  }\n}\n\n\n@Component({selector: 'live-data', inputs: ['live'], template: 'Data: {{dataProvider.data}}'})\nclass LiveData {\n  constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n\n  set live(value: boolean) {\n    if (value) {\n      this.ref.reattach();\n    } else {\n      this.ref.detach();\n    }\n  }\n}\n\n@Component({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n       Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n       <live-data [live]=\"live\"><live-data>\n     `,\n})\n\nclass App1 {\n  live = true;\n}\n// #enddocregion reattach\n"]}