{"version":3,"file":"content_children_example.js","sourceRoot":"","sources":["../../../../../../packages/examples/core/di/ts/contentChildren/content_children_example.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;;;;AAEH,uBAAuB;AACvB,wCAAsF;AAGtF,IAAa,IAAI,GAAjB;CAGC,CAAA;AADU;IAAR,YAAK,EAAE;;gCAAc;AAFX,IAAI;IADhB,gBAAS,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC;GACjB,IAAI,CAGhB;AAHY,oBAAI;AAYjB,IAAa,GAAG,GAAhB;IAME,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChF,CAAC;IACD,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9F,CAAC;CACF,CAAA;AAVwB;IAAtB,sBAAe,CAAC,IAAI,CAAC;8BAAkB,gBAAS;0CAAO;AAEZ;IAA3C,sBAAe,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC;8BAAyB,gBAAS;iDAAO;AAJzE,GAAG;IAPf,gBAAS,CAAC;QACT,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;;;GAGT;KACF,CAAC;GACW,GAAG,CAYf;AAZY,kBAAG;AA+BhB,IAAa,mBAAmB,GAAhC;IAjBA;QAkBE,eAAU,GAAG,KAAK,CAAC;IAGrB,CAAC;IADC,IAAI,KAAK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;CACnC,CAAA;AAJY,mBAAmB;IAjB/B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE;;;;;;;;;;;;;GAaT;KACF,CAAC;GACW,mBAAmB,CAI/B;AAJY,kDAAmB;AAKhC,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// #docregion Component\nimport {Component, ContentChildren, Directive, Input, QueryList} from '@angular/core';\n\n@Directive({selector: 'pane'})\nexport class Pane {\n  // TODO(issue/24571): remove '!'.\n  @Input() id !: string;\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    <div class=\"top-level\">Top level panes: {{serializedPanes}}</div> \n    <div class=\"nested\">Arbitrary nested panes: {{serializedNestedPanes}}</div>\n  `\n})\nexport class Tab {\n  // TODO(issue/24571): remove '!'.\n  @ContentChildren(Pane) topLevelPanes !: QueryList<Pane>;\n  // TODO(issue/24571): remove '!'.\n  @ContentChildren(Pane, {descendants: true}) arbitraryNestedPanes !: QueryList<Pane>;\n\n  get serializedPanes(): string {\n    return this.topLevelPanes ? this.topLevelPanes.map(p => p.id).join(', ') : '';\n  }\n  get serializedNestedPanes(): string {\n    return this.arbitraryNestedPanes ? this.arbitraryNestedPanes.map(p => p.id).join(', ') : '';\n  }\n}\n\n@Component({\n  selector: 'example-app',\n  template: `\n    <tab>\n      <pane id=\"1\"></pane>\n      <pane id=\"2\"></pane>\n      <pane id=\"3\" *ngIf=\"shouldShow\">\n        <tab>\n          <pane id=\"3_1\"></pane>\n          <pane id=\"3_2\"></pane>\n        </tab>\n      </pane>\n    </tab>\n    \n    <button (click)=\"show()\">Show 3</button>\n  `,\n})\nexport class ContentChildrenComp {\n  shouldShow = false;\n\n  show() { this.shouldShow = true; }\n}\n// #enddocregion\n"]}