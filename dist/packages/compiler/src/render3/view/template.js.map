{"version":3,"file":"template.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/render3/view/template.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {flatten, sanitizeIdentifier} from '../../compile_metadata';\nimport {CompileReflector} from '../../compile_reflector';\nimport {BindingForm, BuiltinFunctionCall, LocalResolver, convertActionBinding, convertPropertyBinding} from '../../compiler_util/expression_converter';\nimport {ConstantPool} from '../../constant_pool';\nimport * as core from '../../core';\nimport {AST, AstMemoryEfficientTransformer, BindingPipe, BindingType, FunctionCall, ImplicitReceiver, Interpolation, LiteralArray, LiteralMap, LiteralPrimitive, PropertyRead} from '../../expression_parser/ast';\nimport {Lexer} from '../../expression_parser/lexer';\nimport {Parser} from '../../expression_parser/parser';\nimport * as html from '../../ml_parser/ast';\nimport {HtmlParser} from '../../ml_parser/html_parser';\nimport {WhitespaceVisitor} from '../../ml_parser/html_whitespaces';\nimport {DEFAULT_INTERPOLATION_CONFIG} from '../../ml_parser/interpolation_config';\nimport {splitNsName} from '../../ml_parser/tags';\nimport * as o from '../../output/output_ast';\nimport {ParseError, ParseSourceSpan} from '../../parse_util';\nimport {DomElementSchemaRegistry} from '../../schema/dom_element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {OutputContext, error} from '../../util';\nimport * as t from '../r3_ast';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {htmlAstToRender3Ast} from '../r3_template_transform';\n\nimport {R3QueryMetadata} from './api';\nimport {parseStyle} from './styling';\nimport {CONTEXT_NAME, I18N_ATTR, I18N_ATTR_PREFIX, ID_SEPARATOR, IMPLICIT_REFERENCE, MEANING_SEPARATOR, REFERENCE_PREFIX, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, getQueryPredicate, invalid, mapToExpression, noop, temporaryAllocator, trimTrailingNulls, unsupported} from './util';\n\nfunction mapBindingToInstruction(type: BindingType): o.ExternalReference|undefined {\n  switch (type) {\n    case BindingType.Property:\n      return R3.elementProperty;\n    case BindingType.Attribute:\n      return R3.elementAttribute;\n    case BindingType.Class:\n      return R3.elementClassProp;\n    default:\n      return undefined;\n  }\n}\n\n//  if (rf & flags) { .. }\nexport function renderFlagCheckIfStmt(\n    flags: core.RenderFlags, statements: o.Statement[]): o.IfStmt {\n  return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null, false), statements);\n}\n\nexport class TemplateDefinitionBuilder implements t.Visitor<void>, LocalResolver {\n  private _dataIndex = 0;\n  private _bindingContext = 0;\n  private _prefixCode: o.Statement[] = [];\n  private _creationCode: o.Statement[] = [];\n  private _variableCode: o.Statement[] = [];\n  private _bindingCode: o.Statement[] = [];\n  private _postfixCode: o.Statement[] = [];\n  private _valueConverter: ValueConverter;\n  private _unsupported = unsupported;\n  private _bindingScope: BindingScope;\n\n  // Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)\n  private _inI18nSection: boolean = false;\n  private _i18nSectionIndex = -1;\n  // Maps of placeholder to node indexes for each of the i18n section\n  private _phToNodeIdxes: {[phName: string]: number[]}[] = [{}];\n\n  // Number of slots to reserve for pureFunctions\n  private _pureFunctionSlots = 0;\n\n  constructor(\n      private constantPool: ConstantPool, private contextParameter: string,\n      parentBindingScope: BindingScope, private level = 0, private contextName: string|null,\n      private templateName: string|null, private viewQueries: R3QueryMetadata[],\n      private directiveMatcher: SelectorMatcher|null, private directives: Set<o.Expression>,\n      private pipeTypeByName: Map<string, o.Expression>, private pipes: Set<o.Expression>,\n      private _namespace: o.ExternalReference) {\n    // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n    // function)\n    this._dataIndex = viewQueries.length;\n    this._bindingScope =\n        parentBindingScope.nestedScope((lhsVar: o.ReadVarExpr, expression: o.Expression) => {\n          this._bindingCode.push(\n              lhsVar.set(expression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        });\n    this._valueConverter = new ValueConverter(\n        constantPool, () => this.allocateDataSlot(),\n        (numSlots: number): number => this._pureFunctionSlots += numSlots,\n        (name, localName, slot, value: o.ReadVarExpr) => {\n          const pipeType = pipeTypeByName.get(name);\n          if (pipeType) {\n            this.pipes.add(pipeType);\n          }\n          this._bindingScope.set(localName, value);\n          this._creationCode.push(\n              o.importExpr(R3.pipe).callFn([o.literal(slot), o.literal(name)]).toStmt());\n        });\n  }\n\n  buildTemplateFunction(\n      nodes: t.Node[], variables: t.Variable[], hasNgContent: boolean = false,\n      ngContentSelectors: string[] = []): o.FunctionExpr {\n    if (this._namespace !== R3.namespaceHTML) {\n      this.instruction(this._creationCode, null, this._namespace);\n    }\n\n    // Create variable bindings\n    for (const variable of variables) {\n      const variableName = variable.name;\n      const expression =\n          o.variable(this.contextParameter).prop(variable.value || IMPLICIT_REFERENCE);\n      const scopedName = this._bindingScope.freshReferenceName();\n      // Add the reference to the local scope.\n      this._bindingScope.set(variableName, o.variable(variableName + scopedName), expression);\n    }\n\n    // Output a `ProjectionDef` instruction when some `<ng-content>` are present\n    if (hasNgContent) {\n      const parameters: o.Expression[] = [];\n\n      // Only selectors with a non-default value are generated\n      if (ngContentSelectors.length > 1) {\n        const r3Selectors = ngContentSelectors.map(s => core.parseSelectorToR3Selector(s));\n        // `projectionDef` needs both the parsed and raw value of the selectors\n        const parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n        const unParsed = this.constantPool.getConstLiteral(asLiteral(ngContentSelectors), true);\n        parameters.push(parsed, unParsed);\n      }\n\n      this.instruction(this._creationCode, null, R3.projectionDef, ...parameters);\n    }\n\n    t.visitAll(this, nodes);\n\n    if (this._pureFunctionSlots > 0) {\n      this.instruction(\n          this._creationCode, null, R3.reserveSlots, o.literal(this._pureFunctionSlots));\n    }\n\n    const creationCode = this._creationCode.length > 0 ?\n        [renderFlagCheckIfStmt(core.RenderFlags.Create, this._creationCode)] :\n        [];\n\n    const updateCode = this._bindingCode.length > 0 ?\n        [renderFlagCheckIfStmt(core.RenderFlags.Update, this._bindingCode)] :\n        [];\n\n    // Generate maps of placeholder name to node indexes\n    // TODO(vicb): This is a WIP, not fully supported yet\n    for (const phToNodeIdx of this._phToNodeIdxes) {\n      if (Object.keys(phToNodeIdx).length > 0) {\n        const scopedName = this._bindingScope.freshReferenceName();\n        const phMap = o.variable(scopedName)\n                          .set(mapToExpression(phToNodeIdx, true))\n                          .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n\n        this._prefixCode.push(phMap);\n      }\n    }\n\n    return o.fn(\n        [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(this.contextParameter, null)],\n        [\n          // Temporary variable declarations for query refresh (i.e. let _t: any;)\n          ...this._prefixCode,\n          // Creating mode (i.e. if (rf & RenderFlags.Create) { ... })\n          ...creationCode,\n          // Temporary variable declarations for local refs (i.e. const tmp = ld(1) as any)\n          ...this._variableCode,\n          // Binding and refresh mode (i.e. if (rf & RenderFlags.Update) {...})\n          ...updateCode,\n          // Nested templates (i.e. function CompTemplate() {})\n          ...this._postfixCode\n        ],\n        o.INFERRED_TYPE, null, this.templateName);\n  }\n\n  // LocalResolver\n  getLocal(name: string): o.Expression|null { return this._bindingScope.get(name); }\n\n  visitContent(ngContent: t.Content) {\n    const slot = this.allocateDataSlot();\n    const selectorIndex = ngContent.selectorIndex;\n    const parameters: o.Expression[] = [o.literal(slot)];\n\n    const attributeAsList: string[] = [];\n\n    ngContent.attributes.forEach((attribute) => {\n      const name = attribute.name;\n      if (name !== 'select') {\n        attributeAsList.push(name, attribute.value);\n      }\n    });\n\n    if (attributeAsList.length > 0) {\n      parameters.push(o.literal(selectorIndex), asLiteral(attributeAsList));\n    } else if (selectorIndex !== 0) {\n      parameters.push(o.literal(selectorIndex));\n    }\n\n    this.instruction(this._creationCode, ngContent.sourceSpan, R3.projection, ...parameters);\n  }\n\n\n  getNamespaceInstruction(namespaceKey: string|null) {\n    switch (namespaceKey) {\n      case 'math':\n        return R3.namespaceMathML;\n      case 'svg':\n        return R3.namespaceSVG;\n      default:\n        return R3.namespaceHTML;\n    }\n  }\n\n  addNamespaceInstruction(nsInstruction: o.ExternalReference, element: t.Element) {\n    this._namespace = nsInstruction;\n    this.instruction(this._creationCode, element.sourceSpan, nsInstruction);\n  }\n\n  visitElement(element: t.Element) {\n    const elementIndex = this.allocateDataSlot();\n    const referenceDataSlots = new Map<string, number>();\n    const wasInI18nSection = this._inI18nSection;\n\n    const outputAttrs: {[name: string]: string} = {};\n    const attrI18nMetas: {[name: string]: string} = {};\n    let i18nMeta: string = '';\n\n    const [namespaceKey, elementName] = splitNsName(element.name);\n\n    // Elements inside i18n sections are replaced with placeholders\n    // TODO(vicb): nested elements are a WIP in this phase\n    if (this._inI18nSection) {\n      const phName = element.name.toLowerCase();\n      if (!this._phToNodeIdxes[this._i18nSectionIndex][phName]) {\n        this._phToNodeIdxes[this._i18nSectionIndex][phName] = [];\n      }\n      this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);\n    }\n\n    // Handle i18n attributes\n    for (const attr of element.attributes) {\n      const name = attr.name;\n      const value = attr.value;\n      if (name === I18N_ATTR) {\n        if (this._inI18nSection) {\n          throw new Error(\n              `Could not mark an element as translatable inside of a translatable section`);\n        }\n        this._inI18nSection = true;\n        this._i18nSectionIndex++;\n        this._phToNodeIdxes[this._i18nSectionIndex] = {};\n        i18nMeta = value;\n      } else if (name.startsWith(I18N_ATTR_PREFIX)) {\n        attrI18nMetas[name.slice(I18N_ATTR_PREFIX.length)] = value;\n      } else {\n        outputAttrs[name] = value;\n      }\n    }\n\n    // Match directives on non i18n attributes\n    if (this.directiveMatcher) {\n      const selector = createCssSelector(element.name, outputAttrs);\n      this.directiveMatcher.match(\n          selector, (sel: CssSelector, staticType: any) => { this.directives.add(staticType); });\n    }\n\n    // Element creation mode\n    const parameters: o.Expression[] = [\n      o.literal(elementIndex),\n      o.literal(elementName),\n    ];\n\n    // Add the attributes\n    const i18nMessages: o.Statement[] = [];\n    const attributes: o.Expression[] = [];\n    const initialStyleDeclarations: o.Expression[] = [];\n    const initialClassDeclarations: o.Expression[] = [];\n\n    const styleInputs: t.BoundAttribute[] = [];\n    const classInputs: t.BoundAttribute[] = [];\n    const allOtherInputs: t.BoundAttribute[] = [];\n\n    element.inputs.forEach((input: t.BoundAttribute) => {\n      switch (input.type) {\n        // [attr.style] or [attr.class] should not be treated as styling-based\n        // bindings since they are intended to be written directly to the attr\n        // and therefore will skip all style/class resolution that is present\n        // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n        // [class.prop]=\"\". [class]=\"\" assignments\n        case BindingType.Property:\n          if (input.name == 'style') {\n            // this should always go first in the compilation (for [style])\n            styleInputs.splice(0, 0, input);\n          } else if (isClassBinding(input)) {\n            // this should always go first in the compilation (for [class])\n            classInputs.splice(0, 0, input);\n          } else {\n            allOtherInputs.push(input);\n          }\n          break;\n        case BindingType.Style:\n          styleInputs.push(input);\n          break;\n        case BindingType.Class:\n          classInputs.push(input);\n          break;\n        default:\n          allOtherInputs.push(input);\n          break;\n      }\n    });\n\n    let currStyleIndex = 0;\n    let currClassIndex = 0;\n    let staticStylesMap: {[key: string]: any}|null = null;\n    let staticClassesMap: {[key: string]: boolean}|null = null;\n    const stylesIndexMap: {[key: string]: number} = {};\n    const classesIndexMap: {[key: string]: number} = {};\n    Object.getOwnPropertyNames(outputAttrs).forEach(name => {\n      const value = outputAttrs[name];\n      if (name == 'style') {\n        staticStylesMap = parseStyle(value);\n        Object.keys(staticStylesMap).forEach(prop => { stylesIndexMap[prop] = currStyleIndex++; });\n      } else if (name == 'class') {\n        staticClassesMap = {};\n        value.split(/\\s+/g).forEach(className => {\n          classesIndexMap[className] = currClassIndex++;\n          staticClassesMap ![className] = true;\n        });\n      } else {\n        attributes.push(o.literal(name));\n        if (attrI18nMetas.hasOwnProperty(name)) {\n          const meta = parseI18nMeta(attrI18nMetas[name]);\n          const variable = this.constantPool.getTranslation(value, meta);\n          attributes.push(variable);\n        } else {\n          attributes.push(o.literal(value));\n        }\n      }\n    });\n\n    let hasMapBasedStyling = false;\n    for (let i = 0; i < styleInputs.length; i++) {\n      const input = styleInputs[i];\n      const isMapBasedStyleBinding = i === 0 && input.name === 'style';\n      if (isMapBasedStyleBinding) {\n        hasMapBasedStyling = true;\n      } else if (!stylesIndexMap.hasOwnProperty(input.name)) {\n        stylesIndexMap[input.name] = currStyleIndex++;\n      }\n    }\n\n    for (let i = 0; i < classInputs.length; i++) {\n      const input = classInputs[i];\n      const isMapBasedClassBinding = i === 0 && isClassBinding(input);\n      if (!isMapBasedClassBinding && !stylesIndexMap.hasOwnProperty(input.name)) {\n        classesIndexMap[input.name] = currClassIndex++;\n      }\n    }\n\n    // in the event that a [style] binding is used then sanitization will\n    // always be imported because it is not possible to know ahead of time\n    // whether style bindings will use or not use any sanitizable properties\n    // that isStyleSanitizable() will detect\n    let useDefaultStyleSanitizer = hasMapBasedStyling;\n\n    // this will build the instructions so that they fall into the following syntax\n    // => [prop1, prop2, prop3, 0, prop1, value1, prop2, value2]\n    Object.keys(stylesIndexMap).forEach(prop => {\n      useDefaultStyleSanitizer = useDefaultStyleSanitizer || isStyleSanitizable(prop);\n      initialStyleDeclarations.push(o.literal(prop));\n    });\n\n    if (staticStylesMap) {\n      initialStyleDeclarations.push(o.literal(core.InitialStylingFlags.VALUES_MODE));\n\n      Object.keys(staticStylesMap).forEach(prop => {\n        initialStyleDeclarations.push(o.literal(prop));\n        const value = staticStylesMap ![prop];\n        initialStyleDeclarations.push(o.literal(value));\n      });\n    }\n\n    Object.keys(classesIndexMap).forEach(prop => {\n      initialClassDeclarations.push(o.literal(prop));\n    });\n\n    if (staticClassesMap) {\n      initialClassDeclarations.push(o.literal(core.InitialStylingFlags.VALUES_MODE));\n\n      Object.keys(staticClassesMap).forEach(className => {\n        initialClassDeclarations.push(o.literal(className));\n        initialClassDeclarations.push(o.literal(true));\n      });\n    }\n\n    const hasStylingInstructions = initialStyleDeclarations.length || styleInputs.length ||\n        initialClassDeclarations.length || classInputs.length;\n\n    const attrArg: o.Expression = attributes.length > 0 ?\n        this.constantPool.getConstLiteral(o.literalArr(attributes), true) :\n        o.TYPED_NULL_EXPR;\n    parameters.push(attrArg);\n\n    if (element.references && element.references.length > 0) {\n      const references = flatten(element.references.map(reference => {\n        const slot = this.allocateDataSlot();\n        referenceDataSlots.set(reference.name, slot);\n        // Generate the update temporary.\n        const variableName = this._bindingScope.freshReferenceName();\n        this._variableCode.push(o.variable(variableName, o.INFERRED_TYPE)\n                                    .set(o.importExpr(R3.load).callFn([o.literal(slot)]))\n                                    .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        this._bindingScope.set(reference.name, o.variable(variableName));\n        return [reference.name, reference.value];\n      }));\n      parameters.push(this.constantPool.getConstLiteral(asLiteral(references), true));\n    } else {\n      parameters.push(o.TYPED_NULL_EXPR);\n    }\n\n    // Generate the instruction create element instruction\n    if (i18nMessages.length > 0) {\n      this._creationCode.push(...i18nMessages);\n    }\n\n    const wasInNamespace = this._namespace;\n    const currentNamespace = this.getNamespaceInstruction(namespaceKey);\n\n    // If the namespace is changing now, include an instruction to change it\n    // during element creation.\n    if (currentNamespace !== wasInNamespace) {\n      this.addNamespaceInstruction(currentNamespace, element);\n    }\n\n    const implicit = o.variable(CONTEXT_NAME);\n\n    const createSelfClosingInstruction =\n        !hasStylingInstructions && element.children.length === 0 && element.outputs.length === 0;\n\n    if (createSelfClosingInstruction) {\n      this.instruction(\n          this._creationCode, element.sourceSpan, R3.element, ...trimTrailingNulls(parameters));\n    } else {\n      // Generate the instruction create element instruction\n      if (i18nMessages.length > 0) {\n        this._creationCode.push(...i18nMessages);\n      }\n      this.instruction(\n          this._creationCode, element.sourceSpan, R3.elementStart,\n          ...trimTrailingNulls(parameters));\n\n      // initial styling for static style=\"...\" attributes\n      if (hasStylingInstructions) {\n        const paramsList: (o.Expression)[] = [];\n\n        if (initialClassDeclarations.length) {\n          // the template compiler handles initial class styling (e.g. class=\"foo\") values\n          // in a special command called `elementClass` so that the initial class\n          // can be processed during runtime. These initial class values are bound to\n          // a constant because the inital class values do not change (since they're static).\n          paramsList.push(\n              this.constantPool.getConstLiteral(o.literalArr(initialClassDeclarations), true));\n        } else if (initialStyleDeclarations.length || useDefaultStyleSanitizer) {\n          // no point in having an extra `null` value unless there are follow-up params\n          paramsList.push(o.NULL_EXPR);\n        }\n\n        if (initialStyleDeclarations.length) {\n          // the template compiler handles initial style (e.g. style=\"foo\") values\n          // in a special command called `elementStyle` so that the initial styles\n          // can be processed during runtime. These initial styles values are bound to\n          // a constant because the inital style values do not change (since they're static).\n          paramsList.push(\n              this.constantPool.getConstLiteral(o.literalArr(initialStyleDeclarations), true));\n        } else if (useDefaultStyleSanitizer) {\n          // no point in having an extra `null` value unless there are follow-up params\n          paramsList.push(o.NULL_EXPR);\n        }\n\n\n        if (useDefaultStyleSanitizer) {\n          paramsList.push(o.importExpr(R3.defaultStyleSanitizer));\n        }\n\n        this._creationCode.push(o.importExpr(R3.elementStyling).callFn(paramsList).toStmt());\n      }\n\n      // Generate Listeners (outputs)\n      element.outputs.forEach((outputAst: t.BoundEvent) => {\n        const elName = sanitizeIdentifier(element.name);\n        const evName = sanitizeIdentifier(outputAst.name);\n        const functionName = `${this.templateName}_${elName}_${evName}_listener`;\n        const localVars: o.Statement[] = [];\n        const bindingScope =\n            this._bindingScope.nestedScope((lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => {\n              localVars.push(\n                  lhsVar.set(rhsExpression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            });\n        const bindingExpr = convertActionBinding(\n            bindingScope, implicit, outputAst.handler, 'b',\n            () => error('Unexpected interpolation'));\n        const handler = o.fn(\n            [new o.FnParam('$event', o.DYNAMIC_TYPE)], [...localVars, ...bindingExpr.render3Stmts],\n            o.INFERRED_TYPE, null, functionName);\n        this.instruction(\n            this._creationCode, outputAst.sourceSpan, R3.listener, o.literal(outputAst.name),\n            handler);\n      });\n    }\n\n    if ((styleInputs.length || classInputs.length) && hasStylingInstructions) {\n      const indexLiteral = o.literal(elementIndex);\n\n      const firstStyle = styleInputs[0];\n      const mapBasedStyleInput = firstStyle && firstStyle.name == 'style' ? firstStyle : null;\n\n      const firstClass = classInputs[0];\n      const mapBasedClassInput = firstClass && isClassBinding(firstClass) ? firstClass : null;\n\n      const stylingInput = mapBasedStyleInput || mapBasedClassInput;\n      if (stylingInput) {\n        const params: o.Expression[] = [];\n        if (mapBasedClassInput) {\n          params.push(this.convertPropertyBinding(implicit, mapBasedClassInput.value, true));\n        } else if (mapBasedStyleInput) {\n          params.push(o.NULL_EXPR);\n        }\n        if (mapBasedStyleInput) {\n          params.push(this.convertPropertyBinding(implicit, mapBasedStyleInput.value, true));\n        }\n        this.instruction(\n            this._bindingCode, stylingInput.sourceSpan, R3.elementStylingMap, indexLiteral,\n            ...params);\n      }\n\n      let lastInputCommand: t.BoundAttribute|null = null;\n      if (styleInputs.length) {\n        let i = mapBasedStyleInput ? 1 : 0;\n        for (i; i < styleInputs.length; i++) {\n          const input = styleInputs[i];\n          const convertedBinding = this.convertPropertyBinding(implicit, input.value, true);\n          const params = [convertedBinding];\n          const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n          if (sanitizationRef) {\n            params.push(sanitizationRef);\n          }\n\n          const key = input.name;\n          const styleIndex: number = stylesIndexMap[key] !;\n          this.instruction(\n              this._bindingCode, input.sourceSpan, R3.elementStyleProp, indexLiteral,\n              o.literal(styleIndex), ...params);\n        }\n\n        lastInputCommand = styleInputs[styleInputs.length - 1];\n      }\n\n      if (classInputs.length) {\n        let i = mapBasedClassInput ? 1 : 0;\n        for (i; i < classInputs.length; i++) {\n          const input = classInputs[i];\n          const convertedBinding = this.convertPropertyBinding(implicit, input.value, true);\n          const params = [convertedBinding];\n          const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n          if (sanitizationRef) {\n            params.push(sanitizationRef);\n          }\n\n          const key = input.name;\n          const classIndex: number = classesIndexMap[key] !;\n          this.instruction(\n              this._bindingCode, input.sourceSpan, R3.elementClassProp, indexLiteral,\n              o.literal(classIndex), ...params);\n        }\n\n        lastInputCommand = classInputs[classInputs.length - 1];\n      }\n\n      this.instruction(\n          this._bindingCode, lastInputCommand !.sourceSpan, R3.elementStylingApply, indexLiteral);\n    }\n\n    // Generate element input bindings\n    allOtherInputs.forEach((input: t.BoundAttribute) => {\n      if (input.type === BindingType.Animation) {\n        console.error('warning: animation bindings not yet supported');\n        return;\n      }\n\n      const convertedBinding = this.convertPropertyBinding(implicit, input.value);\n\n      const instruction = mapBindingToInstruction(input.type);\n      if (instruction) {\n        const params = [convertedBinding];\n        const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n        if (sanitizationRef) {\n          params.push(sanitizationRef);\n        }\n\n        // TODO(chuckj): runtime: security context?\n        this.instruction(\n            this._bindingCode, input.sourceSpan, instruction, o.literal(elementIndex),\n            o.literal(input.name), ...params);\n      } else {\n        this._unsupported(`binding type ${input.type}`);\n      }\n    });\n\n    // Traverse element child nodes\n    if (this._inI18nSection && element.children.length == 1 &&\n        element.children[0] instanceof t.Text) {\n      const text = element.children[0] as t.Text;\n      this.visitSingleI18nTextChild(text, i18nMeta);\n    } else {\n      t.visitAll(this, element.children);\n    }\n\n    if (!createSelfClosingInstruction) {\n      // Finish element construction mode.\n      this.instruction(\n          this._creationCode, element.endSourceSpan || element.sourceSpan, R3.elementEnd);\n    }\n\n    // Restore the state before exiting this node\n    this._inI18nSection = wasInI18nSection;\n  }\n\n  visitTemplate(template: t.Template) {\n    const templateIndex = this.allocateDataSlot();\n\n    let elName = '';\n    if (template.children.length === 1 && template.children[0] instanceof t.Element) {\n      // When the template as a single child, derive the context name from the tag\n      elName = sanitizeIdentifier((template.children[0] as t.Element).name);\n    }\n\n    const contextName = elName ? `${this.contextName}_${elName}` : '';\n\n    const templateName =\n        contextName ? `${contextName}_Template_${templateIndex}` : `Template_${templateIndex}`;\n\n    const templateContext = `ctx${this.level}`;\n\n    const parameters: o.Expression[] = [\n      o.literal(templateIndex),\n      o.variable(templateName),\n      o.TYPED_NULL_EXPR,\n    ];\n\n    const attributeNames: o.Expression[] = [];\n    const attributeMap: {[name: string]: string} = {};\n\n    template.attributes.forEach(a => {\n      attributeNames.push(asLiteral(a.name), asLiteral(''));\n      attributeMap[a.name] = a.value;\n    });\n\n    // Match directives on template attributes\n    if (this.directiveMatcher) {\n      const selector = createCssSelector('ng-template', attributeMap);\n      this.directiveMatcher.match(\n          selector, (cssSelector, staticType) => { this.directives.add(staticType); });\n    }\n\n    if (attributeNames.length) {\n      parameters.push(this.constantPool.getConstLiteral(o.literalArr(attributeNames), true));\n    }\n\n    // e.g. C(1, C1Template)\n    this.instruction(\n        this._creationCode, template.sourceSpan, R3.containerCreate,\n        ...trimTrailingNulls(parameters));\n\n    // e.g. p(1, 'forOf', ɵb(ctx.items));\n    const context = o.variable(CONTEXT_NAME);\n    template.inputs.forEach(input => {\n      const convertedBinding = this.convertPropertyBinding(context, input.value);\n      this.instruction(\n          this._bindingCode, template.sourceSpan, R3.elementProperty, o.literal(templateIndex),\n          o.literal(input.name), convertedBinding);\n    });\n\n    // Create the template function\n    const templateVisitor = new TemplateDefinitionBuilder(\n        this.constantPool, templateContext, this._bindingScope, this.level + 1, contextName,\n        templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes,\n        this._namespace);\n    const templateFunctionExpr =\n        templateVisitor.buildTemplateFunction(template.children, template.variables);\n    this._postfixCode.push(templateFunctionExpr.toDeclStmt(templateName, null));\n  }\n\n  // These should be handled in the template or element directly.\n  readonly visitReference = invalid;\n  readonly visitVariable = invalid;\n  readonly visitTextAttribute = invalid;\n  readonly visitBoundAttribute = invalid;\n  readonly visitBoundEvent = invalid;\n\n  visitBoundText(text: t.BoundText) {\n    const nodeIndex = this.allocateDataSlot();\n\n    this.instruction(this._creationCode, text.sourceSpan, R3.text, o.literal(nodeIndex));\n\n    this.instruction(\n        this._bindingCode, text.sourceSpan, R3.textBinding, o.literal(nodeIndex),\n        this.convertPropertyBinding(o.variable(CONTEXT_NAME), text.value));\n  }\n\n  visitText(text: t.Text) {\n    this.instruction(\n        this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()),\n        o.literal(text.value));\n  }\n\n  // When the content of the element is a single text node the translation can be inlined:\n  //\n  // `<p i18n=\"desc|mean\">some content</p>`\n  // compiles to\n  // ```\n  // /**\n  // * @desc desc\n  // * @meaning mean\n  // */\n  // const MSG_XYZ = goog.getMsg('some content');\n  // i0.ɵT(1, MSG_XYZ);\n  // ```\n  visitSingleI18nTextChild(text: t.Text, i18nMeta: string) {\n    const meta = parseI18nMeta(i18nMeta);\n    const variable = this.constantPool.getTranslation(text.value, meta);\n    this.instruction(\n        this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()), variable);\n  }\n\n  private allocateDataSlot() { return this._dataIndex++; }\n  private bindingContext() { return `${this._bindingContext++}`; }\n\n  private instruction(\n      statements: o.Statement[], span: ParseSourceSpan|null, reference: o.ExternalReference,\n      ...params: o.Expression[]) {\n    statements.push(o.importExpr(reference, null, span).callFn(params, span).toStmt());\n  }\n\n  private convertPropertyBinding(implicit: o.Expression, value: AST, skipBindFn?: boolean):\n      o.Expression {\n    const pipesConvertedValue = value.visit(this._valueConverter);\n    if (pipesConvertedValue instanceof Interpolation) {\n      const convertedPropertyBinding = convertPropertyBinding(\n          this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple,\n          interpolate);\n      this._bindingCode.push(...convertedPropertyBinding.stmts);\n      return convertedPropertyBinding.currValExpr;\n    } else {\n      const convertedPropertyBinding = convertPropertyBinding(\n          this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple,\n          () => error('Unexpected interpolation'));\n      this._bindingCode.push(...convertedPropertyBinding.stmts);\n      const valExpr = convertedPropertyBinding.currValExpr;\n      return skipBindFn ? valExpr : o.importExpr(R3.bind).callFn([valExpr]);\n    }\n  }\n}\n\nclass ValueConverter extends AstMemoryEfficientTransformer {\n  constructor(\n      private constantPool: ConstantPool, private allocateSlot: () => number,\n      private allocatePureFunctionSlots: (numSlots: number) => number,\n      private definePipe:\n          (name: string, localName: string, slot: number, value: o.Expression) => void) {\n    super();\n  }\n\n  // AstMemoryEfficientTransformer\n  visitPipe(pipe: BindingPipe, context: any): AST {\n    // Allocate a slot to create the pipe\n    const slot = this.allocateSlot();\n    const slotPseudoLocal = `PIPE:${slot}`;\n    // Allocate one slot for the result plus one slot per pipe argument\n    const pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n    const target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n    const {identifier, isVarLength} = pipeBindingCallInfo(pipe.args);\n    this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(identifier));\n    const args: AST[] = [pipe.exp, ...pipe.args];\n    const convertedArgs: AST[] =\n        isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n\n    return new FunctionCall(pipe.span, target, [\n      new LiteralPrimitive(pipe.span, slot),\n      new LiteralPrimitive(pipe.span, pureFunctionSlot),\n      ...convertedArgs,\n    ]);\n  }\n\n  visitLiteralArray(array: LiteralArray, context: any): AST {\n    return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), values => {\n      // If the literal has calculated (non-literal) elements transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalArr(values);\n      return values.every(a => a.isConstant()) ?\n          this.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n    });\n  }\n\n  visitLiteralMap(map: LiteralMap, context: any): AST {\n    return new BuiltinFunctionCall(map.span, this.visitAll(map.values), values => {\n      // If the literal has calculated (non-literal) elements  transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalMap(values.map(\n          (value, index) => ({key: map.keys[index].key, value, quoted: map.keys[index].quoted})));\n      return values.every(a => a.isConstant()) ?\n          this.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n    });\n  }\n}\n\n// Pipes always have at least one parameter, the value they operate on\nconst pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\n\nfunction pipeBindingCallInfo(args: o.Expression[]) {\n  const identifier = pipeBindingIdentifiers[args.length];\n  return {\n    identifier: identifier || R3.pipeBindV,\n    isVarLength: !identifier,\n  };\n}\n\nconst pureFunctionIdentifiers = [\n  R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n  R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\n\nfunction pureFunctionCallInfo(args: o.Expression[]) {\n  const identifier = pureFunctionIdentifiers[args.length];\n  return {\n    identifier: identifier || R3.pureFunctionV,\n    isVarLength: !identifier,\n  };\n}\n\nfunction getLiteralFactory(\n    constantPool: ConstantPool, literal: o.LiteralArrayExpr | o.LiteralMapExpr,\n    allocateSlots: (numSlots: number) => number): o.Expression {\n  const {literalFactory, literalFactoryArguments} = constantPool.getLiteralFactory(literal);\n  // Allocate 1 slot for the result plus 1 per argument\n  const startSlot = allocateSlots(1 + literalFactoryArguments.length);\n  literalFactoryArguments.length > 0 || error(`Expected arguments to a literal factory function`);\n  const {identifier, isVarLength} = pureFunctionCallInfo(literalFactoryArguments);\n\n  // Literal factories are pure functions that only need to be re-invoked when the parameters\n  // change.\n  const args = [\n    o.literal(startSlot),\n    literalFactory,\n  ];\n\n  if (isVarLength) {\n    args.push(o.literalArr(literalFactoryArguments));\n  } else {\n    args.push(...literalFactoryArguments);\n  }\n\n  return o.importExpr(identifier).callFn(args);\n}\n\n/**\n * Function which is executed whenever a variable is referenced for the first time in a given\n * scope.\n *\n * It is expected that the function creates the `const localName = expression`; statement.\n */\nexport type DeclareLocalVarCallback = (lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => void;\n\nexport class BindingScope implements LocalResolver {\n  /**\n   * Keeps a map from local variables to their expressions.\n   *\n   * This is used when one refers to variable such as: 'let abc = a.b.c`.\n   * - key to the map is the string literal `\"abc\"`.\n   * - value `lhs` is the left hand side which is an AST representing `abc`.\n   * - value `rhs` is the right hand side which is an AST representing `a.b.c`.\n   * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope\n   * already.\n   */\n  private map = new Map < string, {\n    lhs: o.ReadVarExpr;\n    rhs: o.Expression|undefined;\n    declared: boolean;\n  }\n  > ();\n\n  private referenceNameIndex = 0;\n  private static _ROOT_SCOPE: BindingScope;\n\n  static get ROOT_SCOPE(): BindingScope {\n    if (!BindingScope._ROOT_SCOPE) {\n      BindingScope._ROOT_SCOPE = new BindingScope().set('$event', o.variable('$event'));\n    }\n    return BindingScope._ROOT_SCOPE;\n  }\n\n  private constructor(\n      private parent: BindingScope|null = null,\n      private declareLocalVarCallback: DeclareLocalVarCallback = noop) {}\n\n  get(name: string): o.Expression|null {\n    let current: BindingScope|null = this;\n    while (current) {\n      let value = current.map.get(name);\n      if (value != null) {\n        if (current !== this) {\n          // make a local copy and reset the `declared` state.\n          value = {lhs: value.lhs, rhs: value.rhs, declared: false};\n          // Cache the value locally.\n          this.map.set(name, value);\n        }\n        if (value.rhs && !value.declared) {\n          // if it is first time we are referencing the variable in the scope\n          // than invoke the callback to insert variable declaration.\n          this.declareLocalVarCallback(value.lhs, value.rhs);\n          value.declared = true;\n        }\n        return value.lhs;\n      }\n      current = current.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Create a local variable for later reference.\n   *\n   * @param name Name of the variable.\n   * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n   * @param rhs AST representing the right hand side of the `let lhs = rhs;`. The `rhs` can be\n   * `undefined` for variable that are ambient such as `$event` and which don't have `rhs`\n   * declaration.\n   */\n  set(name: string, lhs: o.ReadVarExpr, rhs?: o.Expression): BindingScope {\n    !this.map.has(name) ||\n        error(`The name ${name} is already defined in scope to be ${this.map.get(name)}`);\n    this.map.set(name, {lhs: lhs, rhs: rhs, declared: false});\n    return this;\n  }\n\n  getLocal(name: string): (o.Expression|null) { return this.get(name); }\n\n  nestedScope(declareCallback: DeclareLocalVarCallback): BindingScope {\n    return new BindingScope(this, declareCallback);\n  }\n\n  freshReferenceName(): string {\n    let current: BindingScope = this;\n    // Find the top scope as it maintains the global reference count\n    while (current.parent) current = current.parent;\n    const ref = `${REFERENCE_PREFIX}${current.referenceNameIndex++}`;\n    return ref;\n  }\n}\n\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag: string, attributes: {[name: string]: string}): CssSelector {\n  const cssSelector = new CssSelector();\n\n  cssSelector.setElement(tag);\n\n  Object.getOwnPropertyNames(attributes).forEach((name) => {\n    const value = attributes[name];\n\n    cssSelector.addAttribute(name, value);\n    if (name.toLowerCase() === 'class') {\n      const classes = value.trim().split(/\\s+/g);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  });\n\n  return cssSelector;\n}\n\n// Parse i18n metas like:\n// - \"@@id\",\n// - \"description[@@id]\",\n// - \"meaning|description[@@id]\"\nfunction parseI18nMeta(i18n?: string): {description?: string, id?: string, meaning?: string} {\n  let meaning: string|undefined;\n  let description: string|undefined;\n  let id: string|undefined;\n\n  if (i18n) {\n    // TODO(vicb): figure out how to force a message ID with closure ?\n    const idIndex = i18n.indexOf(ID_SEPARATOR);\n\n    const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    let meaningAndDesc: string;\n    [meaningAndDesc, id] =\n        (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n    [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n  }\n\n  return {description, id, meaning};\n}\n\nfunction interpolate(args: o.Expression[]): o.Expression {\n  args = args.slice(1);  // Ignore the length prefix added for render2\n  switch (args.length) {\n    case 3:\n      return o.importExpr(R3.interpolation1).callFn(args);\n    case 5:\n      return o.importExpr(R3.interpolation2).callFn(args);\n    case 7:\n      return o.importExpr(R3.interpolation3).callFn(args);\n    case 9:\n      return o.importExpr(R3.interpolation4).callFn(args);\n    case 11:\n      return o.importExpr(R3.interpolation5).callFn(args);\n    case 13:\n      return o.importExpr(R3.interpolation6).callFn(args);\n    case 15:\n      return o.importExpr(R3.interpolation7).callFn(args);\n    case 17:\n      return o.importExpr(R3.interpolation8).callFn(args);\n  }\n  (args.length >= 19 && args.length % 2 == 1) ||\n      error(`Invalid interpolation argument length ${args.length}`);\n  return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param template text of the template to parse\n * @param templateUrl URL to use for source mapping of the parsed template\n */\nexport function parseTemplate(\n    template: string, templateUrl: string, options: {preserveWhitespaces?: boolean} = {}):\n    {errors?: ParseError[], nodes: t.Node[], hasNgContent: boolean, ngContentSelectors: string[]} {\n  const bindingParser = makeBindingParser();\n  const htmlParser = new HtmlParser();\n  const parseResult = htmlParser.parse(template, templateUrl);\n\n  if (parseResult.errors && parseResult.errors.length > 0) {\n    return {errors: parseResult.errors, nodes: [], hasNgContent: false, ngContentSelectors: []};\n  }\n\n  let rootNodes: html.Node[] = parseResult.rootNodes;\n  if (!options.preserveWhitespaces) {\n    rootNodes = html.visitAll(new WhitespaceVisitor(), rootNodes);\n  }\n\n  const {nodes, hasNgContent, ngContentSelectors, errors} =\n      htmlAstToRender3Ast(rootNodes, bindingParser);\n  if (errors && errors.length > 0) {\n    return {errors, nodes: [], hasNgContent: false, ngContentSelectors: []};\n  }\n\n  return {nodes, hasNgContent, ngContentSelectors};\n}\n\n/**\n * Construct a `BindingParser` with a default configuration.\n */\nexport function makeBindingParser(): BindingParser {\n  return new BindingParser(\n      new Parser(new Lexer()), DEFAULT_INTERPOLATION_CONFIG, new DomElementSchemaRegistry(), null,\n      []);\n}\n\nfunction isClassBinding(input: t.BoundAttribute): boolean {\n  return input.name == 'className' || input.name == 'class';\n}\n\nfunction resolveSanitizationFn(input: t.BoundAttribute, context: core.SecurityContext) {\n  switch (context) {\n    case core.SecurityContext.HTML:\n      return o.importExpr(R3.sanitizeHtml);\n    case core.SecurityContext.SCRIPT:\n      return o.importExpr(R3.sanitizeScript);\n    case core.SecurityContext.STYLE:\n      // the compiler does not fill in an instruction for [style.prop?] binding\n      // values because the style algorithm knows internally what props are subject\n      // to sanitization (only [attr.style] values are explicitly sanitized)\n      return input.type === BindingType.Attribute ? o.importExpr(R3.sanitizeStyle) : null;\n    case core.SecurityContext.URL:\n      return o.importExpr(R3.sanitizeUrl);\n    case core.SecurityContext.RESOURCE_URL:\n      return o.importExpr(R3.sanitizeResourceUrl);\n    default:\n      return null;\n  }\n}\n\nfunction isStyleSanitizable(prop: string): boolean {\n  switch (prop) {\n    case 'background-image':\n    case 'background':\n    case 'border-image':\n    case 'filter':\n    case 'list-style':\n    case 'list-style-image':\n      return true;\n  }\n  return false;\n}\n"]}