{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/render3/view/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConstantPool} from '../../constant_pool';\nimport * as o from '../../output/output_ast';\nimport * as t from '../r3_ast';\n\nimport {R3QueryMetadata} from './api';\n\n/** Name of the temporary to use during data binding */\nexport const TEMPORARY_NAME = '_t';\n\n/** Name of the context parameter passed into a template function */\nexport const CONTEXT_NAME = 'ctx';\n\n/** Name of the RenderFlag passed into a template function */\nexport const RENDER_FLAGS = 'rf';\n\n/** The prefix reference variables */\nexport const REFERENCE_PREFIX = '_r';\n\n/** The name of the implicit context reference */\nexport const IMPLICIT_REFERENCE = '$implicit';\n\n/** Name of the i18n attributes **/\nexport const I18N_ATTR = 'i18n';\nexport const I18N_ATTR_PREFIX = 'i18n-';\n\n/** I18n separators for metadata **/\nexport const MEANING_SEPARATOR = '|';\nexport const ID_SEPARATOR = '@@';\n\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n */\nexport function temporaryAllocator(statements: o.Statement[], name: string): () => o.ReadVarExpr {\n  let temp: o.ReadVarExpr|null = null;\n  return () => {\n    if (!temp) {\n      statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n      temp = o.variable(name);\n    }\n    return temp;\n  };\n}\n\n\nexport function unsupported(feature: string): never {\n  if (this) {\n    throw new Error(`Builder ${this.constructor.name} doesn't support ${feature} yet`);\n  }\n  throw new Error(`Feature ${feature} is not supported yet`);\n}\n\nexport function invalid<T>(arg: o.Expression | o.Statement | t.Node): never {\n  throw new Error(\n      `Invalid state: Visitor ${this.constructor.name} doesn't handle ${o.constructor.name}`);\n}\n\nexport function asLiteral(value: any): o.Expression {\n  if (Array.isArray(value)) {\n    return o.literalArr(value.map(asLiteral));\n  }\n  return o.literal(value, o.INFERRED_TYPE);\n}\n\nexport function conditionallyCreateMapObjectLiteral(keys: {[key: string]: string}): o.Expression|\n    null {\n  if (Object.getOwnPropertyNames(keys).length > 0) {\n    return mapToExpression(keys);\n  }\n  return null;\n}\n\nexport function mapToExpression(map: {[key: string]: any}, quoted = false): o.Expression {\n  return o.literalMap(\n      Object.getOwnPropertyNames(map).map(key => ({key, quoted, value: asLiteral(map[key])})));\n}\n\n/**\n *  Remove trailing null nodes as they are implied.\n */\nexport function trimTrailingNulls(parameters: o.Expression[]): o.Expression[] {\n  while (o.isNull(parameters[parameters.length - 1])) {\n    parameters.pop();\n  }\n  return parameters;\n}\n\nexport function getQueryPredicate(\n    query: R3QueryMetadata, constantPool: ConstantPool): o.Expression {\n  if (Array.isArray(query.predicate)) {\n    return constantPool.getConstLiteral(\n        o.literalArr(query.predicate.map(selector => o.literal(selector) as o.Expression)));\n  } else {\n    return query.predicate;\n  }\n}\n\nexport function noop() {}\n\nexport class DefinitionMap {\n  values: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  set(key: string, value: o.Expression|null): void {\n    if (value) {\n      this.values.push({key, value, quoted: false});\n    }\n  }\n\n  toLiteralMap(): o.LiteralMapExpr { return o.literalMap(this.values); }\n}\n"]}