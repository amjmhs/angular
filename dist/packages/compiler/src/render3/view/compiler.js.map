{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/render3/view/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '../../aot/static_symbol';\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeMetadata, CompileQueryMetadata, CompileTokenMetadata, CompileTypeMetadata, flatten, identifierName, sanitizeIdentifier, tokenReference} from '../../compile_metadata';\nimport {CompileReflector} from '../../compile_reflector';\nimport {BindingForm, BuiltinFunctionCall, LocalResolver, convertActionBinding, convertPropertyBinding} from '../../compiler_util/expression_converter';\nimport {ConstantPool, DefinitionKind} from '../../constant_pool';\nimport * as core from '../../core';\nimport {AST, AstMemoryEfficientTransformer, BindingPipe, BindingType, FunctionCall, ImplicitReceiver, LiteralArray, LiteralMap, LiteralPrimitive, PropertyRead} from '../../expression_parser/ast';\nimport {Identifiers} from '../../identifiers';\nimport {LifecycleHooks} from '../../lifecycle_reflector';\nimport * as o from '../../output/output_ast';\nimport {ParseSourceSpan, typeSourceSpan} from '../../parse_util';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {OutputContext, error} from '../../util';\nimport * as t from '../r3_ast';\nimport {R3DependencyMetadata, R3ResolvedDependencyType, compileFactoryFunction, dependenciesFromGlobalMetadata} from '../r3_factory';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {Render3ParseResult} from '../r3_template_transform';\nimport {typeWithParameters} from '../util';\n\nimport {R3ComponentDef, R3ComponentMetadata, R3DirectiveDef, R3DirectiveMetadata, R3QueryMetadata} from './api';\nimport {BindingScope, TemplateDefinitionBuilder, renderFlagCheckIfStmt} from './template';\nimport {CONTEXT_NAME, DefinitionMap, ID_SEPARATOR, MEANING_SEPARATOR, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, conditionallyCreateMapObjectLiteral, getQueryPredicate, temporaryAllocator, unsupported} from './util';\n\nfunction baseDirectiveFields(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): DefinitionMap {\n  const definitionMap = new DefinitionMap();\n\n  // e.g. `type: MyDirective`\n  definitionMap.set('type', meta.type);\n\n  // e.g. `selectors: [['', 'someDir', '']]`\n  definitionMap.set('selectors', createDirectiveSelector(meta.selector !));\n\n\n  // e.g. `factory: () => new MyApp(injectElementRef())`\n  definitionMap.set('factory', compileFactoryFunction({\n                      name: meta.name,\n                      fnOrClass: meta.type,\n                      deps: meta.deps,\n                      useNew: true,\n                      injectFn: R3.directiveInject,\n                    }));\n\n  definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n\n  definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n\n  // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n  definitionMap.set('hostBindings', createHostBindingsFunction(meta, bindingParser));\n\n  // e.g. `attributes: ['role', 'listbox']`\n  definitionMap.set('attributes', createHostAttributesArray(meta));\n\n  // e.g 'inputs: {a: 'a'}`\n  definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs));\n\n  // e.g 'outputs: {a: 'a'}`\n  definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n\n  // e.g. `features: [NgOnChangesFeature]`\n  const features: o.Expression[] = [];\n\n  if (meta.usesInheritance) {\n    features.push(o.importExpr(R3.InheritDefinitionFeature));\n  }\n  if (meta.lifecycle.usesOnChanges) {\n    features.push(o.importExpr(R3.NgOnChangesFeature));\n  }\n  if (features.length) {\n    definitionMap.set('features', o.literalArr(features));\n  }\n\n  return definitionMap;\n}\n\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nexport function compileDirectiveFromMetadata(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): R3DirectiveDef {\n  const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n  const expression = o.importExpr(R3.defineDirective).callFn([definitionMap.toLiteralMap()]);\n\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  const type = new o.ExpressionType(o.importExpr(R3.DirectiveDef, [\n    typeWithParameters(meta.type, meta.typeArgumentCount),\n    new o.ExpressionType(o.literal(selectorForType))\n  ]));\n  return {expression, type};\n}\n\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nexport function compileComponentFromMetadata(\n    meta: R3ComponentMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): R3ComponentDef {\n  const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n\n  const selector = meta.selector && CssSelector.parse(meta.selector);\n  const firstSelector = selector && selector[0];\n\n  // e.g. `attr: [\"class\", \".my.app\"]`\n  // This is optional an only included if the first selector of a component specifies attributes.\n  if (firstSelector) {\n    const selectorAttributes = firstSelector.getAttrs();\n    if (selectorAttributes.length) {\n      definitionMap.set(\n          'attrs', constantPool.getConstLiteral(\n                       o.literalArr(selectorAttributes.map(\n                           value => value != null ? o.literal(value) : o.literal(undefined))),\n                       /* forceShared */ true));\n    }\n  }\n\n  // Generate the CSS matcher that recognize directive\n  let directiveMatcher: SelectorMatcher|null = null;\n\n  if (meta.directives.size) {\n    const matcher = new SelectorMatcher();\n    meta.directives.forEach((expression, selector: string) => {\n      matcher.addSelectables(CssSelector.parse(selector), expression);\n    });\n    directiveMatcher = matcher;\n  }\n\n  if (meta.viewQueries.length) {\n    definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n  }\n\n  // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n  const templateTypeName = meta.name;\n  const templateName = templateTypeName ? `${templateTypeName}_Template` : null;\n\n  const directivesUsed = new Set<o.Expression>();\n  const pipesUsed = new Set<o.Expression>();\n\n  const template = meta.template;\n  const templateFunctionExpression =\n      new TemplateDefinitionBuilder(\n          constantPool, CONTEXT_NAME, BindingScope.ROOT_SCOPE, 0, templateTypeName, templateName,\n          meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed,\n          R3.namespaceHTML)\n          .buildTemplateFunction(\n              template.nodes, [], template.hasNgContent, template.ngContentSelectors);\n\n  definitionMap.set('template', templateFunctionExpression);\n\n  // e.g. `directives: [MyDirective]`\n  if (directivesUsed.size) {\n    definitionMap.set('directives', o.literalArr(Array.from(directivesUsed)));\n  }\n\n  // e.g. `pipes: [MyPipe]`\n  if (pipesUsed.size) {\n    definitionMap.set('pipes', o.literalArr(Array.from(pipesUsed)));\n  }\n\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  const expression = o.importExpr(R3.defineComponent).callFn([definitionMap.toLiteralMap()]);\n  const type = new o.ExpressionType(o.importExpr(R3.ComponentDef, [\n    typeWithParameters(meta.type, meta.typeArgumentCount),\n    new o.ExpressionType(o.literal(selectorForType))\n  ]));\n\n  return {expression, type};\n}\n\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileDirectiveFromRender2(\n    outputCtx: OutputContext, directive: CompileDirectiveMetadata, reflector: CompileReflector,\n    bindingParser: BindingParser) {\n  const name = identifierName(directive.type) !;\n  name || error(`Cannot resolver the name of ${directive.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Directive);\n\n  const meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n  const res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      name, null,\n      [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileComponentFromRender2(\n    outputCtx: OutputContext, component: CompileDirectiveMetadata, render3Ast: Render3ParseResult,\n    reflector: CompileReflector, bindingParser: BindingParser, directiveTypeBySel: Map<string, any>,\n    pipeTypeByName: Map<string, any>) {\n  const name = identifierName(component.type) !;\n  name || error(`Cannot resolver the name of ${component.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Component);\n\n  const summary = component.toSummary();\n\n  // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n  const meta: R3ComponentMetadata = {\n    ...directiveMetadataFromGlobalMetadata(component, outputCtx, reflector),\n    selector: component.selector,\n    template: {\n      nodes: render3Ast.nodes,\n      hasNgContent: render3Ast.hasNgContent,\n      ngContentSelectors: render3Ast.ngContentSelectors,\n    },\n    directives: typeMapToExpressionMap(directiveTypeBySel, outputCtx),\n    pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx),\n    viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx),\n  };\n  const res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      name, null,\n      [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n */\nfunction directiveMetadataFromGlobalMetadata(\n    directive: CompileDirectiveMetadata, outputCtx: OutputContext,\n    reflector: CompileReflector): R3DirectiveMetadata {\n  const summary = directive.toSummary();\n  const name = identifierName(directive.type) !;\n  name || error(`Cannot resolver the name of ${directive.type}`);\n\n  return {\n    name,\n    type: outputCtx.importExpr(directive.type.reference),\n    typeArgumentCount: 0,\n    typeSourceSpan:\n        typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n    selector: directive.selector,\n    deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n    queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n    lifecycle: {\n      usesOnChanges:\n          directive.type.lifecycleHooks.some(lifecycle => lifecycle == LifecycleHooks.OnChanges),\n    },\n    host: {\n      attributes: directive.hostAttributes,\n      listeners: summary.hostListeners,\n      properties: summary.hostProperties,\n    },\n    inputs: directive.inputs,\n    outputs: directive.outputs,\n    usesInheritance: false,\n  };\n}\n\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n */\nfunction queriesFromGlobalMetadata(\n    queries: CompileQueryMetadata[], outputCtx: OutputContext): R3QueryMetadata[] {\n  return queries.map(query => {\n    let read: o.Expression|null = null;\n    if (query.read && query.read.identifier) {\n      read = outputCtx.importExpr(query.read.identifier.reference);\n    }\n    return {\n      propertyName: query.propertyName,\n      first: query.first,\n      predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n      descendants: query.descendants, read,\n    };\n  });\n}\n\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n */\nfunction selectorsFromGlobalMetadata(\n    selectors: CompileTokenMetadata[], outputCtx: OutputContext): o.Expression|string[] {\n  if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n    const selectorStrings = selectors.map(value => value.value as string);\n    selectorStrings.some(value => !value) &&\n        error('Found a type among the string selectors expected');\n    return outputCtx.constantPool.getConstLiteral(\n        o.literalArr(selectorStrings.map(value => o.literal(value))));\n  }\n\n  if (selectors.length == 1) {\n    const first = selectors[0];\n    if (first.identifier) {\n      return outputCtx.importExpr(first.identifier.reference);\n    }\n  }\n\n  error('Unexpected query form');\n  return o.NULL_EXPR;\n}\n\nfunction createQueryDefinition(\n    query: R3QueryMetadata, constantPool: ConstantPool, idx: number | null): o.Expression {\n  const predicate = getQueryPredicate(query, constantPool);\n\n  // e.g. r3.Q(null, somePredicate, false) or r3.Q(0, ['div'], false)\n  const parameters = [\n    o.literal(idx, o.INFERRED_TYPE),\n    predicate,\n    o.literal(query.descendants),\n  ];\n\n  if (query.read) {\n    parameters.push(query.read);\n  }\n\n  return o.importExpr(R3.query).callFn(parameters);\n}\n\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector: string): o.Expression {\n  return asLiteral(core.parseSelectorToR3Selector(selector));\n}\n\nfunction createHostAttributesArray(meta: R3DirectiveMetadata): o.Expression|null {\n  const values: o.Expression[] = [];\n  const attributes = meta.host.attributes;\n  for (let key of Object.getOwnPropertyNames(attributes)) {\n    const value = attributes[key];\n    values.push(o.literal(key), o.literal(value));\n  }\n  if (values.length > 0) {\n    return o.literalArr(values);\n  }\n  return null;\n}\n\n// Return a contentQueries function or null if one is not necessary.\nfunction createContentQueriesFunction(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool): o.Expression|null {\n  if (meta.queries.length) {\n    const statements: o.Statement[] = meta.queries.map((query: R3QueryMetadata) => {\n      const queryDefinition = createQueryDefinition(query, constantPool, null);\n      return o.importExpr(R3.registerContentQuery).callFn([queryDefinition]).toStmt();\n    });\n    const typeName = meta.name;\n    return o.fn(\n        [], statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_ContentQueries` : null);\n  }\n\n  return null;\n}\n\n// Return a contentQueriesRefresh function or null if one is not necessary.\nfunction createContentQueriesRefreshFunction(meta: R3DirectiveMetadata): o.Expression|null {\n  if (meta.queries.length > 0) {\n    const statements: o.Statement[] = [];\n    const typeName = meta.name;\n    const parameters = [\n      new o.FnParam('dirIndex', o.NUMBER_TYPE),\n      new o.FnParam('queryStartIndex', o.NUMBER_TYPE),\n    ];\n    const directiveInstanceVar = o.variable('instance');\n    // var $tmp$: any;\n    const temporary = temporaryAllocator(statements, TEMPORARY_NAME);\n\n    // const $instance$ = $r3$.ɵd(dirIndex);\n    statements.push(\n        directiveInstanceVar.set(o.importExpr(R3.loadDirective).callFn([o.variable('dirIndex')]))\n            .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n\n    meta.queries.forEach((query: R3QueryMetadata, idx: number) => {\n      const loadQLArg = o.variable('queryStartIndex');\n      const getQueryList = o.importExpr(R3.loadQueryList).callFn([\n        idx > 0 ? loadQLArg.plus(o.literal(idx)) : loadQLArg\n      ]);\n      const assignToTemporary = temporary().set(getQueryList);\n      const callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n\n      const updateDirective = directiveInstanceVar.prop(query.propertyName)\n                                  .set(query.first ? temporary().prop('first') : temporary());\n      const refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n\n      statements.push(refreshQueryAndUpdateDirective.toStmt());\n    });\n\n    return o.fn(\n        parameters, statements, o.INFERRED_TYPE, null,\n        typeName ? `${typeName}_ContentQueriesRefresh` : null);\n  }\n\n  return null;\n}\n\n// Define and update any view queries\nfunction createViewQueriesFunction(\n    meta: R3ComponentMetadata, constantPool: ConstantPool): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: o.Statement[] = [];\n  const tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n\n  for (let i = 0; i < meta.viewQueries.length; i++) {\n    const query = meta.viewQueries[i];\n\n    // creation, e.g. r3.Q(0, somePredicate, true);\n    const queryDefinition = createQueryDefinition(query, constantPool, i);\n    createStatements.push(queryDefinition.toStmt());\n\n    // update, e.g. (r3.qR(tmp = r3.ɵld(0)) && (ctx.someDir = tmp));\n    const temporary = tempAllocator();\n    const getQueryList = o.importExpr(R3.load).callFn([o.literal(i)]);\n    const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n    const updateDirective = o.variable(CONTEXT_NAME)\n                                .prop(query.propertyName)\n                                .set(query.first ? temporary.prop('first') : temporary);\n    updateStatements.push(refresh.and(updateDirective).toStmt());\n  }\n\n  const viewQueryFnName = meta.name ? `${meta.name}_Query` : null;\n  return o.fn(\n      [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)],\n      [\n        renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements),\n        renderFlagCheckIfStmt(core.RenderFlags.Update, updateStatements)\n      ],\n      o.INFERRED_TYPE, null, viewQueryFnName);\n}\n\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(\n    meta: R3DirectiveMetadata, bindingParser: BindingParser): o.Expression|null {\n  const statements: o.Statement[] = [];\n\n  const hostBindingSourceSpan = meta.typeSourceSpan;\n\n  const directiveSummary = metadataAsSummary(meta);\n\n  // Calculate the host property bindings\n  const bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n  const bindingContext = o.importExpr(R3.loadDirective).callFn([o.variable('dirIndex')]);\n  if (bindings) {\n    for (const binding of bindings) {\n      const bindingExpr = convertPropertyBinding(\n          null, bindingContext, binding.expression, 'b', BindingForm.TrySimple,\n          () => error('Unexpected interpolation'));\n      statements.push(...bindingExpr.stmts);\n      statements.push(o.importExpr(R3.elementProperty)\n                          .callFn([\n                            o.variable('elIndex'),\n                            o.literal(binding.name),\n                            o.importExpr(R3.bind).callFn([bindingExpr.currValExpr]),\n                          ])\n                          .toStmt());\n    }\n  }\n\n  // Calculate host event bindings\n  const eventBindings =\n      bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n  if (eventBindings) {\n    for (const binding of eventBindings) {\n      const bindingExpr = convertActionBinding(\n          null, bindingContext, binding.handler, 'b', () => error('Unexpected interpolation'));\n      const bindingName = binding.name && sanitizeIdentifier(binding.name);\n      const typeName = meta.name;\n      const functionName =\n          typeName && bindingName ? `${typeName}_${bindingName}_HostBindingHandler` : null;\n      const handler = o.fn(\n          [new o.FnParam('$event', o.DYNAMIC_TYPE)],\n          [...bindingExpr.stmts, new o.ReturnStatement(bindingExpr.allowDefault)], o.INFERRED_TYPE,\n          null, functionName);\n      statements.push(\n          o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt());\n    }\n  }\n\n  if (statements.length > 0) {\n    const typeName = meta.name;\n    return o.fn(\n        [\n          new o.FnParam('dirIndex', o.NUMBER_TYPE),\n          new o.FnParam('elIndex', o.NUMBER_TYPE),\n        ],\n        statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_HostBindings` : null);\n  }\n\n  return null;\n}\n\nfunction metadataAsSummary(meta: R3DirectiveMetadata): CompileDirectiveSummary {\n  // clang-format off\n  return {\n    hostAttributes: meta.host.attributes,\n    hostListeners: meta.host.listeners,\n    hostProperties: meta.host.properties,\n  } as CompileDirectiveSummary;\n  // clang-format on\n}\n\n\nfunction typeMapToExpressionMap(\n    map: Map<string, StaticSymbol>, outputCtx: OutputContext): Map<string, o.Expression> {\n  // Convert each map entry into another entry where the value is an expression importing the type.\n  const entries = Array.from(map).map(\n      ([key, type]): [string, o.Expression] => [key, outputCtx.importExpr(type)]);\n  return new Map(entries);\n}\n\nconst HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\n// Represents the groups in the above regex.\nconst enum HostBindingGroup {\n  // group 1: \"prop\" from \"[prop]\"\n  Property = 1,\n\n  // group 2: \"event\" from \"(event)\"\n  Event = 2,\n\n  // group 3: \"@trigger\" from \"@trigger\"\n  Animation = 3,\n}\n\nexport function parseHostBindings(host: {[key: string]: string}): {\n  attributes: {[key: string]: string},\n  listeners: {[key: string]: string},\n  properties: {[key: string]: string},\n  animations: {[key: string]: string},\n} {\n  const attributes: {[key: string]: string} = {};\n  const listeners: {[key: string]: string} = {};\n  const properties: {[key: string]: string} = {};\n  const animations: {[key: string]: string} = {};\n\n  Object.keys(host).forEach(key => {\n    const value = host[key];\n    const matches = key.match(HOST_REG_EXP);\n    if (matches === null) {\n      attributes[key] = value;\n    } else if (matches[HostBindingGroup.Property] != null) {\n      properties[matches[HostBindingGroup.Property]] = value;\n    } else if (matches[HostBindingGroup.Event] != null) {\n      listeners[matches[HostBindingGroup.Event]] = value;\n    } else if (matches[HostBindingGroup.Animation] != null) {\n      animations[matches[HostBindingGroup.Animation]] = value;\n    }\n  });\n\n  return {attributes, listeners, properties, animations};\n}\n"]}