{"version":3,"file":"i18n_ast.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/i18n/i18n_ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nexport class Message {\n  sources: MessageSpan[];\n\n  /**\n   * @param nodes message AST\n   * @param placeholders maps placeholder names to static content\n   * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n   * @param meaning\n   * @param description\n   * @param id\n   */\n  constructor(\n      public nodes: Node[], public placeholders: {[phName: string]: string},\n      public placeholderToMessage: {[phName: string]: Message}, public meaning: string,\n      public description: string, public id: string) {\n    if (nodes.length) {\n      this.sources = [{\n        filePath: nodes[0].sourceSpan.start.file.url,\n        startLine: nodes[0].sourceSpan.start.line + 1,\n        startCol: nodes[0].sourceSpan.start.col + 1,\n        endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n        endCol: nodes[0].sourceSpan.start.col + 1\n      }];\n    } else {\n      this.sources = [];\n    }\n  }\n}\n\n// line and columns indexes are 1 based\nexport interface MessageSpan {\n  filePath: string;\n  startLine: number;\n  startCol: number;\n  endLine: number;\n  endCol: number;\n}\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context?: any): any;\n}\n\nexport class Text implements Node {\n  constructor(public value: string, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitText(this, context); }\n}\n\n// TODO(vicb): do we really need this node (vs an array) ?\nexport class Container implements Node {\n  constructor(public children: Node[], public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitContainer(this, context); }\n}\n\nexport class Icu implements Node {\n  // TODO(issue/24571): remove '!'.\n  public expressionPlaceholder !: string;\n  constructor(\n      public expression: string, public type: string, public cases: {[k: string]: Node},\n      public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitIcu(this, context); }\n}\n\nexport class TagPlaceholder implements Node {\n  constructor(\n      public tag: string, public attrs: {[k: string]: string}, public startName: string,\n      public closeName: string, public children: Node[], public isVoid: boolean,\n      public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitTagPlaceholder(this, context); }\n}\n\nexport class Placeholder implements Node {\n  constructor(public value: string, public name: string, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitPlaceholder(this, context); }\n}\n\nexport class IcuPlaceholder implements Node {\n  constructor(public value: Icu, public name: string, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitIcuPlaceholder(this, context); }\n}\n\nexport interface Visitor {\n  visitText(text: Text, context?: any): any;\n  visitContainer(container: Container, context?: any): any;\n  visitIcu(icu: Icu, context?: any): any;\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): any;\n  visitPlaceholder(ph: Placeholder, context?: any): any;\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any;\n}\n\n// Clone the AST\nexport class CloneVisitor implements Visitor {\n  visitText(text: Text, context?: any): Text { return new Text(text.value, text.sourceSpan); }\n\n  visitContainer(container: Container, context?: any): Container {\n    const children = container.children.map(n => n.visit(this, context));\n    return new Container(children, container.sourceSpan);\n  }\n\n  visitIcu(icu: Icu, context?: any): Icu {\n    const cases: {[k: string]: Node} = {};\n    Object.keys(icu.cases).forEach(key => cases[key] = icu.cases[key].visit(this, context));\n    const msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n    msg.expressionPlaceholder = icu.expressionPlaceholder;\n    return msg;\n  }\n\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): TagPlaceholder {\n    const children = ph.children.map(n => n.visit(this, context));\n    return new TagPlaceholder(\n        ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n\n  visitPlaceholder(ph: Placeholder, context?: any): Placeholder {\n    return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n  }\n\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): IcuPlaceholder {\n    return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n  }\n}\n\n// Visit all the nodes recursively\nexport class RecurseVisitor implements Visitor {\n  visitText(text: Text, context?: any): any {}\n\n  visitContainer(container: Container, context?: any): any {\n    container.children.forEach(child => child.visit(this));\n  }\n\n  visitIcu(icu: Icu, context?: any): any {\n    Object.keys(icu.cases).forEach(k => { icu.cases[k].visit(this); });\n  }\n\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): any {\n    ph.children.forEach(child => child.visit(this));\n  }\n\n  visitPlaceholder(ph: Placeholder, context?: any): any {}\n\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any {}\n}\n"]}