{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/query.ts"],"names":[],"mappings":";;;;;;;;;;;AAYA,OAAO,EAAC,YAAY,EAAC,MAAM,kBAAkB,CAAC;AAG9C,OAAO,EAAC,iBAAiB,EAAC,MAAM,SAAS,CAAC;AAE1C,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,UAAU,CAAC;AACpD,OAAO,EAAC,kBAAkB,EAAE,8BAA8B,EAAC,MAAM,MAAM,CAAC;AACxE,OAAO,EAAC,sBAAsB,EAAE,iBAAiB,EAAE,KAAK,EAAE,uBAAuB,EAAC,MAAM,gBAAgB,CAAC;AACzG,OAAO,EAAuB,6BAA6B,IAAI,OAAO,EAAC,MAAM,yBAAyB,CAAC;AACvG,OAAO,EAAY,6BAA6B,IAAI,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAC1F,OAAO,EAAyD,6BAA6B,IAAI,OAAO,EAAC,MAAM,mBAAmB,CAAC;AACnI,OAAO,EAA0B,6BAA6B,IAAI,OAAO,EAAC,MAAM,oBAAoB,CAAC;AACrG,OAAO,EAAC,UAAU,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;;AAE/B,IAAM,uBAAuB,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DtE,IAAA;IAIE,mBAAY,IAAkB;uBAHF,IAAI;oBACP,IAAI;QAEK,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;KAAE;;;;;;;;;IAE3E,yBAAK;;;;;;;;IAAL,UACI,SAAkC,EAAE,SAA2B,EAAE,OAAiB,EAClF,IAA+B;QACjC,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACtF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC5F;KACF;;;;IAED,yBAAK;;;IAAL,cAAyB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;;;;IAE9E,yBAAK;;;IAAL;QACE,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;;YAEtB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;;;YAGzB,OAAO,IAAI,CAAC;SACb;aAAM;;YAEL,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;KACF;;;;IAED,6BAAS;;;IAAT;;QACE,IAAI,MAAM,GAAqB,IAAI,CAAC;;QACpC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,OAAO,KAAK,EAAE;;YACZ,IAAM,eAAe,GAAU,EAAE,CAAC;YAClC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;YACnC,IAAM,WAAW,GAAgB;gBAC/B,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,MAAM,EAAE,eAAe;gBACvB,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;YAC1B,MAAM,GAAG,WAAW,CAAC;YACrB,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACpB;QAED,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KAC9C;;;;IAED,8BAAU;;;IAAV;;QACE,IAAI,MAAM,GAAqB,IAAI,CAAC;;QACpC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,OAAO,KAAK,EAAE;;YACZ,IAAM,WAAW,GAAgB;gBAC/B,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,MAAM,EAAE,EAAE;gBACV,eAAe,EAAE,KAAK,CAAC,MAAM;aAC9B,CAAC;YACF,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;YAC1B,MAAM,GAAG,WAAW,CAAC;YACrB,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACpB;QAED,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KAC9C;;;;;IAED,8BAAU;;;;IAAV,UAAW,KAAa;;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,OAAO,KAAK,EAAE;YACZ,SAAS;gBACL,aAAa,CACT,KAAK,CAAC,eAAe,EAAE,0DAA0D,CAAC,CAAC;cAC3F,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM;YACrD,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACpB;KACF;;;;;IAED,2BAAO;;;;IAAP,UAAQ,IAAW;QACjB,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACtB;;;;IAED,8BAAU;;;IAAV;;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,OAAO,KAAK,EAAE;YACZ,SAAS;gBACL,aAAa,CACT,KAAK,CAAC,eAAe,EAAE,0DAA0D,CAAC,CAAC;;YAE3F,IAAM,eAAe,sBAAG,KAAK,CAAC,eAAe,GAAG;;YAChD,IAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;YAC5D,IAAM,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;;YAGzD,SAAS,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC;YAC9D,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBACrB,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACvB;YAED,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACpB;KACF;oBArMH;IAsMC,CAAA;AA/GD,qBA+GC;;;;;;;;;;;;;;;AAUD,kCAAkC,KAAY,EAAE,QAAgB;;IAC9D,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IACpC,IAAI,UAAU,EAAE;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC7C,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBAC9B,yBAAO,UAAU,CAAC,CAAC,GAAG,CAAC,CAAW,EAAC;aACpC;SACF;KACF;IACD,OAAO,IAAI,CAAC;CACb;;;;;;;;AASD,mCAAmC,IAAW,EAAE,IAAe;;IAC7D,IAAM,IAAI,sBAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG;;IAC3C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;IAC/B,IAAM,KAAK,GAAG,KAAK,gCAAgC,CAAC;;IACpD,IAAM,KAAK,GAAG,KAAK,wCAA0C,CAAC;;IAC9D,IAAM,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;QAChC,IAAM,GAAG,qBAAG,IAAI,CAAC,CAAC,CAA8B,EAAC;QACjD,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,QAAQ,EAAE;YACrC,OAAO,CAAC,CAAC;SACV;KACF;IACD,OAAO,IAAI,CAAC;CACb;;;;;;;;AAED,8BACI,YAAuB,EAAE,IAAW,EAAE,IAAmC,EACzE,YAAoB;IACtB,IAAI,IAAI,YAAY,kBAAkB,EAAE;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;KACpD;SAAM;;QACL,IAAM,WAAW,GAAG,yBAAyB,CAAC,IAAI,oBAAE,IAAiB,EAAC,CAAC;QACvE,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,0BAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,WAAW,EAAE;SAC7C;KACF;IACD,OAAO,IAAI,CAAC;CACb;;;;;;AAED,aAAa,KAAwB,EAAE,IAAW;;IAChD,IAAM,YAAY,GAAG,8BAA8B,mBAAC,IAAqC,EAAC,CAAC;IAC3F,OAAO,KAAK,EAAE;;QACZ,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;QAClC,IAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,IAAI,IAAI,EAAE;;YACR,IAAM,YAAY,GAAG,yBAAyB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC3D,IAAI,YAAY,KAAK,IAAI,EAAE;;gBAGzB,IAAM,MAAM,GACR,oBAAoB,CAAC,YAAY,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC;gBACnF,IAAI,MAAM,KAAK,IAAI,EAAE;oBACnB,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBACzB;aACF;SACF;aAAM;;YACL,IAAM,QAAQ,sBAAG,SAAS,CAAC,QAAQ,GAAG;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;gBACxC,IAAM,YAAY,GAAG,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,YAAY,KAAK,IAAI,EAAE;;;oBAGzB,SAAS,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAC;;oBAC/E,IAAM,MAAM,GAAG,oBAAoB,CAAC,YAAY,EAAE,IAAI,qBAAE,SAAS,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC;oBACxF,IAAI,MAAM,KAAK,IAAI,EAAE;wBACnB,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;qBACzB;iBACF;aACF;SACF;QACD,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;KACpB;CACF;;;;;;AAED,kBAAkB,KAAkB,EAAE,aAAkB;IACtD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACjC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;CACvB;;;;;;;AAED,yBACI,SAA4B,EAAE,IAAqC;;IACrE,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzC,OAAO;QACL,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAC,SAAoB,CAAA;QAC3C,QAAQ,EAAE,OAAO,CAAC,CAAC,mBAAC,SAAqB,EAAC,CAAC,CAAC,IAAI;QAChD,IAAI,EAAE,IAAI;KACX,CAAC;CACH;;;;;;;;;AAED,qBACI,QAA2B,EAAE,SAAuB,EAAE,SAA4B,EAClF,IAAqC;IACvC,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC;QAC3C,MAAM,EAAE,oBAAC,SAAgB,GAAkB,CAAC,WAAW;QACvD,eAAe,EAAE,IAAI;KACtB,CAAC;CACH;;;;AAED;;;AAAA;;qBACmB,IAAI;uBACa,IAAI,YAAY,EAAE;uBAC7B,EAAE;;;;2BAEJ,EAAE;;IAEvB,sBAAI,8BAAM;;;;QAAV,cAAuB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;;OAAA;IAEpD,sBAAI,6BAAK;;;;QAAT;;YACE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC1B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACzC;;;OAAA;IAED,sBAAI,4BAAI;;;;QAAR;;YACE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC1B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACzD;;;OAAA;IAED;;;OAGG;;;;;;;;IACH,wBAAG;;;;;;;IAAH,UAAO,EAA6C,IAAS,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE;IAE3F;;;OAGG;;;;;;;IACH,2BAAM;;;;;;IAAN,UAAO,EAAmD;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KAChC;IAED;;;OAGG;;;;;;;IACH,yBAAI;;;;;;IAAJ,UAAK,EAAmD;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9B;IAED;;;OAGG;;;;;;;;;IACH,2BAAM;;;;;;;;IAAN,UAAU,EAAkE,EAAE,IAAO;QACnF,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KACtC;IAED;;;OAGG;;;;;;;IACH,4BAAO;;;;;;IAAP,UAAQ,EAAgD,IAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE;IAE7F;;;OAGG;;;;;;;IACH,yBAAI;;;;;;IAAJ,UAAK,EAAoD;QACvD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9B;;;;IAED,4BAAO;;;IAAP,cAAiB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;;;;IAEhD,qBAAC,iBAAiB,EAAE,CAAC;;;IAArB,cAAuC,OAAO,mBAAC,IAAI,CAAC,OAAc,EAAC,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE;;;;IAE7F,6BAAQ;;;IAAR,cAAqB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE;;;;;IAEtD,0BAAK;;;;IAAL,UAAM,GAAgB;QACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC5B,mBAAC,IAAuB,EAAC,CAAC,KAAK,GAAG,KAAK,CAAC;KACzC;;;;IAED,oCAAe;;;IAAf,cAA0B,mBAAC,IAAI,CAAC,OAA4B,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;;;;IAC3E,6BAAQ;;;IAAR,cAAmB,mBAAC,IAAuB,EAAC,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE;;;;IAC5D,4BAAO;;;IAAP;QACE,mBAAC,IAAI,CAAC,OAA4B,EAAC,CAAC,QAAQ,EAAE,CAAC;QAC/C,mBAAC,IAAI,CAAC,OAA4B,EAAC,CAAC,WAAW,EAAE,CAAC;KACnD;qBA7YH;IA8YC,CAAA;;;;;;;;;;;;;;;AAKD,WAAa,SAAS,qBAAgC,UAAiB,EAAC;;;;;;;;;;;;AAYxE,MAAM,gBACF,WAA0B,EAAE,SAA8B,EAAE,OAAiB,EAC7E,IAAgC;IAClC,SAAS,IAAI,sBAAsB,EAAE,CAAC;;IACtC,IAAM,SAAS,GAAG,IAAI,SAAS,EAAK,CAAC;;IACrC,IAAM,OAAO,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;IAC7C,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACnD,uBAAuB,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;IAC5D,IAAI,WAAW,IAAI,IAAI,EAAE;QACvB,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;KAC/B;IACD,OAAO,SAAS,CAAC;CAClB;;;;;;;;AAOD,MAAM,uBAAuB,SAAyB;;IACpD,IAAM,aAAa,GAAG,oBAAC,SAAgB,GAAoB,CAAC;IAC5D,IAAI,SAAS,CAAC,KAAK,EAAE;QACnB,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC3C,SAAS,CAAC,eAAe,EAAE,CAAC;QAC5B,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;CACd","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {QueryList as viewEngine_QueryList} from '../linker/query_list';\nimport {Type} from '../type';\nimport {getSymbolIterator} from '../util';\n\nimport {assertDefined, assertEqual} from './assert';\nimport {ReadFromInjectorFn, getOrCreateNodeInjectorForNode} from './di';\nimport {assertPreviousIsParent, getCurrentQueries, store, storeCleanupWithContext} from './instructions';\nimport {DirectiveDefInternal, unusedValueExportToPlacateAjd as unused1} from './interfaces/definition';\nimport {LInjector, unusedValueExportToPlacateAjd as unused2} from './interfaces/injector';\nimport {LContainerNode, LElementNode, LNode, TNode, TNodeFlags, unusedValueExportToPlacateAjd as unused3} from './interfaces/node';\nimport {LQueries, QueryReadType, unusedValueExportToPlacateAjd as unused4} from './interfaces/query';\nimport {DIRECTIVES, TVIEW} from './interfaces/view';\nimport {flatten} from './util';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n */\nexport interface QueryPredicate<T> {\n  /**\n   * If looking for directives then it contains the directive type.\n   */\n  type: Type<T>|null;\n\n  /**\n   * If selector then contains local names to query for.\n   */\n  selector: string[]|null;\n\n  /**\n   * Indicates which token should be read from DI for this query.\n   */\n  read: QueryReadType<T>|Type<T>|null;\n}\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n */\nexport interface LQuery<T> {\n  /**\n   * Next query. Used when queries are stored as a linked list in `LQueries`.\n   */\n  next: LQuery<any>|null;\n\n  /**\n   * Destination to which the value should be added.\n   */\n  list: QueryList<T>;\n\n  /**\n   * A predicate which determines if a given element/directive should be included in the query\n   * results.\n   */\n  predicate: QueryPredicate<T>;\n\n  /**\n   * Values which have been located.\n   *\n   * This is what builds up the `QueryList._valuesTree`.\n   */\n  values: any[];\n\n  /**\n   * A pointer to an array that stores collected values from views. This is necessary so we know a\n   * container into which to insert nodes collected from views.\n   */\n  containerValues: any[]|null;\n}\n\nexport class LQueries_ implements LQueries {\n  shallow: LQuery<any>|null = null;\n  deep: LQuery<any>|null = null;\n\n  constructor(deep?: LQuery<any>) { this.deep = deep == null ? null : deep; }\n\n  track<T>(\n      queryList: viewEngine_QueryList<T>, predicate: Type<T>|string[], descend?: boolean,\n      read?: QueryReadType<T>|Type<T>): void {\n    if (descend) {\n      this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n    } else {\n      this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n    }\n  }\n\n  clone(): LQueries|null { return this.deep ? new LQueries_(this.deep) : null; }\n\n  child(): LQueries|null {\n    if (this.deep === null) {\n      // if we don't have any deep queries then no need to track anything more.\n      return null;\n    }\n    if (this.shallow === null) {\n      // DeepQuery: We can reuse the current state if the child state would be same as current\n      // state.\n      return this;\n    } else {\n      // We need to create new state\n      return new LQueries_(this.deep);\n    }\n  }\n\n  container(): LQueries|null {\n    let result: LQuery<any>|null = null;\n    let query = this.deep;\n\n    while (query) {\n      const containerValues: any[] = [];  // prepare room for views\n      query.values.push(containerValues);\n      const clonedQuery: LQuery<any> = {\n        next: null,\n        list: query.list,\n        predicate: query.predicate,\n        values: containerValues,\n        containerValues: null\n      };\n      clonedQuery.next = result;\n      result = clonedQuery;\n      query = query.next;\n    }\n\n    return result ? new LQueries_(result) : null;\n  }\n\n  createView(): LQueries|null {\n    let result: LQuery<any>|null = null;\n    let query = this.deep;\n\n    while (query) {\n      const clonedQuery: LQuery<any> = {\n        next: null,\n        list: query.list,\n        predicate: query.predicate,\n        values: [],\n        containerValues: query.values\n      };\n      clonedQuery.next = result;\n      result = clonedQuery;\n      query = query.next;\n    }\n\n    return result ? new LQueries_(result) : null;\n  }\n\n  insertView(index: number): void {\n    let query = this.deep;\n    while (query) {\n      ngDevMode &&\n          assertDefined(\n              query.containerValues, 'View queries need to have a pointer to container values.');\n      query.containerValues !.splice(index, 0, query.values);\n      query = query.next;\n    }\n  }\n\n  addNode(node: LNode): void {\n    add(this.shallow, node);\n    add(this.deep, node);\n  }\n\n  removeView(): void {\n    let query = this.deep;\n    while (query) {\n      ngDevMode &&\n          assertDefined(\n              query.containerValues, 'View queries need to have a pointer to container values.');\n\n      const containerValues = query.containerValues !;\n      const viewValuesIdx = containerValues.indexOf(query.values);\n      const removed = containerValues.splice(viewValuesIdx, 1);\n\n      // mark a query as dirty only when removed view had matching modes\n      ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n      if (removed[0].length) {\n        query.list.setDirty();\n      }\n\n      query = query.next;\n    }\n  }\n}\n\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode: TNode, selector: string): number|null {\n  const localNames = tNode.localNames;\n  if (localNames) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      if (localNames[i] === selector) {\n        return localNames[i + 1] as number;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node: LNode, type: Type<any>): number|null {\n  const defs = node.view[TVIEW].directives !;\n  const flags = node.tNode.flags;\n  const count = flags & TNodeFlags.DirectiveCountMask;\n  const start = flags >> TNodeFlags.DirectiveStartingIndexShift;\n  const end = start + count;\n  for (let i = start; i < end; i++) {\n    const def = defs[i] as DirectiveDefInternal<any>;\n    if (def.type === type && def.diPublic) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction readFromNodeInjector(\n    nodeInjector: LInjector, node: LNode, read: QueryReadType<any>| Type<any>,\n    directiveIdx: number): any {\n  if (read instanceof ReadFromInjectorFn) {\n    return read.read(nodeInjector, node, directiveIdx);\n  } else {\n    const matchingIdx = getIdxOfMatchingDirective(node, read as Type<any>);\n    if (matchingIdx !== null) {\n      return node.view[DIRECTIVES] ![matchingIdx];\n    }\n  }\n  return null;\n}\n\nfunction add(query: LQuery<any>| null, node: LNode) {\n  const nodeInjector = getOrCreateNodeInjectorForNode(node as LElementNode | LContainerNode);\n  while (query) {\n    const predicate = query.predicate;\n    const type = predicate.type;\n    if (type) {\n      const directiveIdx = getIdxOfMatchingDirective(node, type);\n      if (directiveIdx !== null) {\n        // a node is matching a predicate - determine what to read\n        // if read token and / or strategy is not specified, use type as read token\n        const result =\n            readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n        if (result !== null) {\n          addMatch(query, result);\n        }\n      }\n    } else {\n      const selector = predicate.selector !;\n      for (let i = 0; i < selector.length; i++) {\n        const directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n        if (directiveIdx !== null) {\n          // a node is matching a predicate - determine what to read\n          // note that queries using name selector must specify read strategy\n          ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n          const result = readFromNodeInjector(nodeInjector, node, predicate.read !, directiveIdx);\n          if (result !== null) {\n            addMatch(query, result);\n          }\n        }\n      }\n    }\n    query = query.next;\n  }\n}\n\nfunction addMatch(query: LQuery<any>, matchingValue: any): void {\n  query.values.push(matchingValue);\n  query.list.setDirty();\n}\n\nfunction createPredicate<T>(\n    predicate: Type<T>| string[], read: QueryReadType<T>| Type<T>| null): QueryPredicate<T> {\n  const isArray = Array.isArray(predicate);\n  return {\n    type: isArray ? null : predicate as Type<T>,\n    selector: isArray ? predicate as string[] : null,\n    read: read\n  };\n}\n\nfunction createQuery<T>(\n    previous: LQuery<any>| null, queryList: QueryList<T>, predicate: Type<T>| string[],\n    read: QueryReadType<T>| Type<T>| null): LQuery<T> {\n  return {\n    next: previous,\n    list: queryList,\n    predicate: createPredicate(predicate, read),\n    values: (queryList as any as QueryList_<T>)._valuesTree,\n    containerValues: null\n  };\n}\n\nclass QueryList_<T>/* implements viewEngine_QueryList<T> */ {\n  readonly dirty = true;\n  readonly changes: Observable<T> = new EventEmitter();\n  private _values: T[] = [];\n  /** @internal */\n  _valuesTree: any[] = [];\n\n  get length(): number { return this._values.length; }\n\n  get first(): T|null {\n    let values = this._values;\n    return values.length ? values[0] : null;\n  }\n\n  get last(): T|null {\n    let values = this._values;\n    return values.length ? values[values.length - 1] : null;\n  }\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._values.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._values.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._values.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._values.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._values.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._values.some(fn);\n  }\n\n  toArray(): T[] { return this._values.slice(0); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._values as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._values.toString(); }\n\n  reset(res: (any[]|T)[]): void {\n    this._values = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n  setDirty(): void { (this as{dirty: boolean}).dirty = true; }\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\n// NOTE: this hack is here because IQueryList has private members and therefore\n// it can't be implemented only extended.\nexport type QueryList<T> = viewEngine_QueryList<T>;\nexport const QueryList: typeof viewEngine_QueryList = QueryList_ as any;\n\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nexport function query<T>(\n    memoryIndex: number | null, predicate: Type<any>| string[], descend?: boolean,\n    read?: QueryReadType<T>| Type<T>): QueryList<T> {\n  ngDevMode && assertPreviousIsParent();\n  const queryList = new QueryList<T>();\n  const queries = getCurrentQueries(LQueries_);\n  queries.track(queryList, predicate, descend, read);\n  storeCleanupWithContext(null, queryList, queryList.destroy);\n  if (memoryIndex != null) {\n    store(memoryIndex, queryList);\n  }\n  return queryList;\n}\n\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nexport function queryRefresh(queryList: QueryList<any>): boolean {\n  const queryListImpl = (queryList as any as QueryList_<any>);\n  if (queryList.dirty) {\n    queryList.reset(queryListImpl._valuesTree);\n    queryList.notifyOnChanges();\n    return true;\n  }\n  return false;\n}\n"]}