{"version":3,"file":"ivy_switch.js","sourceRoot":"","sources":["../../../../../packages/core/src/ivy_switch.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,oIAAc,qBAAqB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * Reexport from:\n * - `./ivy_switch_false` => Use `ViewEngine`.\n * - `./ivy_switch_true` => Use `Ivy`.\n *\n * This file is here for your IDE as well as for `google3`. The `bazel` build system\n * specifically excludes this file and instead generates a new file which is controlled by\n * command line:\n *\n * - `bazel build packages/core` => Use `ViewEngine`\n * - `bazel build packages/core --define=ivy=true` => Use `Ivy`\n *\n * See: `bazel build packages/core:ivy_switch` for more details.\n *\n * ## How to use this\n *\n * Use this mechanism to have the same symbol be aliased to different implementation.\n * 1) Create two implementations of a symbol (most likely a `function` or a `class`).\n * 2) Export the two implementation under same name in `./ivy_switch_false` and `./ivy_switch_false`\n *    respectively.\n * 3) Import the symbol from `./ivy_switch`. The imported symbol will that point to either the\n *    symbol in `./ivy_switch_false` and `./ivy_switch_false` depending on the compilation mode.\n */\nexport * from './ivy_switch_legacy';\n\n// TODO(alxhub): debug why metadata doesn't properly propagate through this file.\n"]}