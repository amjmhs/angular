"use strict";
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("@angular/compiler/src/util");
var digest_1 = require("../../../src/i18n/digest");
var message_bundle_1 = require("../../../src/i18n/message_bundle");
var xliff_1 = require("../../../src/i18n/serializers/xliff");
var html_parser_1 = require("../../../src/ml_parser/html_parser");
var interpolation_config_1 = require("../../../src/ml_parser/interpolation_config");
var HTML = "\n<p i18n-title title=\"translatable attribute\">not translatable</p>\n<p i18n>translatable element <b>with placeholders</b> {{ interpolation}}</p>\n<!-- i18n -->{ count, plural, =0 {<p>test</p>}}<!-- /i18n -->\n<p i18n=\"m|d\">foo</p>\n<p i18n=\"m|d\">foo</p>\n<p i18n=\"m|d@@i\">foo</p>\n<p i18n=\"@@bar\">foo</p>\n<p i18n=\"ph names\"><br><img><div></div></p>\n<p i18n=\"@@baz\">{ count, plural, =0 { { sex, select, other {<p>deeply nested</p>}} }}</p>\n<p i18n>Test: { count, plural, =0 { { sex, select, other {<p>deeply nested</p>}} } =other {a lot}}</p>\n<p i18n>multi\nlines</p>\n";
var WRITE_XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit id=\"983775b9a51ce14b036be72d4cfd65d68d64e231\" datatype=\"html\">\n        <source>translatable attribute</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">2</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"ec1d033f2436133c14ab038286c4f5df4697484a\" datatype=\"html\">\n        <source>translatable element <x id=\"START_BOLD_TEXT\" ctype=\"x-b\" equiv-text=\"&lt;b&gt;\"/>with placeholders<x id=\"CLOSE_BOLD_TEXT\" ctype=\"x-b\" equiv-text=\"&lt;/b&gt;\"/> <x id=\"INTERPOLATION\" equiv-text=\"{{ interpolation}}\"/></source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">3</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"e2ccf3d131b15f54aa1fcf1314b1ca77c14bfcc2\" datatype=\"html\">\n        <source>{VAR_PLURAL, plural, =0 {<x id=\"START_PARAGRAPH\" ctype=\"x-p\" equiv-text=\"&lt;p&gt;\"/>test<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\" equiv-text=\"&lt;/p&gt;\"/>} }</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">4</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"db3e0a6a5a96481f60aec61d98c3eecddef5ac23\" datatype=\"html\">\n        <source>foo</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">5</context>\n        </context-group>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">6</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">d</note>\n        <note priority=\"1\" from=\"meaning\">m</note>\n      </trans-unit>\n      <trans-unit id=\"i\" datatype=\"html\">\n        <source>foo</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">7</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">d</note>\n        <note priority=\"1\" from=\"meaning\">m</note>\n      </trans-unit>\n      <trans-unit id=\"bar\" datatype=\"html\">\n        <source>foo</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">8</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"d7fa2d59aaedcaa5309f13028c59af8c85b8c49d\" datatype=\"html\">\n        <source><x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br/&gt;\"/><x id=\"TAG_IMG\" ctype=\"image\" equiv-text=\"&lt;img/&gt;\"/><x id=\"START_TAG_DIV\" ctype=\"x-div\" equiv-text=\"&lt;div&gt;\"/><x id=\"CLOSE_TAG_DIV\" ctype=\"x-div\" equiv-text=\"&lt;/div&gt;\"/></source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">9</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">ph names</note>\n      </trans-unit>\n      <trans-unit id=\"baz\" datatype=\"html\">\n        <source>{VAR_PLURAL, plural, =0 {{VAR_SELECT, select, other {<x id=\"START_PARAGRAPH\" ctype=\"x-p\" equiv-text=\"&lt;p&gt;\"/>deeply nested<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\" equiv-text=\"&lt;/p&gt;\"/>} } } }</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">10</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"52ffa620dcd76247a56d5331f34e73f340a43cdb\" datatype=\"html\">\n        <source>Test: <x id=\"ICU\" equiv-text=\"{ count, plural, =0 {...} =other {...}}\"/></source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">11</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"1503afd0ccc20ff01d5e2266a9157b7b342ba494\" datatype=\"html\">\n        <source>{VAR_PLURAL, plural, =0 {{VAR_SELECT, select, other {<x id=\"START_PARAGRAPH\" ctype=\"x-p\" equiv-text=\"&lt;p&gt;\"/>deeply nested<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\" equiv-text=\"&lt;/p&gt;\"/>} } } =other {a lot} }</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">11</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"fcfa109b0e152d4c217dbc02530be0bcb8123ad1\" datatype=\"html\">\n        <source>multi\nlines</source>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">12</context>\n        </context-group>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>\n";
var LOAD_XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" target-language=\"fr\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit id=\"983775b9a51ce14b036be72d4cfd65d68d64e231\" datatype=\"html\">\n        <source>translatable attribute</source>\n        <target>etubirtta elbatalsnart</target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">1</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"ec1d033f2436133c14ab038286c4f5df4697484a\" datatype=\"html\">\n        <source>translatable element <x id=\"START_BOLD_TEXT\" ctype=\"b\"/>with placeholders<x id=\"CLOSE_BOLD_TEXT\" ctype=\"b\"/> <x id=\"INTERPOLATION\"/></source>\n        <target><x id=\"INTERPOLATION\"/> footnemele elbatalsnart <x id=\"START_BOLD_TEXT\" ctype=\"x-b\"/>sredlohecalp htiw<x id=\"CLOSE_BOLD_TEXT\" ctype=\"x-b\"/></target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">2</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"e2ccf3d131b15f54aa1fcf1314b1ca77c14bfcc2\" datatype=\"html\">\n        <source>{VAR_PLURAL, plural, =0 {<x id=\"START_PARAGRAPH\" ctype=\"x-p\"/>test<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\"/>} }</source>\n        <target>{VAR_PLURAL, plural, =0 {<x id=\"START_PARAGRAPH\" ctype=\"x-p\"/>TEST<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\"/>} }</target>\n      </trans-unit>\n      <trans-unit id=\"db3e0a6a5a96481f60aec61d98c3eecddef5ac23\" datatype=\"html\">\n        <source>foo</source>\n        <target>oof</target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">3</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">d</note>\n        <note priority=\"1\" from=\"meaning\">m</note>\n      </trans-unit>\n      <trans-unit id=\"i\" datatype=\"html\">\n        <source>foo</source>\n        <target>toto</target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">4</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">d</note>\n        <note priority=\"1\" from=\"meaning\">m</note>\n      </trans-unit>\n      <trans-unit id=\"bar\" datatype=\"html\">\n        <source>foo</source>\n        <target>tata</target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">5</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"d7fa2d59aaedcaa5309f13028c59af8c85b8c49d\" datatype=\"html\">\n        <source><x id=\"LINE_BREAK\" ctype=\"lb\"/><x id=\"TAG_IMG\" ctype=\"image\"/><x id=\"START_TAG_DIV\" ctype=\"x-div\"/><x id=\"CLOSE_TAG_DIV\" ctype=\"x-div\"/></source>\n        <target><x id=\"START_TAG_DIV\" ctype=\"x-div\"/><x id=\"CLOSE_TAG_DIV\" ctype=\"x-div\"/><x id=\"TAG_IMG\" ctype=\"image\"/><x id=\"LINE_BREAK\" ctype=\"lb\"/></target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">6</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">ph names</note>\n      </trans-unit>            \n      <trans-unit id=\"empty target\" datatype=\"html\">\n        <source><x id=\"LINE_BREAK\" ctype=\"lb\"/><x id=\"TAG_IMG\" ctype=\"image\"/><x id=\"START_TAG_DIV\" ctype=\"x-div\"/><x id=\"CLOSE_TAG_DIV\" ctype=\"x-div\"/></source>\n        <target/>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">6</context>\n        </context-group>\n        <note priority=\"1\" from=\"description\">ph names</note>\n      </trans-unit>\n      <trans-unit id=\"baz\" datatype=\"html\">\n        <source>{VAR_PLURAL, plural, =0 {{VAR_SELECT, select, other {<x id=\"START_PARAGRAPH\" ctype=\"x-p\"/>deeply nested<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\"/>} } } }</source>\n        <target>{VAR_PLURAL, plural, =0 {{VAR_SELECT, select, other {<x id=\"START_PARAGRAPH\" ctype=\"x-p\"/>profond\u00E9ment imbriqu\u00E9<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\"/>} } } }</target>\n      </trans-unit>\n      <trans-unit id=\"52ffa620dcd76247a56d5331f34e73f340a43cdb\" datatype=\"html\">\n        <source>Test: <x id=\"ICU\" equiv-text=\"{ count, plural, =0 {...} =other {...}}\"/></source>\n        <target>Test: <x id=\"ICU\" equiv-text=\"{ count, plural, =0 {...} =other {...}}\"/></target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">11</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"1503afd0ccc20ff01d5e2266a9157b7b342ba494\" datatype=\"html\">\n        <source>{VAR_PLURAL, plural, =0 {{VAR_SELECT, select, other {<x id=\"START_PARAGRAPH\" ctype=\"x-p\"/>deeply nested<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\"/>} } } =other {a lot} }</source>\n        <target>{VAR_PLURAL, plural, =0 {{VAR_SELECT, select, other {<x id=\"START_PARAGRAPH\" ctype=\"x-p\"/>profond\u00E9ment imbriqu\u00E9<x id=\"CLOSE_PARAGRAPH\" ctype=\"x-p\"/>} } } =other {beaucoup} }</target>\n      </trans-unit>\n      <trans-unit id=\"fcfa109b0e152d4c217dbc02530be0bcb8123ad1\" datatype=\"html\">\n        <source>multi\nlines</source>\n        <target>multi\nlignes</target>\n        <context-group purpose=\"location\">\n          <context context-type=\"sourcefile\">file.ts</context>\n          <context context-type=\"linenumber\">12</context>\n        </context-group>\n      </trans-unit>\n      <trans-unit id=\"mrk-test\">\n        <source>First sentence.</source>\n        <seg-source>\n          <invalid-tag>Should not be parsed</invalid-tag>\n        </seg-source>\n        <target>Translated <mrk mtype=\"seg\" mid=\"1\">first sentence</mrk>.</target>\n      </trans-unit>\n      <trans-unit id=\"mrk-test2\">\n        <source>First sentence. Second sentence.</source>\n        <seg-source>\n          <invalid-tag>Should not be parsed</invalid-tag>\n        </seg-source>\n        <target>Translated <mrk mtype=\"seg\" mid=\"1\"><mrk mtype=\"seg\" mid=\"2\">first</mrk> sentence</mrk>.</target>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>\n";
(function () {
    var serializer = new xliff_1.Xliff();
    function toXliff(html, locale) {
        if (locale === void 0) { locale = null; }
        var catalog = new message_bundle_1.MessageBundle(new html_parser_1.HtmlParser, [], {}, locale);
        catalog.updateFromTemplate(html, 'file.ts', interpolation_config_1.DEFAULT_INTERPOLATION_CONFIG);
        return catalog.write(serializer);
    }
    function loadAsMap(xliff) {
        var i18nNodesByMsgId = serializer.load(xliff, 'url').i18nNodesByMsgId;
        var msgMap = {};
        Object.keys(i18nNodesByMsgId)
            .forEach(function (id) { return msgMap[id] = digest_1.serializeNodes(i18nNodesByMsgId[id]).join(''); });
        return msgMap;
    }
    describe('XLIFF serializer', function () {
        describe('write', function () {
            it('should write a valid xliff file', function () { expect(toXliff(HTML)).toEqual(WRITE_XLIFF); });
            it('should write a valid xliff file with a source language', function () { expect(toXliff(HTML, 'fr')).toContain('file source-language="fr"'); });
        });
        describe('load', function () {
            it('should load XLIFF files', function () {
                expect(loadAsMap(LOAD_XLIFF)).toEqual({
                    '983775b9a51ce14b036be72d4cfd65d68d64e231': 'etubirtta elbatalsnart',
                    'ec1d033f2436133c14ab038286c4f5df4697484a': '<ph name="INTERPOLATION"/> footnemele elbatalsnart <ph name="START_BOLD_TEXT"/>sredlohecalp htiw<ph name="CLOSE_BOLD_TEXT"/>',
                    'e2ccf3d131b15f54aa1fcf1314b1ca77c14bfcc2': '{VAR_PLURAL, plural, =0 {[<ph name="START_PARAGRAPH"/>, TEST, <ph name="CLOSE_PARAGRAPH"/>]}}',
                    'db3e0a6a5a96481f60aec61d98c3eecddef5ac23': 'oof',
                    'i': 'toto',
                    'bar': 'tata',
                    'd7fa2d59aaedcaa5309f13028c59af8c85b8c49d': '<ph name="START_TAG_DIV"/><ph name="CLOSE_TAG_DIV"/><ph name="TAG_IMG"/><ph name="LINE_BREAK"/>',
                    'empty target': '',
                    'baz': '{VAR_PLURAL, plural, =0 {[{VAR_SELECT, select, other {[<ph name="START_PARAGRAPH"/>, profondément imbriqué, <ph name="CLOSE_PARAGRAPH"/>]}},  ]}}',
                    '52ffa620dcd76247a56d5331f34e73f340a43cdb': 'Test: <ph name="ICU"/>',
                    '1503afd0ccc20ff01d5e2266a9157b7b342ba494': '{VAR_PLURAL, plural, =0 {[{VAR_SELECT, select, other {[<ph' +
                        ' name="START_PARAGRAPH"/>, profondément imbriqué, <ph name="CLOSE_PARAGRAPH"/>]}},  ]}, =other {[beaucoup]}}',
                    'fcfa109b0e152d4c217dbc02530be0bcb8123ad1': "multi\nlignes",
                    'mrk-test': 'Translated first sentence.',
                    'mrk-test2': 'Translated first sentence.'
                });
            });
            it('should return the target locale', function () { expect(serializer.load(LOAD_XLIFF, 'url').locale).toEqual('fr'); });
            describe('structure errors', function () {
                it('should throw when a trans-unit has no translation', function () {
                    var XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit id=\"missingtarget\">\n        <source/>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>";
                    expect(function () {
                        loadAsMap(XLIFF);
                    }).toThrowError(/Message missingtarget misses a translation/);
                });
                it('should throw when a trans-unit has no id attribute', function () {
                    var XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit datatype=\"html\">\n        <source/>\n        <target/>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>";
                    expect(function () {
                        loadAsMap(XLIFF);
                    }).toThrowError(/<trans-unit> misses the "id" attribute/);
                });
                it('should throw on duplicate trans-unit id', function () {
                    var XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit id=\"deadbeef\">\n        <source/>\n        <target/>\n      </trans-unit>\n      <trans-unit id=\"deadbeef\">\n        <source/>\n        <target/>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>";
                    expect(function () {
                        loadAsMap(XLIFF);
                    }).toThrowError(/Duplicated translations for msg deadbeef/);
                });
            });
            describe('message errors', function () {
                it('should throw on unknown message tags', function () {
                    var XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit id=\"deadbeef\" datatype=\"html\">\n        <source/>\n        <target><b>msg should contain only ph tags</b></target>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>";
                    expect(function () { loadAsMap(XLIFF); })
                        .toThrowError(new RegExp(util_1.escapeRegExp("[ERROR ->]<b>msg should contain only ph tags</b>")));
                });
                it('should throw when a placeholder misses an id attribute', function () {
                    var XLIFF = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n  <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n    <body>\n      <trans-unit id=\"deadbeef\" datatype=\"html\">\n        <source/>\n        <target><x/></target>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>";
                    expect(function () {
                        loadAsMap(XLIFF);
                    }).toThrowError(new RegExp(util_1.escapeRegExp("<x> misses the \"id\" attribute")));
                });
            });
        });
    });
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmZfc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvbXBpbGVyL3Rlc3QvaTE4bi9zZXJpYWxpemVycy94bGlmZl9zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7O0dBTUc7O0FBRUgsbURBQXdEO0FBRXhELG1EQUF3RDtBQUN4RCxtRUFBK0Q7QUFDL0QsNkRBQTBEO0FBQzFELGtFQUE4RDtBQUM5RCxvRkFBeUY7QUFFekYsSUFBTSxJQUFJLEdBQUcsNmtCQWFaLENBQUM7QUFFRixJQUFNLFdBQVcsR0FBRyxvM0tBOEZuQixDQUFDO0FBRUYsSUFBTSxVQUFVLEdBQUcsb21OQWlIbEIsQ0FBQztBQUVGLENBQUM7SUFDQyxJQUFNLFVBQVUsR0FBRyxJQUFJLGFBQUssRUFBRSxDQUFDO0lBRS9CLGlCQUFpQixJQUFZLEVBQUUsTUFBNEI7UUFBNUIsdUJBQUEsRUFBQSxhQUE0QjtRQUN6RCxJQUFNLE9BQU8sR0FBRyxJQUFJLDhCQUFhLENBQUMsSUFBSSx3QkFBVSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbEUsT0FBTyxDQUFDLGtCQUFrQixDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsbURBQTRCLENBQUMsQ0FBQztRQUMxRSxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELG1CQUFtQixLQUFhO1FBQ3ZCLElBQUEsaUVBQWdCLENBQWtDO1FBRXpELElBQU0sTUFBTSxHQUEyQixFQUFFLENBQUM7UUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQzthQUN4QixPQUFPLENBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxNQUFNLENBQUMsRUFBRSxDQUFDLEdBQUcsdUJBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFF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