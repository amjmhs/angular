{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../tools/cjs-jasmine/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,YAAY,CAAC;;AAEb,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACrC,IAAM,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACzC,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;AACxC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACjD,OAAO,CAAC,+BAA+B,CAAC,CAAC;AACzC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACjC,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACrC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACtC,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC3C,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAC7B,IAAA,4EAAY,CAAqD;AAKxE,IAAM,OAAO,GAAG,IAAI,aAAa,CAAC,EAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAC,CAAC,CAAC;AACtF,MAAc,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC;AAC7C,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAExC,MAAc,CAAC,SAAS,GAAG,KAAK,CAAC;AACjC,MAAc,CAAC,MAAM,GAAG,IAAI,CAAC;AAE9B,wDAAwD;AAClD,KAAM,CAAC,iBAAiB,CAAC,GAAG,QAAQ,CAAC;AAE3C,yBAAyB;AACzB,OAAO,CAAC,OAAO,CAAC,wBAAwB,GAAG,GAAG,CAAC;AAC/C,OAAO,CAAC,UAAU,CAAC;IACjB,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,EAAE;CACb,CAAC,CAAC;AACH,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAChD,OAAO,CAAC,wBAAwB,CAAC,EAAC,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;AAC1F,OAAO,CAAC,UAAU,CAAC,UAAC,MAAe,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA5B,CAA4B,CAAC,CAAC;AAEtE,iCAAiC;AACjC,IAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC;AAC5C,IAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,IAAM,KAAK,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AAC3F,IAAM,SAAS,GACX,KAAK;KACA,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IACjC,GAAG,EAAE,OAAO;IACZ,MAAM,EAAE;QACN,4EAA4E;QAC5E,2BAA2B;QAC3B,+BAA+B;QAC/B,mCAAmC;QACnC,0CAA0C;QAC1C,gCAAgC;QAChC,sCAAsC;QACtC,+BAA+B;QAC/B,4BAA4B;QAC5B,sBAAsB;QACtB,sBAAsB;QACtB,wBAAwB;QACxB,+CAA+C;QAC/C,8BAA8B;QAC9B,sCAAsC;QACtC,mDAAmD;QACnD,uDAAuD;QACvD,qBAAqB;QACrB,yBAAyB;QACzB,oBAAoB;QACpB,kBAAkB;KACnB;CACF,CAAa,EAzBE,CAyBF,CAAC;IACf,+EAA+E;IAC/E,wDAAwD;KACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,sDAAsD,EAAE,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC;KACzF,MAAM,CAAC,CAAC,sDAAsD,CAAC,CAAC;KAChE,MAAM,CAAC,CAAC,uDAAuD,CAAC,CAAC;KACjE,MAAM,CAAC,CAAC,gEAAgE,CAAC,CAAC;KAC1E,MAAM,CAAC,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAtB,CAAsB,EAAE,EAAE,CAAC,CAAC;AAEjE,8BAA8B;AAC9B,IAAM,cAAc,GAAG,UAAC,YAAoB;IAC1C,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;IACtD,IAAI,GAAG,CAAC,IAAI,EAAE;QACZ,GAAG,CAAC,IAAI,EAAE,CAAC;KACZ;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AACF,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC3B,cAAc,CAAC,6CAA6C,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AAC1F,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAElC,gBAAgB;AAChB,OAAO,CAAC,OAAO,EAAE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n'use strict';\n\nconst glob = require('glob');\nrequire('zone.js/dist/zone-node.js');\nconst JasmineRunner = require('jasmine');\nconst path = require('path');\nrequire('source-map-support').install();\nrequire('zone.js/dist/long-stack-trace-zone.js');\nrequire('zone.js/dist/task-tracking.js');\nrequire('zone.js/dist/proxy.js');\nrequire('zone.js/dist/sync-test.js');\nrequire('zone.js/dist/async-test.js');\nrequire('zone.js/dist/fake-async-test.js');\nrequire('reflect-metadata/Reflect');\nconst {generateSeed} = require('../../../tools/jasmine-seed-generator');\n\n// Let TypeScript know this is a module\nexport {};\n\nconst jrunner = new JasmineRunner({projectBaseDir: path.resolve(__dirname, '../../')});\n(global as any)['jasmine'] = jrunner.jasmine;\nrequire('zone.js/dist/jasmine-patch.js');\n\n(global as any).isBrowser = false;\n(global as any).isNode = true;\n\n// Turn on full stack traces in errors to help debugging\n(<any>Error)['stackTraceLimit'] = Infinity;\n\n// Config the test runner\njrunner.jasmine.DEFAULT_TIMEOUT_INTERVAL = 100;\njrunner.loadConfig({\n  random: true,\n  spec_dir: '',\n});\njrunner.seed(generateSeed('cjs-jasmine/index'));\njrunner.configureDefaultReporter({showColors: process.argv.indexOf('--no-color') === -1});\njrunner.onComplete((passed: boolean) => process.exit(passed ? 0 : 1));\n\n// Support passing multiple globs\nconst distAll = process.cwd() + '/dist/all';\nconst globsIndex = process.argv.indexOf('--');\nconst globs = (globsIndex === -1) ? [process.argv[2]] : process.argv.slice(globsIndex + 1);\nconst specFiles =\n    globs\n        .map(globstr => glob.sync(globstr, {\n          cwd: distAll,\n          ignore: [\n            // the following code and tests are not compatible with CJS/node environment\n            '@angular/_testing_init/**',\n            '@angular/compiler/test/aot/**',\n            '@angular/compiler/test/render3/**',\n            '@angular/compiler-cli/test/compliance/**',\n            '@angular/core/test/bundling/**',\n            '@angular/core/test/fake_async_spec.*',\n            '@angular/core/test/render3/**',\n            '@angular/core/test/zone/**',\n            '@angular/elements/**',\n            '@angular/examples/**',\n            '@angular/forms/test/**',\n            '@angular/integration_test/symbol_inspector/**',\n            '@angular/platform-browser/**',\n            '@angular/platform-browser-dynamic/**',\n            '@angular/router/test/integration/bootstrap_spec.*',\n            '@angular/router/test/route_config/route_config_spec.*',\n            '@angular/upgrade/**',\n            '@angular/**/e2e_test/**',\n            'angular1_router/**',\n            'payload_tests/**',\n          ],\n        }) as string[])\n        // Run relevant subset of browser tests for features reused on the server side.\n        // Make sure the security spec works on the server side!\n        .concat(glob.sync('@angular/platform-browser/test/security/**/*_spec.js', {cwd: distAll}))\n        .concat(['/@angular/platform-browser/test/browser/meta_spec.js'])\n        .concat(['/@angular/platform-browser/test/browser/title_spec.js'])\n        .concat(['/@angular/platform-browser/test/browser/transfer_state_spec.js'])\n        .reduce((allPaths, paths) => allPaths.concat(paths), []);\n\n// Load helpers and spec files\nconst distAllRequire = (relativePath: string) => {\n  const mod = require(path.join(distAll, relativePath));\n  if (mod.main) {\n    mod.main();\n  }\n  return mod;\n};\nrequire('./test-cjs-main');\ndistAllRequire('@angular/platform-server/src/domino_adapter').DominoAdapter.makeCurrent();\nspecFiles.forEach(distAllRequire);\n\n// Run the tests\njrunner.execute();\n"]}